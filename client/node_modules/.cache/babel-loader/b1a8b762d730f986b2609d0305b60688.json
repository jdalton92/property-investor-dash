{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Occupier/OccupierForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form as FinalForm } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport Loader from \"../../Shared/Loader\";\nimport FinalFormField from \"../../Shared/FinalFormField\";\nimport { required, minValue, maxValue } from \"../../../utils/formValidatorHelper\";\nimport { CONSTANTS } from \"../../../static/constants\";\n\nconst OccupierForm = ({\n  id,\n  investor,\n  setModal,\n  testDashboard,\n  dashboards,\n  navigation\n}) => {\n  const onSubmit = values => {\n    setModal(\"disclaimer\");\n    values.investor = investor;\n    values.type = \"occupierInvestor\";\n    testDashboard(values);\n  };\n\n  if (dashboards.isFetching) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    });\n  } else {\n    const initialValues = dashboards.preSave || id ? dashboards.data[0].values : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f24 bold mt16 mb32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Owner Occupier Inputs\"), /*#__PURE__*/React.createElement(FinalForm, {\n      onSubmit: onSubmit,\n      mutators: { ...arrayMutators\n      },\n      initialValues: { ...initialValues\n      },\n      render: ({\n        handleSubmit,\n        values,\n        form,\n        form: {\n          mutators: {\n            push,\n            pop\n          }\n        }\n      }) => /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"f20 bold mb16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, \"Input Heading 1\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r bs-3 bg-1 p16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"House Price\",\n        placeholder: \"House Price\",\n        fieldName: \"housePrice\",\n        type: CONSTANTS.TYPES.OWNEROCCUPIER,\n        validators: [required, minValue(0), maxValue(100000000)],\n        fieldType: \"number\",\n        step: \"1\",\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Ownership Length\",\n        fieldName: \"investmentPeriod\",\n        type: \"occupierInvestor\",\n        validators: [required, minValue(0), maxValue(30)],\n        placeholder: \"Ownership Length\",\n        fieldType: \"number\",\n        step: 1,\n        append: \"years\",\n        parseType: \"parseInt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"form-button-p mr12 font-white bs-2 mt12 pt8 pb8 r\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"form-button-s font-white bs-2 mt12 pt8 pb8 r\",\n        onClick: form.reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, \"Reset\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards,\n    navigation: state.navigation\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OccupierForm);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Occupier/OccupierForm.js"],"names":["React","connect","Form","FinalForm","arrayMutators","testDashboard","setAccordian","setModal","Loader","FinalFormField","required","minValue","maxValue","CONSTANTS","OccupierForm","id","investor","dashboards","navigation","onSubmit","values","type","isFetching","initialValues","preSave","data","handleSubmit","form","mutators","push","pop","TYPES","OWNEROCCUPIER","reset","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form as FinalForm } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport Loader from \"../../Shared/Loader\";\nimport FinalFormField from \"../../Shared/FinalFormField\";\nimport {\n  required,\n  minValue,\n  maxValue,\n} from \"../../../utils/formValidatorHelper\";\nimport { CONSTANTS } from \"../../../static/constants\";\n\nconst OccupierForm = ({\n  id,\n  investor,\n  setModal,\n  testDashboard,\n  dashboards,\n  navigation,\n}) => {\n  const onSubmit = (values) => {\n    setModal(\"disclaimer\");\n    values.investor = investor;\n    values.type = \"occupierInvestor\";\n    testDashboard(values);\n  };\n\n  if (dashboards.isFetching) {\n    return <Loader />;\n  } else {\n    const initialValues =\n      dashboards.preSave || id ? dashboards.data[0].values : null;\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb32\">Owner Occupier Inputs</h1>\n        <FinalForm\n          onSubmit={onSubmit}\n          mutators={{\n            ...arrayMutators,\n          }}\n          initialValues={{\n            ...initialValues,\n          }}\n          render={({\n            handleSubmit,\n            values,\n            form,\n            form: {\n              mutators: { push, pop },\n            },\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <h2 className=\"f20 bold mb16\">Input Heading 1</h2>\n              <div className=\"r bs-3 bg-1 p16\">\n                <FinalFormField\n                  label={\"House Price\"}\n                  placeholder={\"House Price\"}\n                  fieldName={\"housePrice\"}\n                  type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                  validators={[required, minValue(0), maxValue(100000000)]}\n                  fieldType={\"number\"}\n                  step={\"1\"}\n                  prepend={\"$\"}\n                />\n                <FinalFormField\n                  label={\"Ownership Length\"}\n                  fieldName={\"investmentPeriod\"}\n                  type={\"occupierInvestor\"}\n                  validators={[required, minValue(0), maxValue(30)]}\n                  placeholder={\"Ownership Length\"}\n                  fieldType={\"number\"}\n                  step={1}\n                  append={\"years\"}\n                  parseType={\"parseInt\"}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"form-button-p mr12 font-white bs-2 mt12 pt8 pb8 r\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"form-button-s font-white bs-2 mt12 pt8 pb8 r\"\n                onClick={form.reset}\n              >\n                Reset\n              </button>\n            </form>\n          )}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n    navigation: state.navigation,\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OccupierForm);\n"]},"metadata":{},"sourceType":"module"}