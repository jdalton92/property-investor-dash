{"ast":null,"code":"export var reducerHelper=function reducerHelper(data){return data.reduce(function(accumulator,item){Object.keys(item).forEach(function(key){accumulator[key]=(accumulator[key]||0)+item[key];});return accumulator;},[]);};export var dashboardType=function dashboardType(values){if(values.type===\"developer\"){return\"Developer\";}else if(values.type===\"occupierInvestor\"&&values.investor)return\"Investor\";return\"Owner-Occupier\";};export var formatDate=function formatDate(dbDate){var date=new Date(dbDate);return new Intl.DateTimeFormat(\"en-GB\").format(date);};export var currencyFormatter=new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:0,maximumFractionDigits:0});export var percentageFormatter=new Intl.NumberFormat(\"en-US\",{style:\"percent\",minimumFractionDigits:1,maximumFractionDigits:1});var IRRHelper=function IRRHelper(cashflow){var min=-1.0;var max=1.0;var j=1;var guess=0;var NPV=0;do{guess=(min+max)/2;NPV=0;for(var i=0;i<cashflow.length;i++){NPV+=cashflow[i]/Math.pow(1+guess/12,i);}if(NPV>0){min=guess;}else{max=guess;}if(j>100){return undefined;}j++;}while(Math.abs(NPV)>0.01);return guess;};export var IRRCalculation=function IRRCalculation(data){var preCashflow=data.map(function(c){return c.preFinanceCashflow;});var postCashflow=data.map(function(c){return c.postFinanceCashflow;});var preFinance=IRRHelper(preCashflow);var postFinance=IRRHelper(postCashflow);return{preFinance:preFinance,postFinance:postFinance};};","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/utils/dashboardHelper.js"],"names":["reducerHelper","data","reduce","accumulator","item","Object","keys","forEach","key","dashboardType","values","type","investor","formatDate","dbDate","date","Date","Intl","DateTimeFormat","format","currencyFormatter","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","percentageFormatter","IRRHelper","cashflow","min","max","j","guess","NPV","i","length","Math","pow","undefined","abs","IRRCalculation","preCashflow","map","c","preFinanceCashflow","postCashflow","postFinanceCashflow","preFinance","postFinance"],"mappings":"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","sourcesContent":["export const reducerHelper = data => {\n  return data.reduce((accumulator, item) => {\n    Object.keys(item).forEach(key => {\n      accumulator[key] = (accumulator[key] || 0) + item[key];\n    });\n    return accumulator;\n  }, []);\n};\n\nexport const dashboardType = values => {\n  if (values.type === \"developer\") {\n    return \"Developer\";\n  } else if (values.type === \"occupierInvestor\" && values.investor)\n    return \"Investor\";\n  return \"Owner-Occupier\";\n};\n\nexport const formatDate = dbDate => {\n  const date = new Date(dbDate);\n  return new Intl.DateTimeFormat(\"en-GB\").format(date);\n};\n\nexport const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\n\nexport const percentageFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 1\n});\n\nconst IRRHelper = cashflow => {\n  let min = -1.0;\n  let max = 1.0;\n  let j = 1;\n  let guess = 0;\n  let NPV = 0;\n  do {\n    guess = (min + max) / 2;\n    NPV = 0;\n    for (let i = 0; i < cashflow.length; i++) {\n      NPV += cashflow[i] / Math.pow(1 + guess / 12, i);\n    }\n    if (NPV > 0) {\n      min = guess;\n    } else {\n      max = guess;\n    }\n    if (j > 100) {\n      return undefined;\n    }\n    j++;\n  } while (Math.abs(NPV) > 0.01);\n  return guess;\n};\n\nexport const IRRCalculation = data => {\n  const preCashflow = data.map(c => c.preFinanceCashflow);\n  const postCashflow = data.map(c => c.postFinanceCashflow);\n  const preFinance = IRRHelper(preCashflow);\n  const postFinance = IRRHelper(postCashflow);\n  return {\n    preFinance,\n    postFinance\n  };\n};\n"]},"metadata":{},"sourceType":"module"}