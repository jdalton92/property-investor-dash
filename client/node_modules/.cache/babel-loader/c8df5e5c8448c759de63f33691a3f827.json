{"ast":null,"code":"import _toConsumableArray from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{currencyFormatter,reducerHelper}from\"./dashboardHelper\";export var occupierInvestorCalculation=function occupierInvestorCalculation(_ref){var housePrice=_ref.housePrice,deposit=_ref.deposit,loanType=_ref.loanType,interestRate=_ref.interestRate,homeloanTerm=_ref.homeloanTerm,overPayments=_ref.overPayments,investmentPeriod=_ref.investmentPeriod,sellingCosts=_ref.sellingCosts,capitalGrowth=_ref.capitalGrowth,upfrontCosts=_ref.upfrontCosts,recurringCosts=_ref.recurringCosts,rentalYield=_ref.rentalYield,investor=_ref.investor,inflation=_ref.inflation;// If value undefined then default to zero\n// All other inputs are required\nif(!sellingCosts){sellingCosts=0;}if(!capitalGrowth){capitalGrowth=0;}if(!upfrontCosts){upfrontCosts=0;}if(!recurringCosts){recurringCosts=0;}if(!inflation){inflation=0;}if(!overPayments){overPayments=[{}];}//Initalise loan variables\nvar t=investmentPeriod*12;var r=interestRate/100;var openingBalance=0;var closingBalance=0;var monthSummary=[];//Master Loop over investment period\nvar _loop=function _loop(i){var purchasePrice=i===0?parseInt(housePrice):null;var initialCosts=i===0?purchasePrice*upfrontCosts/100:null;var grossRealisation=i===t-1?housePrice*Math.pow(1+capitalGrowth/100/12,i):null;var sellingCost=grossRealisation*sellingCosts/100;//Finance calculations\nvar debtUse=i===0?housePrice-deposit+initialCosts:null;var equityUse=i===0?parseInt(deposit):null;openingBalance=closingBalance+debtUse;var openingBalanceInterest=openingBalance*(1+r/12);var n=homeloanTerm*12-i;var monthlyRepayment=loanType===\"interestOnly\"?openingBalance*r/12:r/12*openingBalance*Math.pow(1+r/12,n)/(Math.pow(1+r/12,n)-1);var annualOverPayment=overPayments.filter(function(p){return parseInt(p===null||p===void 0?void 0:p.year)*12===i+1;}).reduce(function(a,b){return a+(b===null||b===void 0?void 0:b.payment);},0);var loanInstallment=0;if(i<=homeloanTerm*12-1){loanInstallment=monthlyRepayment+annualOverPayment>openingBalanceInterest?openingBalanceInterest:monthlyRepayment+annualOverPayment;}var principalRepayment=i===homeloanTerm*12-1||i===t-1?openingBalanceInterest-loanInstallment:null;closingBalance=openingBalanceInterest-loanInstallment-principalRepayment;// Rental income\nvar rentalIncome=investor?housePrice*Math.pow(1+capitalGrowth/100/12,i)*rentalYield/100/12:null;var opex=investor?recurringCosts/100*rentalIncome:recurringCosts/12*Math.pow(1+inflation/100/12,i);var preFinanceCashflow=-purchasePrice-initialCosts-opex+rentalIncome+grossRealisation-sellingCost;var postFinanceCashflow=preFinanceCashflow+debtUse-loanInstallment-principalRepayment;monthSummary.push({month:i+1,year:Math.ceil((i+1)/12),purchasePrice:purchasePrice,initialCosts:initialCosts,rentalIncome:rentalIncome,opex:opex,grossRealisation:grossRealisation,sellingCost:sellingCost,preFinanceCashflow:preFinanceCashflow,openingBalance:openingBalance,equityUse:equityUse,debtUse:debtUse,interest:openingBalanceInterest-openingBalance,loanInstallment:loanInstallment,principalRepayment:principalRepayment,closingBalance:closingBalance,postFinanceCashflow:postFinanceCashflow});};for(var i=0;i<t;i++){_loop(i);}return monthSummary;};export var cumulativeChartParse=function cumulativeChartParse(data){var labels=data.map(function(c){return c.month;});var cumulativeCashflow=data.reduce(function(acc,c){acc.push(c.postFinanceCashflow+(acc.length>0?acc[acc.length-1]:0));return acc;},[]);var dataObject={data:{datasets:[{data:_toConsumableArray(cumulativeCashflow),fill:true,backgroundColor:\"#92bed2\",pointBackgroundColor:\"#3282bf\",borderColor:\"#3282bf\",pointHighlightStroke:\"#3282bf\",borderCapStyle:\"butt\"}],labels:_toConsumableArray(labels)},options:{maintainAspectRatio:false,scales:{yAxes:[{ticks:{// Include a dollar sign in the ticks\ncallback:function callback(value){return currencyFormatter.format(value);}}}],xAxes:[{scaleLabel:{display:true,labelString:\"Month\"}}]},tooltips:{callbacks:{label:function label(tooltipItem,data){return currencyFormatter.format(tooltipItem.yLabel);},beforeTitle:function beforeTitle(tooltipItem,object){return\"Month\";}}},legend:{display:false}}};return dataObject;};export var cardParse=function cardParse(data){var summaryData=reducerHelper(data);var dataObject={months:data.length,rentalIncome:summaryData.rentalIncome,opex:summaryData.opex,mortgageInterest:summaryData.interest,mortgagePayment:summaryData.loanInstallment,profit:summaryData.postFinanceCashflow};return dataObject;};export var tableParse=function tableParse(data){var tableData={summaryCashflow:[],annualCashflow:[]};var _loop2=function _loop2(i){var annualData=reducerHelper(data.filter(function(d){return d.year===i;}));tableData.annualCashflow.push({year:i,acquisitionCosts:-annualData.purchasePrice-annualData.initialCosts,rentalIncome:annualData.rentalIncome,opex:-annualData.opex,netSale:annualData.grossRealisation-annualData.sellingCost,preFinanceCashflow:annualData.preFinanceCashflow,debtUse:annualData.debtUse,equityUse:-annualData.equityUse,fundingCost:-annualData.loanInstallment-annualData.principalRepayment,postFinanceCashflow:annualData.postFinanceCashflow,totalIncome:annualData.rentalIncome+annualData.grossRealisation,totalCost:-annualData.equityUse-annualData.initialCosts-annualData.opex-annualData.sellingCost-annualData.loanInstallment-annualData.principalRepayment});};for(var i=1;i<=Math.ceil(data.length/12);i++){_loop2(i);}var summaryData=reducerHelper(data);tableData.summaryCashflow.push({year:null,acquisitionCosts:-summaryData.purchasePrice-summaryData.initialCosts,rentalIncome:summaryData.rentalIncome,opex:-summaryData.opex,netSale:summaryData.grossRealisation-summaryData.sellingCost,preFinanceCashflow:summaryData.preFinanceCashflow,debtUse:summaryData.debtUse,equityUse:-summaryData.equityUse,fundingCost:-summaryData.loanInstallment-summaryData.principalRepayment,postFinanceCashflow:summaryData.postFinanceCashflow,totalIncome:summaryData.rentalIncome+summaryData.grossRealisation,totalCost:-summaryData.equityUse-summaryData.initialCosts-summaryData.opex-summaryData.sellingCost-summaryData.loanInstallment-summaryData.principalRepayment});return tableData;};export var occupierInvestorMOCCalculation=function occupierInvestorMOCCalculation(data){var summaryData=data.reduce(function(accumulator,item){Object.keys(item).forEach(function(key){accumulator[key]=(accumulator[key]||0)+item[key];});return accumulator;},[]);var netProfit=summaryData.postFinanceCashflow;var cost=summaryData.purchasePrice+summaryData.initialCosts+summaryData.opex+summaryData.loanInstallment+summaryData.sellingCost;return netProfit/cost;};","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/utils/occupierAndInvestorDataParser.js"],"names":["currencyFormatter","reducerHelper","occupierInvestorCalculation","housePrice","deposit","loanType","interestRate","homeloanTerm","overPayments","investmentPeriod","sellingCosts","capitalGrowth","upfrontCosts","recurringCosts","rentalYield","investor","inflation","t","r","openingBalance","closingBalance","monthSummary","i","purchasePrice","parseInt","initialCosts","grossRealisation","Math","pow","sellingCost","debtUse","equityUse","openingBalanceInterest","n","monthlyRepayment","annualOverPayment","filter","p","year","reduce","a","b","payment","loanInstallment","principalRepayment","rentalIncome","opex","preFinanceCashflow","postFinanceCashflow","push","month","ceil","interest","cumulativeChartParse","data","labels","map","c","cumulativeCashflow","acc","length","dataObject","datasets","fill","backgroundColor","pointBackgroundColor","borderColor","pointHighlightStroke","borderCapStyle","options","maintainAspectRatio","scales","yAxes","ticks","callback","value","format","xAxes","scaleLabel","display","labelString","tooltips","callbacks","label","tooltipItem","yLabel","beforeTitle","object","legend","cardParse","summaryData","months","mortgageInterest","mortgagePayment","profit","tableParse","tableData","summaryCashflow","annualCashflow","annualData","d","acquisitionCosts","netSale","fundingCost","totalIncome","totalCost","occupierInvestorMOCCalculation","accumulator","item","Object","keys","forEach","key","netProfit","cost"],"mappings":"oLAAA,OAASA,iBAAT,CAA4BC,aAA5B,KAAiD,mBAAjD,CAEA,MAAO,IAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,MAerC,IAdJC,CAAAA,UAcI,MAdJA,UAcI,CAbJC,OAaI,MAbJA,OAaI,CAZJC,QAYI,MAZJA,QAYI,CAXJC,YAWI,MAXJA,YAWI,CAVJC,YAUI,MAVJA,YAUI,CATJC,YASI,MATJA,YASI,CARJC,gBAQI,MARJA,gBAQI,CAPJC,YAOI,MAPJA,YAOI,CANJC,aAMI,MANJA,aAMI,CALJC,YAKI,MALJA,YAKI,CAJJC,cAII,MAJJA,cAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,SACI,MADJA,SACI,CACJ;AACA;AACA,GAAI,CAACN,YAAL,CAAmB,CACjBA,YAAY,CAAG,CAAf,CACD,CACD,GAAI,CAACC,aAAL,CAAoB,CAClBA,aAAa,CAAG,CAAhB,CACD,CACD,GAAI,CAACC,YAAL,CAAmB,CACjBA,YAAY,CAAG,CAAf,CACD,CACD,GAAI,CAACC,cAAL,CAAqB,CACnBA,cAAc,CAAG,CAAjB,CACD,CACD,GAAI,CAACG,SAAL,CAAgB,CACdA,SAAS,CAAG,CAAZ,CACD,CACD,GAAI,CAACR,YAAL,CAAmB,CACjBA,YAAY,CAAG,CAAC,EAAD,CAAf,CACD,CACD;AACA,GAAMS,CAAAA,CAAC,CAAGR,gBAAgB,CAAG,EAA7B,CACA,GAAMS,CAAAA,CAAC,CAAGZ,YAAY,CAAG,GAAzB,CACA,GAAIa,CAAAA,cAAc,CAAG,CAArB,CACA,GAAIC,CAAAA,cAAc,CAAG,CAArB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAEA;AA5BI,yBA6BKC,CA7BL,EA8BF,GAAMC,CAAAA,aAAa,CAAGD,CAAC,GAAK,CAAN,CAAUE,QAAQ,CAACrB,UAAD,CAAlB,CAAiC,IAAvD,CACA,GAAMsB,CAAAA,YAAY,CAAGH,CAAC,GAAK,CAAN,CAAWC,aAAa,CAAGX,YAAjB,CAAiC,GAA3C,CAAiD,IAAtE,CAEA,GAAMc,CAAAA,gBAAgB,CACpBJ,CAAC,GAAKL,CAAC,CAAG,CAAV,CACId,UAAU,CAAGwB,IAAI,CAACC,GAAL,CAAS,EAAIjB,aAAa,CAAG,GAAhB,CAAsB,EAAnC,CAAuCW,CAAvC,CADjB,CAEI,IAHN,CAKA,GAAMO,CAAAA,WAAW,CAAIH,gBAAgB,CAAGhB,YAApB,CAAoC,GAAxD,CAEA;AACA,GAAMoB,CAAAA,OAAO,CAAGR,CAAC,GAAK,CAAN,CAAUnB,UAAU,CAAGC,OAAb,CAAuBqB,YAAjC,CAAgD,IAAhE,CACA,GAAMM,CAAAA,SAAS,CAAGT,CAAC,GAAK,CAAN,CAAUE,QAAQ,CAACpB,OAAD,CAAlB,CAA8B,IAAhD,CAEAe,cAAc,CAAGC,cAAc,CAAGU,OAAlC,CAEA,GAAME,CAAAA,sBAAsB,CAAGb,cAAc,EAAI,EAAID,CAAC,CAAG,EAAZ,CAA7C,CAEA,GAAMe,CAAAA,CAAC,CAAG1B,YAAY,CAAG,EAAf,CAAoBe,CAA9B,CACA,GAAMY,CAAAA,gBAAgB,CACpB7B,QAAQ,GAAK,cAAb,CACKc,cAAc,CAAGD,CAAlB,CAAuB,EAD3B,CAEMA,CAAC,CAAG,EAAL,CAAWC,cAAX,CAA4BQ,IAAI,CAACC,GAAL,CAAS,EAAIV,CAAC,CAAG,EAAjB,CAAqBe,CAArB,CAA7B,EACCN,IAAI,CAACC,GAAL,CAAS,EAAIV,CAAC,CAAG,EAAjB,CAAqBe,CAArB,EAA0B,CAD3B,CAHN,CAMA,GAAME,CAAAA,iBAAiB,CAAG3B,YAAY,CACnC4B,MADuB,CAChB,SAACC,CAAD,QAAOb,CAAAA,QAAQ,CAACa,CAAD,SAACA,CAAD,iBAACA,CAAC,CAAEC,IAAJ,CAAR,CAAoB,EAApB,GAA2BhB,CAAC,CAAG,CAAtC,EADgB,EAEvBiB,MAFuB,CAEhB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,EAAGC,CAAH,SAAGA,CAAH,iBAAGA,CAAC,CAAEC,OAAN,CAAX,EAFgB,CAEU,CAFV,CAA1B,CAIA,GAAIC,CAAAA,eAAe,CAAG,CAAtB,CACA,GAAIrB,CAAC,EAAIf,YAAY,CAAG,EAAf,CAAoB,CAA7B,CAAgC,CAC9BoC,eAAe,CACbT,gBAAgB,CAAGC,iBAAnB,CAAuCH,sBAAvC,CACIA,sBADJ,CAEIE,gBAAgB,CAAGC,iBAHzB,CAID,CAED,GAAMS,CAAAA,kBAAkB,CACtBtB,CAAC,GAAKf,YAAY,CAAG,EAAf,CAAoB,CAA1B,EAA+Be,CAAC,GAAKL,CAAC,CAAG,CAAzC,CACIe,sBAAsB,CAAGW,eAD7B,CAEI,IAHN,CAKAvB,cAAc,CACZY,sBAAsB,CAAGW,eAAzB,CAA2CC,kBAD7C,CAGA;AACA,GAAMC,CAAAA,YAAY,CAAG9B,QAAQ,CACxBZ,UAAU,CAAGwB,IAAI,CAACC,GAAL,CAAS,EAAIjB,aAAa,CAAG,GAAhB,CAAsB,EAAnC,CAAuCW,CAAvC,CAAb,CAAyDR,WAA1D,CACA,GADA,CAEA,EAHyB,CAIzB,IAJJ,CAKA,GAAMgC,CAAAA,IAAI,CAAG/B,QAAQ,CAChBF,cAAc,CAAG,GAAlB,CAAyBgC,YADR,CAEhBhC,cAAc,CAAG,EAAlB,CAAwBc,IAAI,CAACC,GAAL,CAAS,EAAIZ,SAAS,CAAG,GAAZ,CAAkB,EAA/B,CAAmCM,CAAnC,CAF5B,CAIA,GAAMyB,CAAAA,kBAAkB,CACtB,CAACxB,aAAD,CACAE,YADA,CAEAqB,IAFA,CAGAD,YAHA,CAIAnB,gBAJA,CAKAG,WANF,CAQA,GAAMmB,CAAAA,mBAAmB,CACvBD,kBAAkB,CAAGjB,OAArB,CAA+Ba,eAA/B,CAAiDC,kBADnD,CAGAvB,YAAY,CAAC4B,IAAb,CAAkB,CAChBC,KAAK,CAAE5B,CAAC,CAAG,CADK,CAEhBgB,IAAI,CAAEX,IAAI,CAACwB,IAAL,CAAU,CAAC7B,CAAC,CAAG,CAAL,EAAU,EAApB,CAFU,CAGhBC,aAAa,CAAbA,aAHgB,CAIhBE,YAAY,CAAZA,YAJgB,CAKhBoB,YAAY,CAAZA,YALgB,CAMhBC,IAAI,CAAJA,IANgB,CAOhBpB,gBAAgB,CAAhBA,gBAPgB,CAQhBG,WAAW,CAAXA,WARgB,CAShBkB,kBAAkB,CAAlBA,kBATgB,CAUhB5B,cAAc,CAAdA,cAVgB,CAWhBY,SAAS,CAATA,SAXgB,CAYhBD,OAAO,CAAPA,OAZgB,CAahBsB,QAAQ,CAAEpB,sBAAsB,CAAGb,cAbnB,CAchBwB,eAAe,CAAfA,eAdgB,CAehBC,kBAAkB,CAAlBA,kBAfgB,CAgBhBxB,cAAc,CAAdA,cAhBgB,CAiBhB4B,mBAAmB,CAAnBA,mBAjBgB,CAAlB,EAhGE,EA6BJ,IAAK,GAAI1B,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,CAApB,CAAuBK,CAAC,EAAxB,CAA4B,OAAnBA,CAAmB,EAsF3B,CACD,MAAOD,CAAAA,YAAP,CACD,CApIM,CAsIP,MAAO,IAAMgC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,IAAD,CAAU,CAC5C,GAAMC,CAAAA,MAAM,CAAGD,IAAI,CAACE,GAAL,CAAS,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACP,KAAT,EAAT,CAAf,CACA,GAAMQ,CAAAA,kBAAkB,CAAGJ,IAAI,CAACf,MAAL,CAAY,SAACoB,GAAD,CAAMF,CAAN,CAAY,CACjDE,GAAG,CAACV,IAAJ,CACEQ,CAAC,CAACT,mBAAF,EAAyBW,GAAG,CAACC,MAAJ,CAAa,CAAb,CAAiBD,GAAG,CAACA,GAAG,CAACC,MAAJ,CAAa,CAAd,CAApB,CAAuC,CAAhE,CADF,EAGA,MAAOD,CAAAA,GAAP,CACD,CAL0B,CAKxB,EALwB,CAA3B,CAOA,GAAME,CAAAA,UAAU,CAAG,CACjBP,IAAI,CAAE,CACJQ,QAAQ,CAAE,CACR,CACER,IAAI,oBAAMI,kBAAN,CADN,CAEEK,IAAI,CAAE,IAFR,CAGEC,eAAe,CAAE,SAHnB,CAIEC,oBAAoB,CAAE,SAJxB,CAKEC,WAAW,CAAE,SALf,CAMEC,oBAAoB,CAAE,SANxB,CAOEC,cAAc,CAAE,MAPlB,CADQ,CADN,CAYJb,MAAM,oBAAMA,MAAN,CAZF,CADW,CAejBc,OAAO,CAAE,CACPC,mBAAmB,CAAE,KADd,CAEPC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,KAAK,CAAE,CACL;AACAC,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnB,MAAO3E,CAAAA,iBAAiB,CAAC4E,MAAlB,CAAyBD,KAAzB,CAAP,CACD,CAJI,CADT,CADK,CADD,CAWNE,KAAK,CAAE,CACL,CACEC,UAAU,CAAE,CACVC,OAAO,CAAE,IADC,CAEVC,WAAW,CAAE,OAFH,CADd,CADK,CAXD,CAFD,CAsBPC,QAAQ,CAAE,CACRC,SAAS,CAAE,CACTC,KAAK,CAAE,eAACC,WAAD,CAAc9B,IAAd,CAAuB,CAC5B,MAAOtD,CAAAA,iBAAiB,CAAC4E,MAAlB,CAAyBQ,WAAW,CAACC,MAArC,CAAP,CACD,CAHQ,CAITC,WAAW,CAAE,qBAACF,WAAD,CAAcG,MAAd,CAAyB,CACpC,MAAO,OAAP,CACD,CANQ,CADH,CAtBH,CAgCPC,MAAM,CAAE,CACNT,OAAO,CAAE,KADH,CAhCD,CAfQ,CAAnB,CAoDA,MAAOlB,CAAAA,UAAP,CACD,CA9DM,CAgEP,MAAO,IAAM4B,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACnC,IAAD,CAAU,CACjC,GAAMoC,CAAAA,WAAW,CAAGzF,aAAa,CAACqD,IAAD,CAAjC,CAEA,GAAMO,CAAAA,UAAU,CAAG,CACjB8B,MAAM,CAAErC,IAAI,CAACM,MADI,CAEjBf,YAAY,CAAE6C,WAAW,CAAC7C,YAFT,CAGjBC,IAAI,CAAE4C,WAAW,CAAC5C,IAHD,CAIjB8C,gBAAgB,CAAEF,WAAW,CAACtC,QAJb,CAKjByC,eAAe,CAAEH,WAAW,CAAC/C,eALZ,CAMjBmD,MAAM,CAAEJ,WAAW,CAAC1C,mBANH,CAAnB,CASA,MAAOa,CAAAA,UAAP,CACD,CAbM,CAeP,MAAO,IAAMkC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACzC,IAAD,CAAU,CAClC,GAAI0C,CAAAA,SAAS,CAAG,CACdC,eAAe,CAAE,EADH,CAEdC,cAAc,CAAE,EAFF,CAAhB,CADkC,2BAMzB5E,CANyB,EAOhC,GAAM6E,CAAAA,UAAU,CAAGlG,aAAa,CAACqD,IAAI,CAAClB,MAAL,CAAY,SAACgE,CAAD,QAAOA,CAAAA,CAAC,CAAC9D,IAAF,GAAWhB,CAAlB,EAAZ,CAAD,CAAhC,CAEA0E,SAAS,CAACE,cAAV,CAAyBjD,IAAzB,CAA8B,CAC5BX,IAAI,CAAEhB,CADsB,CAE5B+E,gBAAgB,CAAE,CAACF,UAAU,CAAC5E,aAAZ,CAA4B4E,UAAU,CAAC1E,YAF7B,CAG5BoB,YAAY,CAAEsD,UAAU,CAACtD,YAHG,CAI5BC,IAAI,CAAE,CAACqD,UAAU,CAACrD,IAJU,CAK5BwD,OAAO,CAAEH,UAAU,CAACzE,gBAAX,CAA8ByE,UAAU,CAACtE,WALtB,CAM5BkB,kBAAkB,CAAEoD,UAAU,CAACpD,kBANH,CAO5BjB,OAAO,CAAEqE,UAAU,CAACrE,OAPQ,CAQ5BC,SAAS,CAAE,CAACoE,UAAU,CAACpE,SARK,CAS5BwE,WAAW,CAAE,CAACJ,UAAU,CAACxD,eAAZ,CAA8BwD,UAAU,CAACvD,kBAT1B,CAU5BI,mBAAmB,CAAEmD,UAAU,CAACnD,mBAVJ,CAW5BwD,WAAW,CAAEL,UAAU,CAACtD,YAAX,CAA0BsD,UAAU,CAACzE,gBAXtB,CAY5B+E,SAAS,CACP,CAACN,UAAU,CAACpE,SAAZ,CACAoE,UAAU,CAAC1E,YADX,CAEA0E,UAAU,CAACrD,IAFX,CAGAqD,UAAU,CAACtE,WAHX,CAIAsE,UAAU,CAACxD,eAJX,CAKAwD,UAAU,CAACvD,kBAlBe,CAA9B,EATgC,EAMlC,IAAK,GAAItB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIK,IAAI,CAACwB,IAAL,CAAUG,IAAI,CAACM,MAAL,CAAc,EAAxB,CAArB,CAAkDtC,CAAC,EAAnD,CAAuD,QAA9CA,CAA8C,EAuBtD,CAED,GAAMoE,CAAAA,WAAW,CAAGzF,aAAa,CAACqD,IAAD,CAAjC,CAEA0C,SAAS,CAACC,eAAV,CAA0BhD,IAA1B,CAA+B,CAC7BX,IAAI,CAAE,IADuB,CAE7B+D,gBAAgB,CAAE,CAACX,WAAW,CAACnE,aAAb,CAA6BmE,WAAW,CAACjE,YAF9B,CAG7BoB,YAAY,CAAE6C,WAAW,CAAC7C,YAHG,CAI7BC,IAAI,CAAE,CAAC4C,WAAW,CAAC5C,IAJU,CAK7BwD,OAAO,CAAEZ,WAAW,CAAChE,gBAAZ,CAA+BgE,WAAW,CAAC7D,WALvB,CAM7BkB,kBAAkB,CAAE2C,WAAW,CAAC3C,kBANH,CAO7BjB,OAAO,CAAE4D,WAAW,CAAC5D,OAPQ,CAQ7BC,SAAS,CAAE,CAAC2D,WAAW,CAAC3D,SARK,CAS7BwE,WAAW,CAAE,CAACb,WAAW,CAAC/C,eAAb,CAA+B+C,WAAW,CAAC9C,kBAT3B,CAU7BI,mBAAmB,CAAE0C,WAAW,CAAC1C,mBAVJ,CAW7BwD,WAAW,CAAEd,WAAW,CAAC7C,YAAZ,CAA2B6C,WAAW,CAAChE,gBAXvB,CAY7B+E,SAAS,CACP,CAACf,WAAW,CAAC3D,SAAb,CACA2D,WAAW,CAACjE,YADZ,CAEAiE,WAAW,CAAC5C,IAFZ,CAGA4C,WAAW,CAAC7D,WAHZ,CAIA6D,WAAW,CAAC/C,eAJZ,CAKA+C,WAAW,CAAC9C,kBAlBe,CAA/B,EAoBA,MAAOoD,CAAAA,SAAP,CACD,CAtDM,CAwDP,MAAO,IAAMU,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAACpD,IAAD,CAAU,CACtD,GAAMoC,CAAAA,WAAW,CAAGpC,IAAI,CAACf,MAAL,CAAY,SAACoE,WAAD,CAAcC,IAAd,CAAuB,CACrDC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,OAAlB,CAA0B,SAACC,GAAD,CAAS,CACjCL,WAAW,CAACK,GAAD,CAAX,CAAmB,CAACL,WAAW,CAACK,GAAD,CAAX,EAAoB,CAArB,EAA0BJ,IAAI,CAACI,GAAD,CAAjD,CACD,CAFD,EAGA,MAAOL,CAAAA,WAAP,CACD,CALmB,CAKjB,EALiB,CAApB,CAOA,GAAMM,CAAAA,SAAS,CAAGvB,WAAW,CAAC1C,mBAA9B,CACA,GAAMkE,CAAAA,IAAI,CACRxB,WAAW,CAACnE,aAAZ,CACAmE,WAAW,CAACjE,YADZ,CAEAiE,WAAW,CAAC5C,IAFZ,CAGA4C,WAAW,CAAC/C,eAHZ,CAIA+C,WAAW,CAAC7D,WALd,CAOA,MAAOoF,CAAAA,SAAS,CAAGC,IAAnB,CACD,CAjBM","sourcesContent":["import { currencyFormatter, reducerHelper } from \"./dashboardHelper\";\n\nexport const occupierInvestorCalculation = ({\n  housePrice,\n  deposit,\n  loanType,\n  interestRate,\n  homeloanTerm,\n  overPayments,\n  investmentPeriod,\n  sellingCosts,\n  capitalGrowth,\n  upfrontCosts,\n  recurringCosts,\n  rentalYield,\n  investor,\n  inflation,\n}) => {\n  // If value undefined then default to zero\n  // All other inputs are required\n  if (!sellingCosts) {\n    sellingCosts = 0;\n  }\n  if (!capitalGrowth) {\n    capitalGrowth = 0;\n  }\n  if (!upfrontCosts) {\n    upfrontCosts = 0;\n  }\n  if (!recurringCosts) {\n    recurringCosts = 0;\n  }\n  if (!inflation) {\n    inflation = 0;\n  }\n  if (!overPayments) {\n    overPayments = [{}];\n  }\n  //Initalise loan variables\n  const t = investmentPeriod * 12;\n  const r = interestRate / 100;\n  let openingBalance = 0;\n  let closingBalance = 0;\n  let monthSummary = [];\n\n  //Master Loop over investment period\n  for (let i = 0; i < t; i++) {\n    const purchasePrice = i === 0 ? parseInt(housePrice) : null;\n    const initialCosts = i === 0 ? (purchasePrice * upfrontCosts) / 100 : null;\n\n    const grossRealisation =\n      i === t - 1\n        ? housePrice * Math.pow(1 + capitalGrowth / 100 / 12, i)\n        : null;\n\n    const sellingCost = (grossRealisation * sellingCosts) / 100;\n\n    //Finance calculations\n    const debtUse = i === 0 ? housePrice - deposit + initialCosts : null;\n    const equityUse = i === 0 ? parseInt(deposit) : null;\n\n    openingBalance = closingBalance + debtUse;\n\n    const openingBalanceInterest = openingBalance * (1 + r / 12);\n\n    const n = homeloanTerm * 12 - i;\n    const monthlyRepayment =\n      loanType === \"interestOnly\"\n        ? (openingBalance * r) / 12\n        : ((r / 12) * openingBalance * Math.pow(1 + r / 12, n)) /\n          (Math.pow(1 + r / 12, n) - 1);\n\n    const annualOverPayment = overPayments\n      .filter((p) => parseInt(p?.year) * 12 === i + 1)\n      .reduce((a, b) => a + b?.payment, 0);\n\n    let loanInstallment = 0;\n    if (i <= homeloanTerm * 12 - 1) {\n      loanInstallment =\n        monthlyRepayment + annualOverPayment > openingBalanceInterest\n          ? openingBalanceInterest\n          : monthlyRepayment + annualOverPayment;\n    }\n\n    const principalRepayment =\n      i === homeloanTerm * 12 - 1 || i === t - 1\n        ? openingBalanceInterest - loanInstallment\n        : null;\n\n    closingBalance =\n      openingBalanceInterest - loanInstallment - principalRepayment;\n\n    // Rental income\n    const rentalIncome = investor\n      ? (housePrice * Math.pow(1 + capitalGrowth / 100 / 12, i) * rentalYield) /\n        100 /\n        12\n      : null;\n    const opex = investor\n      ? (recurringCosts / 100) * rentalIncome\n      : (recurringCosts / 12) * Math.pow(1 + inflation / 100 / 12, i);\n\n    const preFinanceCashflow =\n      -purchasePrice -\n      initialCosts -\n      opex +\n      rentalIncome +\n      grossRealisation -\n      sellingCost;\n\n    const postFinanceCashflow =\n      preFinanceCashflow + debtUse - loanInstallment - principalRepayment;\n\n    monthSummary.push({\n      month: i + 1,\n      year: Math.ceil((i + 1) / 12),\n      purchasePrice,\n      initialCosts,\n      rentalIncome,\n      opex,\n      grossRealisation,\n      sellingCost,\n      preFinanceCashflow,\n      openingBalance,\n      equityUse,\n      debtUse,\n      interest: openingBalanceInterest - openingBalance,\n      loanInstallment,\n      principalRepayment,\n      closingBalance,\n      postFinanceCashflow,\n    });\n  }\n  return monthSummary;\n};\n\nexport const cumulativeChartParse = (data) => {\n  const labels = data.map((c) => c.month);\n  const cumulativeCashflow = data.reduce((acc, c) => {\n    acc.push(\n      c.postFinanceCashflow + (acc.length > 0 ? acc[acc.length - 1] : 0)\n    );\n    return acc;\n  }, []);\n\n  const dataObject = {\n    data: {\n      datasets: [\n        {\n          data: [...cumulativeCashflow],\n          fill: true,\n          backgroundColor: \"#92bed2\",\n          pointBackgroundColor: \"#3282bf\",\n          borderColor: \"#3282bf\",\n          pointHighlightStroke: \"#3282bf\",\n          borderCapStyle: \"butt\",\n        },\n      ],\n      labels: [...labels],\n    },\n    options: {\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // Include a dollar sign in the ticks\n              callback: (value) => {\n                return currencyFormatter.format(value);\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Month\",\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          label: (tooltipItem, data) => {\n            return currencyFormatter.format(tooltipItem.yLabel);\n          },\n          beforeTitle: (tooltipItem, object) => {\n            return \"Month\";\n          },\n        },\n      },\n      legend: {\n        display: false,\n      },\n    },\n  };\n  return dataObject;\n};\n\nexport const cardParse = (data) => {\n  const summaryData = reducerHelper(data);\n\n  const dataObject = {\n    months: data.length,\n    rentalIncome: summaryData.rentalIncome,\n    opex: summaryData.opex,\n    mortgageInterest: summaryData.interest,\n    mortgagePayment: summaryData.loanInstallment,\n    profit: summaryData.postFinanceCashflow,\n  };\n\n  return dataObject;\n};\n\nexport const tableParse = (data) => {\n  let tableData = {\n    summaryCashflow: [],\n    annualCashflow: [],\n  };\n\n  for (let i = 1; i <= Math.ceil(data.length / 12); i++) {\n    const annualData = reducerHelper(data.filter((d) => d.year === i));\n\n    tableData.annualCashflow.push({\n      year: i,\n      acquisitionCosts: -annualData.purchasePrice - annualData.initialCosts,\n      rentalIncome: annualData.rentalIncome,\n      opex: -annualData.opex,\n      netSale: annualData.grossRealisation - annualData.sellingCost,\n      preFinanceCashflow: annualData.preFinanceCashflow,\n      debtUse: annualData.debtUse,\n      equityUse: -annualData.equityUse,\n      fundingCost: -annualData.loanInstallment - annualData.principalRepayment,\n      postFinanceCashflow: annualData.postFinanceCashflow,\n      totalIncome: annualData.rentalIncome + annualData.grossRealisation,\n      totalCost:\n        -annualData.equityUse -\n        annualData.initialCosts -\n        annualData.opex -\n        annualData.sellingCost -\n        annualData.loanInstallment -\n        annualData.principalRepayment,\n    });\n  }\n\n  const summaryData = reducerHelper(data);\n\n  tableData.summaryCashflow.push({\n    year: null,\n    acquisitionCosts: -summaryData.purchasePrice - summaryData.initialCosts,\n    rentalIncome: summaryData.rentalIncome,\n    opex: -summaryData.opex,\n    netSale: summaryData.grossRealisation - summaryData.sellingCost,\n    preFinanceCashflow: summaryData.preFinanceCashflow,\n    debtUse: summaryData.debtUse,\n    equityUse: -summaryData.equityUse,\n    fundingCost: -summaryData.loanInstallment - summaryData.principalRepayment,\n    postFinanceCashflow: summaryData.postFinanceCashflow,\n    totalIncome: summaryData.rentalIncome + summaryData.grossRealisation,\n    totalCost:\n      -summaryData.equityUse -\n      summaryData.initialCosts -\n      summaryData.opex -\n      summaryData.sellingCost -\n      summaryData.loanInstallment -\n      summaryData.principalRepayment,\n  });\n  return tableData;\n};\n\nexport const occupierInvestorMOCCalculation = (data) => {\n  const summaryData = data.reduce((accumulator, item) => {\n    Object.keys(item).forEach((key) => {\n      accumulator[key] = (accumulator[key] || 0) + item[key];\n    });\n    return accumulator;\n  }, []);\n\n  const netProfit = summaryData.postFinanceCashflow;\n  const cost =\n    summaryData.purchasePrice +\n    summaryData.initialCosts +\n    summaryData.opex +\n    summaryData.loanInstallment +\n    summaryData.sellingCost;\n\n  return netProfit / cost;\n};\n"]},"metadata":{},"sourceType":"module"}