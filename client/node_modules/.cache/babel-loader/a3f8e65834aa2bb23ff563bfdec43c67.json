{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/DeveloperForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { testDashboard } from \"../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport HelperMessage from \"../Shared/HelperMessage\";\nimport Loader from \"../Shared/Loader\";\nimport OwnerOccupierInvestorInputs from \"./OwnerOccupierInvestorInputs\";\n\nconst DeveloperForm = ({\n  id,\n  testDashboard,\n  dashboards\n}) => {\n  const history = useHistory();\n\n  const onSubmit = values => {\n    testDashboard(values);\n    history.push(\"/developer/dash\");\n  };\n\n  const helperMessage = `Developer Inputs`;\n\n  if (dashboards.isFetching) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n    const initialValues = {\n      housePrice: 1000000,\n      deposit: 200000,\n      loanType: \"principalAndInterest\",\n      interestRate: 3.5,\n      homeloanTerm: 30,\n      overPayments: [{}],\n      investmentPeriod: 15,\n      sellingCosts: 3,\n      capitalGrowth: 3.5,\n      upfrontCosts: 3,\n      recurringCosts: 1000,\n      rentalYield: 3,\n      investor: false,\n      inflation: 3\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f24 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Developer Inputs\"), /*#__PURE__*/React.createElement(HelperMessage, {\n      type: CONSTANTS.HELPERMESSAGES.DEVELOPER,\n      body: helperMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onSubmit,\n      mutators: { ...arrayMutators\n      },\n      initialValues: { ...initialValues\n      },\n      render: ({\n        handleSubmit,\n        values,\n        form,\n        form: {\n          mutators: {\n            push,\n            pop\n          }\n        }\n      }) => /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"f20 bold mt16 mb16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, \"Base Assumptions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r bs-3 bg-1 p20 mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, investor ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"House Price\",\n        placeholder: \"House Price\",\n        fieldName: \"housePrice\",\n        type: CONSTANTS.TYPES.OWNEROCCUPIER,\n        validators: [required, minValue(0), maxValue(100000000)],\n        fieldType: \"number\",\n        step: \"1\",\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Rental Yield\",\n        fieldName: \"rentalYield\",\n        type: CONSTANTS.TYPES.OWNEROCCUPIER,\n        validators: [required, minValue(0), maxValue(100)],\n        placeholder: \"Rental Yield\",\n        fieldType: \"number\",\n        maxLength: 3,\n        step: 0.1,\n        append: \"% pa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }\n      }))) : /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"House Price\",\n        placeholder: \"House Price\",\n        fieldName: \"housePrice\",\n        type: CONSTANTS.TYPES.OWNEROCCUPIER,\n        validators: [required, minValue(0), maxValue(100000000)],\n        fieldType: \"number\",\n        step: \"1\",\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Ownership Length\",\n        fieldName: \"investmentPeriod\",\n        type: CONSTANTS.TYPES.OWNEROCCUPIER,\n        validators: [required, minValue(0), maxValue(30)],\n        placeholder: \"Ownership Length\",\n        fieldType: \"number\",\n        step: 1,\n        append: \"years\",\n        parseType: \"parseInt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Home Capital Growth\",\n        fieldName: \"capitalGrowth\",\n        type: CONSTANTS.TYPES.OWNEROCCUPIER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Home Capital Growth\",\n        fieldType: \"number\",\n        step: 0.01,\n        append: \"% pa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeveloperForm);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/DeveloperForm.js"],"names":["React","connect","useHistory","testDashboard","setAccordian","setModal","CONSTANTS","HelperMessage","Loader","OwnerOccupierInvestorInputs","DeveloperForm","id","dashboards","history","onSubmit","values","push","helperMessage","isFetching","initialValues","housePrice","deposit","loanType","interestRate","homeloanTerm","overPayments","investmentPeriod","sellingCosts","capitalGrowth","upfrontCosts","recurringCosts","rentalYield","investor","inflation","HELPERMESSAGES","DEVELOPER","arrayMutators","handleSubmit","form","mutators","pop","TYPES","OWNEROCCUPIER","required","minValue","maxValue","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { testDashboard } from \"../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport HelperMessage from \"../Shared/HelperMessage\";\nimport Loader from \"../Shared/Loader\";\nimport OwnerOccupierInvestorInputs from \"./OwnerOccupierInvestorInputs\";\n\nconst DeveloperForm = ({ id, testDashboard, dashboards }) => {\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    testDashboard(values);\n    history.push(\"/developer/dash\");\n  };\n\n  const helperMessage = `Developer Inputs`;\n\n  if (dashboards.isFetching) {\n    return <Loader />;\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n\n    const initialValues = {\n      housePrice: 1000000,\n      deposit: 200000,\n      loanType: \"principalAndInterest\",\n      interestRate: 3.5,\n      homeloanTerm: 30,\n      overPayments: [{}],\n      investmentPeriod: 15,\n      sellingCosts: 3,\n      capitalGrowth: 3.5,\n      upfrontCosts: 3,\n      recurringCosts: 1000,\n      rentalYield: 3,\n      investor: false,\n      inflation: 3,\n    };\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb16\">Developer Inputs</h1>\n        <HelperMessage\n          type={CONSTANTS.HELPERMESSAGES.DEVELOPER}\n          body={helperMessage}\n        />\n        <Form\n          onSubmit={onSubmit}\n          mutators={{\n            ...arrayMutators,\n          }}\n          initialValues={{\n            ...initialValues,\n          }}\n          render={({\n            handleSubmit,\n            values,\n            form,\n            form: {\n              mutators: { push, pop },\n            },\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <h2 className=\"f20 bold mt16 mb16\">Base Assumptions</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                {investor ? (\n                  <div className=\"form-row\">\n                    <div className=\"form-item\">\n                      <FinalFormField\n                        label={\"House Price\"}\n                        placeholder={\"House Price\"}\n                        fieldName={\"housePrice\"}\n                        type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                        validators={[\n                          required,\n                          minValue(0),\n                          maxValue(100000000),\n                        ]}\n                        fieldType={\"number\"}\n                        step={\"1\"}\n                        prepend={\"$\"}\n                      />\n                    </div>\n                    <div className=\"form-item\">\n                      <FinalFormField\n                        label={\"Rental Yield\"}\n                        fieldName={\"rentalYield\"}\n                        type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                        validators={[required, minValue(0), maxValue(100)]}\n                        placeholder={\"Rental Yield\"}\n                        fieldType={\"number\"}\n                        maxLength={3}\n                        step={0.1}\n                        append={\"% pa\"}\n                      />\n                    </div>\n                  </div>\n                ) : (\n                  <FinalFormField\n                    label={\"House Price\"}\n                    placeholder={\"House Price\"}\n                    fieldName={\"housePrice\"}\n                    type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                    validators={[required, minValue(0), maxValue(100000000)]}\n                    fieldType={\"number\"}\n                    step={\"1\"}\n                    prepend={\"$\"}\n                  />\n                )}\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Ownership Length\"}\n                      fieldName={\"investmentPeriod\"}\n                      type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                      validators={[required, minValue(0), maxValue(30)]}\n                      placeholder={\"Ownership Length\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      append={\"years\"}\n                      parseType={\"parseInt\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Home Capital Growth\"}\n                      fieldName={\"capitalGrowth\"}\n                      type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Home Capital Growth\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% pa\"}\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n          )}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeveloperForm);\n"]},"metadata":{},"sourceType":"module"}