{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/NavigationBar/NavigationBar.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DropdownOutsideAlerter } from \"../../utils/hooks\";\nimport { logoutUser } from \"../../reducers/userReducer\";\nimport { setDropdown } from \"../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport UserDropdown from \"./UserDropdown\";\nimport Burger from \"./Burger\";\nimport Button from \"../Shared/Button\";\nimport UserIcon from \"../../styles/svg/user.svg\";\nimport EmailIcon from \"../../styles/svg/email.svg\";\n\nconst NavigationBar = ({\n  setDropdown,\n  showDropdown\n}) => {\n  let history = useHistory();\n\n  const handleContactClick = e => {\n    e.preventDefault();\n    history.push(\"/contact\");\n  };\n\n  const handleDropdownClick = e => {\n    e.preventDefault();\n    setDropdown(CONSTANTS.DROPDOWNS.USERNAME, !showDropdown);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar sticky p0 flex-row justify-c bg-blue-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-main flex-row align-c justify-e h100 w100 p8 relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Burger, {\n    customClass: \"nav-burger s1080\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"w100 font-white bold title ts-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"PropertyInvestorDash\"), /*#__PURE__*/React.createElement(Button, {\n    ariaLabel: \"Contact\",\n    dataBalloonPos: \"left\",\n    extraClass: \"button-transp-p align-c justify-c\",\n    onClick: handleContactClick,\n    iconUrl: EmailIcon,\n    iconColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownOutsideAlerter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ariaLabel: \"User Options\",\n    dataBalloonPos: \"left\",\n    extraClass: \"button-transp-p align-c justify-c\",\n    onClick: handleDropdownClick,\n    iconUrl: UserIcon,\n    iconColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UserDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    showDropdown: state.navigation.dropdown[CONSTANTS.DROPDOWNS.USERNAME]\n  };\n};\n\nconst mapDispatchToProps = {\n  logoutUser,\n  setDropdown\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/NavigationBar/NavigationBar.js"],"names":["React","connect","useHistory","DropdownOutsideAlerter","logoutUser","setDropdown","CONSTANTS","UserDropdown","Burger","Button","NavigationBar","showDropdown","history","handleContactClick","e","preventDefault","push","handleDropdownClick","DROPDOWNS","USERNAME","EmailIcon","UserIcon","mapStateToProps","state","user","navigation","dropdown","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAAEL,EAAAA,WAAF;AAAeM,EAAAA;AAAf,CAAD,KAAmC;AACvD,MAAIC,OAAO,GAAGV,UAAU,EAAxB;;AAEA,QAAMW,kBAAkB,GAAIC,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACD,GAHD;;AAKA,QAAMC,mBAAmB,GAAIH,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,WAAW,CAACC,SAAS,CAACY,SAAV,CAAoBC,QAArB,EAA+B,CAACR,YAAhC,CAAX;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAKE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,cAAc,EAAE,MAFlB;AAGE,IAAA,UAAU,EAAE,mCAHd;AAIE,IAAA,OAAO,EAAEE,kBAJX;AAKE,IAAA,OAAO,EAAEO,SALX;AAME,IAAA,SAAS,EAAE,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,cADb;AAEE,IAAA,cAAc,EAAE,MAFlB;AAGE,IAAA,UAAU,EAAE,mCAHd;AAIE,IAAA,OAAO,EAAEH,mBAJX;AAKE,IAAA,OAAO,EAAEI,QALX;AAME,IAAA,SAAS,EAAE,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAbF,CADF,CADF;AA+BD,CA5CD;;AA8CA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELb,IAAAA,YAAY,EAAEY,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0BpB,SAAS,CAACY,SAAV,CAAoBC,QAA9C;AAFT,GAAP;AAID,CALD;;AAOA,MAAMQ,kBAAkB,GAAG;AACzBvB,EAAAA,UADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKA,eAAeJ,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CjB,aAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DropdownOutsideAlerter } from \"../../utils/hooks\";\nimport { logoutUser } from \"../../reducers/userReducer\";\nimport { setDropdown } from \"../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport UserDropdown from \"./UserDropdown\";\nimport Burger from \"./Burger\";\nimport Button from \"../Shared/Button\";\nimport UserIcon from \"../../styles/svg/user.svg\";\nimport EmailIcon from \"../../styles/svg/email.svg\";\n\nconst NavigationBar = ({ setDropdown, showDropdown }) => {\n  let history = useHistory();\n\n  const handleContactClick = (e) => {\n    e.preventDefault();\n    history.push(\"/contact\");\n  };\n\n  const handleDropdownClick = (e) => {\n    e.preventDefault();\n    setDropdown(CONSTANTS.DROPDOWNS.USERNAME, !showDropdown);\n  };\n\n  return (\n    <div className=\"navbar sticky p0 flex-row justify-c bg-blue-0\">\n      <div className=\"navbar-main flex-row align-c justify-e h100 w100 p8 relative\">\n        <Burger customClass={\"nav-burger s1080\"} />\n        <h1 className=\"w100 font-white bold title ts-2\">\n          PropertyInvestorDash\n        </h1>\n        <Button\n          ariaLabel={\"Contact\"}\n          dataBalloonPos={\"left\"}\n          extraClass={\"button-transp-p align-c justify-c\"}\n          onClick={handleContactClick}\n          iconUrl={EmailIcon}\n          iconColor={\"white\"}\n        />\n        <div className=\"relative\">\n          <DropdownOutsideAlerter>\n            <Button\n              ariaLabel={\"User Options\"}\n              dataBalloonPos={\"left\"}\n              extraClass={\"button-transp-p align-c justify-c\"}\n              onClick={handleDropdownClick}\n              iconUrl={UserIcon}\n              iconColor={\"white\"}\n            />\n            <UserDropdown />\n          </DropdownOutsideAlerter>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    showDropdown: state.navigation.dropdown[CONSTANTS.DROPDOWNS.USERNAME],\n  };\n};\n\nconst mapDispatchToProps = {\n  logoutUser,\n  setDropdown,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n"]},"metadata":{},"sourceType":"module"}