{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Shared/Notification/NotificationAlert.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../../reducers/notificationReducer\";\nimport Button from \"../Button\";\nimport CloseIcon from \"../../../styles/svg/close.svg\";\nimport { CONSTANTS } from \"../../../static/constants\";\n\nconst NotificationAlert = ({\n  notification,\n  clearNotification\n}) => {\n  const handleCloseNotification = e => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  let notificationType;\n  let url;\n\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.MESSAGE:\n      notificationType = \"message\";\n      url = \"../../../styles/svg/message\";\n      break;\n\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      url = \"../../../styles/svg/tick\";\n      break;\n\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      url = \"../../../styles/svg/error\";\n      break;\n\n    default:\n      notificationType = \"message\";\n      url = \"../../../styles/svg/message\";\n  }\n\n  const toTitleCase = string => {\n    return string.replace(/\\w\\S*/g, txt => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification p8 mb8 fade-in flex-row align-c relative bs-2 jump border-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    extraClass: \"button-p\",\n    onClick: handleCloseNotification,\n    icon: CloseIcon,\n    extraStyle: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      right: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr36\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      background: `url(${icon})`,\n      height: \"32px\",\n      width: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: `${notificationType} bold`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, toTitleCase(notificationType), \":\", \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, typeof notification.message === \"string\" ? notification.message : notification.statusText)));\n}; // const mapStateToProps = (state) => {\n//   return {\n//     notification: state.notification,\n//   };\n// };\n\n\nconst mapDispatchToProps = {\n  clearNotification\n};\nexport default connect(null, mapDispatchToProps)(NotificationAlert);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Shared/Notification/NotificationAlert.js"],"names":["React","connect","clearNotification","Button","CONSTANTS","NotificationAlert","notification","handleCloseNotification","e","preventDefault","id","notificationType","url","type","NOTIFICATION","MESSAGE","SUCCESS","ERROR","toTitleCase","string","replace","txt","charAt","toUpperCase","substr","toLowerCase","CloseIcon","alignItems","justifyContent","position","right","background","icon","height","width","message","statusText","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../../reducers/notificationReducer\";\nimport Button from \"../Button\";\nimport CloseIcon from \"../../../styles/svg/close.svg\";\nimport { CONSTANTS } from \"../../../static/constants\";\n\nconst NotificationAlert = ({ notification, clearNotification }) => {\n  const handleCloseNotification = (e) => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  let notificationType;\n  let url;\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.MESSAGE:\n      notificationType = \"message\";\n      url = \"../../../styles/svg/message\";\n      break;\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      url = \"../../../styles/svg/tick\";\n      break;\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      url = \"../../../styles/svg/error\";\n      break;\n    default:\n      notificationType = \"message\";\n      url = \"../../../styles/svg/message\";\n  }\n\n  const toTitleCase = (string) => {\n    return string.replace(/\\w\\S*/g, (txt) => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  return (\n    <div className=\"notification p8 mb8 fade-in flex-row align-c relative bs-2 jump border-p\">\n      <Button\n        extraClass={\"button-p\"}\n        onClick={handleCloseNotification}\n        icon={CloseIcon}\n        extraStyle={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          position: \"absolute\",\n          right: \"4px\",\n        }}\n      />\n      <div className=\"mr36\">\n        <span\n          style={{ background: `url(${icon})`, height: \"32px\", width: \"32px\" }}\n        ></span>\n        <span className={`${notificationType} bold`}>\n          {toTitleCase(notificationType)}:{\" \"}\n        </span>\n        <span className=\"font-white\">\n          {typeof notification.message === \"string\"\n            ? notification.message\n            : notification.statusText}\n        </span>\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     notification: state.notification,\n//   };\n// };\n\nconst mapDispatchToProps = {\n  clearNotification,\n};\n\nexport default connect(null, mapDispatchToProps)(NotificationAlert);\n"]},"metadata":{},"sourceType":"module"}