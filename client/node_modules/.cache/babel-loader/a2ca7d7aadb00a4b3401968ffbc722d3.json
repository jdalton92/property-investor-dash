{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{getDashboards,deleteDashboard}from\"../reducers/dashboardReducer\";import Loader from\"./Shared/Loader\";import Button from\"./Shared/Button\";import{formatDate}from\"../utils/dashboardHelper\";import OpenIcon from\"../styles/svg/tick.svg\";import CloseIcon from\"../styles/svg/close.svg\";var SavedDashboards=function SavedDashboards(_ref){var getDashboards=_ref.getDashboards,isFetching=_ref.isFetching,savedDashboards=_ref.savedDashboards,deleteDashboard=_ref.deleteDashboard;var history=useHistory();useEffect(function(){getDashboards();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var handleDelete=function handleDelete(dashhboard){var confirm=window.confirm(\"Delete dashboard: \".concat(dashhboard.description,\"?\"));if(confirm){deleteDashboard(dashhboard._id);}};if(isFetching){return/*#__PURE__*/React.createElement(Loader,null);}else{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"f24 bold mt16 mb16\"},\"Saved Dashboards\"),/*#__PURE__*/React.createElement(\"div\",{className:\"r bs-3 bg-1 p20 mb20\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mh700 o-y-auto\"},/*#__PURE__*/React.createElement(\"table\",{id:\"save-overwrite\",className:\"overpayments w100 mb20\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{className:\"h768\"},\"Ref\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"),/*#__PURE__*/React.createElement(\"th\",{className:\"h400\"},\"Address\"),/*#__PURE__*/React.createElement(\"th\",{className:\"h768\"},\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Created\"),/*#__PURE__*/React.createElement(\"th\",null,\"Action\"))),/*#__PURE__*/React.createElement(\"tbody\",null,savedDashboards.map(function(d,i){var _d$values;var baseUrl;var type;if(d.values.type===\"developer\"){baseUrl=\"developer/dash\";type=\"Developer\";}else if((_d$values=d.values)===null||_d$values===void 0?void 0:_d$values.investor){baseUrl=\"investor/dash\";type=\"Investor\";}else{baseUrl=\"owner-occupier/dash\";type=\"Owner-Occupier\";}return/*#__PURE__*/React.createElement(\"tr\",{key:i},/*#__PURE__*/React.createElement(\"td\",{className:\"h768\"},i+1),/*#__PURE__*/React.createElement(\"td\",null,d.description),/*#__PURE__*/React.createElement(\"td\",{className:\"h400\"},d.address),/*#__PURE__*/React.createElement(\"td\",{className:\"h768\"},type),/*#__PURE__*/React.createElement(\"td\",null,formatDate(d.date)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{ariaLabel:\"Open\",dataBalloonPos:\"left\",extraClass:\"button-p align-c justify-c mb12\",onClick:function onClick(){return history.push(\"\".concat(baseUrl,\"/\").concat(d._id));},iconUrl:OpenIcon,iconColor:\"white\"}),/*#__PURE__*/React.createElement(Button,{ariaLabel:\"Delete\",dataBalloonPos:\"left\",extraClass:\"button-p align-c justify-c\",onClick:function onClick(){return handleDelete(d);},iconUrl:CloseIcon,iconColor:\"white\"})));}))))));}};var mapStateToProps=function mapStateToProps(state){return{savedDashboards:state.dashboards.savedDashboards,isFetching:state.dashboards.isFetching};};var mapDispatchToProps={getDashboards:getDashboards,deleteDashboard:deleteDashboard};export default connect(mapStateToProps,mapDispatchToProps)(SavedDashboards);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/SavedDashboards.js"],"names":["React","useEffect","connect","useHistory","getDashboards","deleteDashboard","Loader","Button","formatDate","SavedDashboards","isFetching","savedDashboards","history","handleDelete","dashhboard","confirm","window","description","_id","map","d","i","baseUrl","type","values","investor","address","date","push","OpenIcon","CloseIcon","mapStateToProps","state","dashboards","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDashboards, deleteDashboard } from \"../reducers/dashboardReducer\";\nimport Loader from \"./Shared/Loader\";\nimport Button from \"./Shared/Button\";\nimport { formatDate } from \"../utils/dashboardHelper\";\nimport OpenIcon from \"../styles/svg/tick.svg\";\nimport CloseIcon from \"../styles/svg/close.svg\";\n\nconst SavedDashboards = ({\n  getDashboards,\n  isFetching,\n  savedDashboards,\n  deleteDashboard,\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    getDashboards();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDelete = (dashhboard) => {\n    const confirm = window.confirm(\n      `Delete dashboard: ${dashhboard.description}?`\n    );\n    if (confirm) {\n      deleteDashboard(dashhboard._id);\n    }\n  };\n\n  if (isFetching) {\n    return <Loader />;\n  } else {\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb16\">Saved Dashboards</h1>\n        <div className=\"r bs-3 bg-1 p20 mb20\">\n          <div className=\"mh700 o-y-auto\">\n            <table id=\"save-overwrite\" className=\"overpayments w100 mb20\">\n              <thead>\n                <tr>\n                  <th className=\"h768\">Ref</th>\n                  <th>Description</th>\n                  <th className=\"h400\">Address</th>\n                  <th className=\"h768\">Type</th>\n                  <th>Created</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {savedDashboards.map((d, i) => {\n                  let baseUrl;\n                  let type;\n                  if (d.values.type === \"developer\") {\n                    baseUrl = \"developer/dash\";\n                    type = \"Developer\";\n                  } else if (d.values?.investor) {\n                    baseUrl = \"investor/dash\";\n                    type = \"Investor\";\n                  } else {\n                    baseUrl = \"owner-occupier/dash\";\n                    type = \"Owner-Occupier\";\n                  }\n                  return (\n                    <tr key={i}>\n                      <td className=\"h768\">{i + 1}</td>\n                      <td>{d.description}</td>\n                      <td className=\"h400\">{d.address}</td>\n                      <td className=\"h768\">{type}</td>\n                      <td>{formatDate(d.date)}</td>\n                      <td>\n                        <Button\n                          ariaLabel={\"Open\"}\n                          dataBalloonPos={\"left\"}\n                          extraClass={\"button-p align-c justify-c mb12\"}\n                          onClick={() => history.push(`${baseUrl}/${d._id}`)}\n                          iconUrl={OpenIcon}\n                          iconColor={\"white\"}\n                        />\n                        <Button\n                          ariaLabel={\"Delete\"}\n                          dataBalloonPos={\"left\"}\n                          extraClass={\"button-p align-c justify-c\"}\n                          onClick={() => handleDelete(d)}\n                          iconUrl={CloseIcon}\n                          iconColor={\"white\"}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    savedDashboards: state.dashboards.savedDashboards,\n    isFetching: state.dashboards.isFetching,\n  };\n};\n\nconst mapDispatchToProps = {\n  getDashboards,\n  deleteDashboard,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedDashboards);\n"]},"metadata":{},"sourceType":"module"}