{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/FinalFormField.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CalculatorFormTooltip from \"./CalculatorForms/CalculatorFormTooltip\";\nimport { Field } from \"react-final-form\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport { composeValidators } from \"../helpers/formValidatorHelper\";\n\nconst FinalFormField = props => {\n  const {\n    title,\n    fieldName,\n    type,\n    validators,\n    placeholder,\n    fieldType,\n    maxLength,\n    min,\n    max,\n    step,\n    prependStart,\n    prependEnd,\n    parseType,\n    readOnly\n  } = props;\n\n  const parse = value => {\n    if (parseType === \"parseInt\") {\n      return isNaN(parseInt(value)) ? \"\" : parseInt(value);\n    }\n\n    return isNaN(parseFloat(value)) ? \"\" : parseFloat(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-label-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-title-separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-helper-separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CalculatorFormTooltip, {\n    input: fieldName,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Field, {\n    name: fieldName,\n    validate: composeValidators(...validators),\n    parse: parse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-error-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, prependStart ? /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, prependStart)) : null, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-control\",\n    placeholder: placeholder,\n    type: fieldType,\n    maxLength: maxLength,\n    min: min,\n    max: max,\n    step: step\n  }, input, {\n    readOnly: readOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), prependEnd ? /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, prependEnd)) : null), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, meta.error))));\n};\n\nexport default connect(null, null)(FinalFormField);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/FinalFormField.js"],"names":["React","connect","CalculatorFormTooltip","Field","Form","InputGroup","composeValidators","FinalFormField","props","title","fieldName","type","validators","placeholder","fieldType","maxLength","min","max","step","prependStart","prependEnd","parseType","readOnly","parse","value","isNaN","parseInt","parseFloat","input","meta","error","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CalculatorFormTooltip from \"./CalculatorForms/CalculatorFormTooltip\";\nimport { Field } from \"react-final-form\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport { composeValidators } from \"../helpers/formValidatorHelper\";\n\nconst FinalFormField = props => {\n  const {\n    title,\n    fieldName,\n    type,\n    validators,\n    placeholder,\n    fieldType,\n    maxLength,\n    min,\n    max,\n    step,\n    prependStart,\n    prependEnd,\n    parseType,\n    readOnly\n  } = props;\n\n  const parse = value => {\n    if (parseType === \"parseInt\") {\n      return isNaN(parseInt(value)) ? \"\" : parseInt(value);\n    }\n    return isNaN(parseFloat(value)) ? \"\" : parseFloat(value);\n  };\n  return (\n    <div className=\"input-item\">\n      <Form.Label>\n        <div className=\"input-label-container\">\n          <div className=\"input-title-separator\">{title}</div>\n          <div className=\"input-helper-separator\">\n            <CalculatorFormTooltip input={fieldName} type={type} />\n          </div>\n        </div>\n      </Form.Label>\n      <Field\n        name={fieldName}\n        validate={composeValidators(...validators)}\n        parse={parse}\n      >\n        {({ input, meta }) => (\n          <div className=\"input-error-group\">\n            <InputGroup>\n              {prependStart ? (\n                <InputGroup.Prepend>\n                  <InputGroup.Text>{prependStart}</InputGroup.Text>\n                </InputGroup.Prepend>\n              ) : null}\n              <input\n                className=\"form-control\"\n                placeholder={placeholder}\n                type={fieldType}\n                maxLength={maxLength}\n                min={min}\n                max={max}\n                step={step}\n                {...input}\n                readOnly={readOnly}\n              />\n              {prependEnd ? (\n                <InputGroup.Prepend>\n                  <InputGroup.Text>{prependEnd}</InputGroup.Text>\n                </InputGroup.Prepend>\n              ) : null}\n            </InputGroup>\n            {meta.error && meta.touched && (\n              <span className=\"form-error\">{meta.error}</span>\n            )}\n          </div>\n        )}\n      </Field>\n    </div>\n  );\n};\n\nexport default connect(null, null)(FinalFormField);\n"]},"metadata":{},"sourceType":"module"}