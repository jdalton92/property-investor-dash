{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Dashboards/SaveDashboardModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport { setModal } from \"../../reducers/navigationReducer\";\nimport { saveDashboard, updateDashboard } from \"../../reducers/dashboardReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport { composeValidators, required, maxLength, minLength } from \"../../utils/formValidatorHelper\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport Button from \"../Shared/Button\";\nimport CloseIcon from \"../../styles/svg/close.svg\";\n\nconst SaveDashboardModal = ({\n  dashboards,\n  user,\n  setModal,\n  setNotification,\n  saveDashboard,\n  updateDashboard,\n  saveDashboardModal\n}) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  const handleSave = async saveData => {\n    if (!user.data.username) {\n      setModal(CONSTANTS.MODALS.SAVEDASHBOARD, false);\n      setNotification(\"Please login to save dashboard\", \"danger\");\n      return;\n    }\n\n    const dashObject = {\n      values: dashboards.data[0].values,\n      ...saveData\n    };\n\n    if (id) {\n      await updateDashboard(dashObject);\n    } else {\n      await saveDashboard(dashObject);\n    }\n\n    setModal(CONSTANTS.MODALS.SAVEDASHBOARD, false);\n\n    if (!dashboards.isFetching) {\n      setNotification(`${saveData.description} saved`, \"success\");\n      history.push(\"/saved-dashboards\");\n    }\n  };\n\n  const handleCancel = e => {\n    // React Final Form handles preventDefault()\n    setModal(CONSTANTS.MODALS.SAVEDASHBOARD, false);\n  };\n\n  const initialValues = id ? dashboards.data[0].values : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal mt60 fixed r bs-3 bg-1 p20 relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ariaLabel: \"Close\",\n    dataBalloonPos: \"left\",\n    extraClass: \"button-p align-c justify-c absolute\",\n    onClick: handleCancel,\n    iconUrl: CloseIcon,\n    iconColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"f20 bold mb16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Save Dashboard\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"f16 mb8 bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Save New\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSave,\n    initialValues: { ...initialValues\n    },\n    render: ({\n      handleSubmit,\n      form\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      className: \"mb20\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-row align-c relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"save-description\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"*\"))), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      validate: composeValidators(required, minLength(3), maxLength(200)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"save-description\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Description\",\n      type: \"text\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-row align-c relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"save-description\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Address\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"*\"))), /*#__PURE__*/React.createElement(Field, {\n      name: \"address\",\n      validate: composeValidators(required, minLength(3), maxLength(200)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"save-address\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Address\",\n      type: \"text\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form-button-p bs-3 font-white mt12 pt8 pb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"form-button-s bs-3 font-white mt12 pt8 pb8 r\",\n      onClick: form.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Reset\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"f16 mb8 bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, \"Overwrite Existing\"), \"TABLE OF EXISTING DASHBOARDS\");\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards,\n    saveDashboardModal: state.navigation.modal.saveDashboard,\n    user: state.user,\n    requestSuceed: state.navigation.requestSuceed\n  };\n};\n\nconst mapDispatchToProps = {\n  setModal,\n  saveDashboard,\n  updateDashboard,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDashboardModal);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Dashboards/SaveDashboardModal.js"],"names":["React","connect","useHistory","useParams","Form","Field","setModal","saveDashboard","updateDashboard","setNotification","composeValidators","required","maxLength","minLength","CONSTANTS","Button","SaveDashboardModal","dashboards","user","saveDashboardModal","id","history","handleSave","saveData","data","username","MODALS","SAVEDASHBOARD","dashObject","values","isFetching","description","push","handleCancel","e","initialValues","CloseIcon","handleSubmit","form","input","meta","error","touched","reset","mapStateToProps","state","navigation","modal","requestSuceed","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport { setModal } from \"../../reducers/navigationReducer\";\nimport {\n  saveDashboard,\n  updateDashboard,\n} from \"../../reducers/dashboardReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport {\n  composeValidators,\n  required,\n  maxLength,\n  minLength,\n} from \"../../utils/formValidatorHelper\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport Button from \"../Shared/Button\";\nimport CloseIcon from \"../../styles/svg/close.svg\";\n\nconst SaveDashboardModal = ({\n  dashboards,\n  user,\n  setModal,\n  setNotification,\n  saveDashboard,\n  updateDashboard,\n  saveDashboardModal,\n}) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  const handleSave = async (saveData) => {\n    if (!user.data.username) {\n      setModal(CONSTANTS.MODALS.SAVEDASHBOARD, false);\n      setNotification(\"Please login to save dashboard\", \"danger\");\n      return;\n    }\n\n    const dashObject = {\n      values: dashboards.data[0].values,\n      ...saveData,\n    };\n\n    if (id) {\n      await updateDashboard(dashObject);\n    } else {\n      await saveDashboard(dashObject);\n    }\n\n    setModal(CONSTANTS.MODALS.SAVEDASHBOARD, false);\n\n    if (!dashboards.isFetching) {\n      setNotification(`${saveData.description} saved`, \"success\");\n      history.push(\"/saved-dashboards\");\n    }\n  };\n\n  const handleCancel = (e) => {\n    // React Final Form handles preventDefault()\n    setModal(CONSTANTS.MODALS.SAVEDASHBOARD, false);\n  };\n\n  const initialValues = id ? dashboards.data[0].values : null;\n\n  return (\n    <div className=\"modal mt60 fixed r bs-3 bg-1 p20 relative\">\n      <Button\n        ariaLabel={\"Close\"}\n        dataBalloonPos={\"left\"}\n        extraClass={\"button-p align-c justify-c absolute\"}\n        onClick={handleCancel}\n        iconUrl={CloseIcon}\n        iconColor={\"white\"}\n      />\n      <h2 className=\"f20 bold mb16\">Save Dashboard</h2>\n      <h3 className=\"f16 mb8 bold\">Save New</h3>\n      <Form\n        onSubmit={handleSave}\n        initialValues={{ ...initialValues }}\n        render={({ handleSubmit, form }) => (\n          <form className=\"mb20\" onSubmit={handleSubmit}>\n            <div className=\"flex-row align-c relative\">\n              <label htmlFor=\"save-description\" className=\"f16 mb8\">\n                Description\n                <span className=\"font-red f12 bold ml4\">*</span>\n              </label>\n            </div>\n            <Field\n              name=\"description\"\n              validate={composeValidators(\n                required,\n                minLength(3),\n                maxLength(200)\n              )}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"save-description\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"Description\"\n                    type=\"text\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <div className=\"flex-row align-c relative\">\n              <label htmlFor=\"save-description\" className=\"f16 mb8\">\n                Address\n                <span className=\"font-red f12 bold ml4\">*</span>\n              </label>\n            </div>\n            <Field\n              name=\"address\"\n              validate={composeValidators(\n                required,\n                minLength(3),\n                maxLength(200)\n              )}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"save-address\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"Address\"\n                    type=\"text\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <div className=\"form-buttons\">\n              <button\n                type=\"submit\"\n                className=\"form-button-p bs-3 font-white mt12 pt8 pb8\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"form-button-s bs-3 font-white mt12 pt8 pb8 r\"\n                onClick={form.reset}\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n        )}\n      />\n      <h3 className=\"f16 mb8 bold\">Overwrite Existing</h3>\n      TABLE OF EXISTING DASHBOARDS\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n    saveDashboardModal: state.navigation.modal.saveDashboard,\n    user: state.user,\n    requestSuceed: state.navigation.requestSuceed,\n  };\n};\n\nconst mapDispatchToProps = {\n  setModal,\n  saveDashboard,\n  updateDashboard,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDashboardModal);\n"]},"metadata":{},"sourceType":"module"}