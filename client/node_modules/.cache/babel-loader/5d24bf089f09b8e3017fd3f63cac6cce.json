{"ast":null,"code":"import loginService from \"../services/login\";\nimport { setToken, destroyToken } from \"../helpers/tokenHelper\";\nimport userService from \"../services/user\";\nconst initialState = {\n  isFetching: false,\n  data: {}\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"USER_REQUEST\":\n      console.log(\"user_request\");\n      return { ...state,\n        isFetching: true\n      };\n\n    case \"USER_REQUEST_FAIL\":\n      return { ...state,\n        isFetching: false\n      };\n\n    case \"SET_USER\":\n      return {\n        isFetching: false,\n        data: action.data\n      };\n\n    case \"CLEAR_USER\":\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const initUser = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"USER_REQUEST\"\n    });\n\n    try {\n      const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\n\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON);\n        setToken(user.token);\n        dispatch({\n          type: \"SET_USER\",\n          data: user\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\"\n        }\n      });\n    }\n  };\n};\nexport const createUser = ({\n  username,\n  email,\n  password,\n  checkPassword\n}) => {\n  return async dispatch => {\n    dispatch({\n      type: \"USER_REQUEST\"\n    });\n\n    try {\n      await userService.create({\n        username,\n        email,\n        password,\n        checkPassword\n      });\n      const user = await loginService.login({\n        email,\n        password\n      });\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n      setToken(user.token);\n      dispatch({\n        type: \"SET_USER\",\n        data: user\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: `${username} created`,\n          type: \"success\"\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\"\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport const logoutUser = () => {\n  return async dispatch => {\n    destroyToken();\n    window.localStorage.removeItem(\"loggedUser\");\n    dispatch({\n      type: \"CLEAR_USER\"\n    });\n  };\n};\nexport const loginUser = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"USER_REQUEST\"\n    });\n\n    try {\n      const user = await loginService.login({\n        email,\n        password\n      });\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n      setToken(user.token);\n      dispatch({\n        type: \"SET_USER\",\n        data: user\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\"\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: \"wrong username or password\",\n          type: \"error\"\n        }\n      });\n    }\n  };\n};\nexport const updateUser = (newEmail, oldPassword, newPassword, confirmNewPassword, id) => {\n  return async dispatch => {\n    dispatch({\n      type: \"USER_REQUEST\"\n    });\n\n    try {\n      const user = await userService.update(newEmail, oldPassword, newPassword, confirmNewPassword, id);\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n      destroyToken();\n      setToken(user.token);\n      dispatch({\n        type: \"SET_USER\",\n        data: user\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\"\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\"\n        }\n      });\n    }\n  };\n};\nexport const deleteUser = (password, id) => {\n  return async dispatch => {\n    dispatch({\n      type: \"USER_REQUEST\"\n    });\n\n    try {\n      await userService.deleteUser(password, id);\n      window.localStorage.removeItem(\"loggedUser\");\n      destroyToken();\n      dispatch({\n        type: \"CLEAR_USER\"\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\"\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\"\n        }\n      });\n    }\n  };\n};\nexport default userReducer;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/reducers/userReducer.js"],"names":["loginService","setToken","destroyToken","userService","initialState","isFetching","data","userReducer","state","action","type","console","log","initUser","dispatch","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","token","e","content","message","response","error","createUser","username","email","password","checkPassword","create","login","setItem","stringify","logoutUser","removeItem","loginUser","updateUser","newEmail","oldPassword","newPassword","confirmNewPassword","id","update","deleteUser"],"mappings":"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","sourcesContent":["import loginService from \"../services/login\";\nimport { setToken, destroyToken } from \"../helpers/tokenHelper\";\nimport userService from \"../services/user\";\n\nconst initialState = { isFetching: false, data: {} };\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"USER_REQUEST\":\n      console.log(\"user_request\");\n      return { ...state, isFetching: true };\n    case \"USER_REQUEST_FAIL\":\n      return { ...state, isFetching: false };\n    case \"SET_USER\":\n      return {\n        isFetching: false,\n        data: action.data,\n      };\n    case \"CLEAR_USER\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const initUser = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"USER_REQUEST\",\n    });\n    try {\n      const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\n\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON);\n        setToken(user.token);\n\n        dispatch({\n          type: \"SET_USER\",\n          data: user,\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\",\n        },\n      });\n    }\n  };\n};\n\nexport const createUser = ({ username, email, password, checkPassword }) => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"USER_REQUEST\",\n    });\n    try {\n      await userService.create({\n        username,\n        email,\n        password,\n        checkPassword,\n      });\n\n      const user = await loginService.login({\n        email,\n        password,\n      });\n\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n\n      setToken(user.token);\n\n      dispatch({\n        type: \"SET_USER\",\n        data: user,\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: `${username} created`,\n          type: \"success\",\n        },\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"danger\",\n        },\n      });\n    }\n  };\n};\n\nexport const logoutUser = () => {\n  return async (dispatch) => {\n    destroyToken();\n    window.localStorage.removeItem(\"loggedUser\");\n    dispatch({\n      type: \"CLEAR_USER\",\n    });\n  };\n};\n\nexport const loginUser = (email, password) => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"USER_REQUEST\",\n    });\n    try {\n      const user = await loginService.login({\n        email,\n        password,\n      });\n\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n      setToken(user.token);\n\n      dispatch({\n        type: \"SET_USER\",\n        data: user,\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: \"wrong username or password\",\n          type: \"error\",\n        },\n      });\n    }\n  };\n};\n\nexport const updateUser = (\n  newEmail,\n  oldPassword,\n  newPassword,\n  confirmNewPassword,\n  id\n) => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"USER_REQUEST\",\n    });\n    try {\n      const user = await userService.update(\n        newEmail,\n        oldPassword,\n        newPassword,\n        confirmNewPassword,\n        id\n      );\n\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n      destroyToken();\n      setToken(user.token);\n\n      dispatch({\n        type: \"SET_USER\",\n        data: user,\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\",\n        },\n      });\n    }\n  };\n};\n\nexport const deleteUser = (password, id) => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"USER_REQUEST\",\n    });\n    try {\n      await userService.deleteUser(password, id);\n\n      window.localStorage.removeItem(\"loggedUser\");\n      destroyToken();\n\n      dispatch({\n        type: \"CLEAR_USER\",\n      });\n    } catch (e) {\n      dispatch({\n        type: \"USER_REQUEST_FAIL\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\",\n        },\n      });\n    }\n  };\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}