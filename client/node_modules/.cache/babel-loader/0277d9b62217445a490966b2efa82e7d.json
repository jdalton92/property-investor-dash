{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Dashboards/SaveDashboardModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { setModal } from \"../../reducers/navigationReducer\";\nimport { saveDashboard, updateDashboard } from \"../../reducers/dashboardReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { composeValidators, required, maxLength, minLength } from \"../../helpers/formValidatorHelper\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"../styles/SavedDashboardModal.css\";\n\nconst SaveDashboardModal = props => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  const handleSave = async saveData => {\n    // React Final Form handles preventDefault()\n    if (!props.user.data.username) {\n      props.setModal(\"saveDashboard\");\n      props.setNotification(\"Please login to save dashboard\", \"danger\");\n      return;\n    }\n\n    const dashObject = {\n      values: props.values.values,\n      ...saveData\n    };\n\n    if (id) {\n      await props.updateDashboard(dashObject);\n    } else {\n      await props.saveDashboard(dashObject);\n    }\n\n    props.setModal(\"saveDashboard\");\n\n    if (!props.dashboards.isFetching) {\n      props.setNotification(`${saveData.description} saved`, \"success\");\n      history.push(\"/saved-dashboards\");\n    }\n  };\n\n  const handleCancel = e => {\n    // React Final Form handles preventDefault()\n    props.setModal(\"saveDashboard\");\n  };\n\n  const initialValues = id ? props.values : null;\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.saveDashboardModal,\n    onHide: () => props.setModal(\"saveDashboard\"),\n    size: \"xl\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Save Dashboard\")), props.dashboards.isFetching ? /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: \"loading-spinner\",\n    animation: \"border\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(FinalForm, {\n    onSubmit: handleSave,\n    initialValues: { ...initialValues\n    },\n    render: ({\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-item-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      validate: composeValidators(required, minLength(3), maxLength(200)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-error-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"Description\",\n      type: \"text\"\n    }, input, {\n      maxLength: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"address\",\n      validate: composeValidators(required, minLength(3), maxLength(200)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-error-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"123 Example St, City\",\n      type: \"text\"\n    }, input, {\n      maxLength: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, meta.error)))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      className: \"save-dashboard-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"primary\",\n      className: \"save-dashboard-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: handleCancel,\n      className: \"save-dashboard-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"Cancel\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    values: state.values,\n    dashboards: state.dashboards,\n    saveDashboardModal: state.navigation.modal.saveDashboard,\n    user: state.user,\n    requestSuceed: state.navigation.requestSuceed\n  };\n};\n\nconst mapDispatchToProps = {\n  setModal,\n  setDashboard,\n  saveDashboard,\n  updateDashboard,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDashboardModal);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Dashboards/SaveDashboardModal.js"],"names":["React","connect","useHistory","useParams","Form","FinalForm","Field","setModal","saveDashboard","updateDashboard","setNotification","Modal","Button","composeValidators","required","maxLength","minLength","Spinner","SaveDashboardModal","props","id","history","handleSave","saveData","user","data","username","dashObject","values","dashboards","isFetching","description","push","handleCancel","e","initialValues","saveDashboardModal","handleSubmit","input","meta","error","touched","mapStateToProps","state","navigation","modal","requestSuceed","mapDispatchToProps","setDashboard"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { setModal } from \"../../reducers/navigationReducer\";\nimport {\n  saveDashboard,\n  updateDashboard,\n} from \"../../reducers/dashboardReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport {\n  composeValidators,\n  required,\n  maxLength,\n  minLength,\n} from \"../../helpers/formValidatorHelper\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"../styles/SavedDashboardModal.css\";\n\nconst SaveDashboardModal = (props) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  const handleSave = async (saveData) => {\n    // React Final Form handles preventDefault()\n    if (!props.user.data.username) {\n      props.setModal(\"saveDashboard\");\n      props.setNotification(\"Please login to save dashboard\", \"danger\");\n      return;\n    }\n\n    const dashObject = {\n      values: props.values.values,\n      ...saveData,\n    };\n\n    if (id) {\n      await props.updateDashboard(dashObject);\n    } else {\n      await props.saveDashboard(dashObject);\n    }\n\n    props.setModal(\"saveDashboard\");\n\n    if (!props.dashboards.isFetching) {\n      props.setNotification(`${saveData.description} saved`, \"success\");\n      history.push(\"/saved-dashboards\");\n    }\n  };\n\n  const handleCancel = (e) => {\n    // React Final Form handles preventDefault()\n    props.setModal(\"saveDashboard\");\n  };\n\n  const initialValues = id ? props.values : null;\n\n  return (\n    <Modal\n      show={props.saveDashboardModal}\n      onHide={() => props.setModal(\"saveDashboard\")}\n      size=\"xl\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Save Dashboard\n        </Modal.Title>\n      </Modal.Header>\n      {props.dashboards.isFetching ? (\n        <Modal.Body>\n          <Spinner\n            className=\"loading-spinner\"\n            animation=\"border\"\n            variant=\"primary\"\n          />\n        </Modal.Body>\n      ) : (\n        <FinalForm\n          onSubmit={handleSave}\n          initialValues={{ ...initialValues }}\n          render={({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Modal.Body>\n                <div className=\"input-item-group\">\n                  <div className=\"input-item\">\n                    <Form.Label>Description</Form.Label>\n                    <Field\n                      name=\"description\"\n                      validate={composeValidators(\n                        required,\n                        minLength(3),\n                        maxLength(200)\n                      )}\n                    >\n                      {({ input, meta }) => (\n                        <div className=\"input-error-group\">\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"Description\"\n                            type=\"text\"\n                            {...input}\n                            maxLength={200}\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"input-item\">\n                    <Form.Label>Address</Form.Label>\n                    <Field\n                      name=\"address\"\n                      validate={composeValidators(\n                        required,\n                        minLength(3),\n                        maxLength(200)\n                      )}\n                    >\n                      {({ input, meta }) => (\n                        <div className=\"input-error-group\">\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"123 Example St, City\"\n                            type=\"text\"\n                            {...input}\n                            maxLength={200}\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer className=\"save-dashboard-footer\">\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"save-dashboard-button\"\n                >\n                  Save\n                </Button>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={handleCancel}\n                  className=\"save-dashboard-button\"\n                >\n                  Cancel\n                </Button>\n              </Modal.Footer>\n            </form>\n          )}\n        />\n      )}\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    values: state.values,\n    dashboards: state.dashboards,\n    saveDashboardModal: state.navigation.modal.saveDashboard,\n    user: state.user,\n    requestSuceed: state.navigation.requestSuceed,\n  };\n};\n\nconst mapDispatchToProps = {\n  setModal,\n  setDashboard,\n  saveDashboard,\n  updateDashboard,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDashboardModal);\n"]},"metadata":{},"sourceType":"module"}