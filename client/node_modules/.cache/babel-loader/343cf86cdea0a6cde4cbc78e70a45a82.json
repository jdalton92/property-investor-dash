{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/SavedDashboards.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDashboards, deleteDashboard } from \"../reducers/dashboardReducer\";\nimport Loader from \"./Shared/Loader\";\nimport Button from \"./Shared/Button\";\nimport { formatDate } from \"../utils/dashboardHelper\";\nimport OpenIcon from \"../styles/svg/tick.svg\";\nimport CloseIcon from \"../styles/svg/close.svg\";\n\nconst SavedDashboards = ({\n  getDashboards,\n  isFetching,\n  savedDashboards,\n  deleteDashboard\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    getDashboards(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDelete = dashhboard => {\n    const confirm = window.confirm(`Delete dashboard: ${dashhboard.description}?`);\n\n    if (confirm) {\n      deleteDashboard(dashhboard._id);\n    }\n  };\n\n  if (true) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f24 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Saved Dashboards\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r bs-3 bg-1 p20 mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mh700 o-y-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"save-overwrite\",\n      className: \"overpayments w100 mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"h768\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, \"Ref\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"h400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"h768\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, savedDashboards.map((d, i) => {\n      var _d$values;\n\n      let baseUrl;\n      let type;\n\n      if (d.values.type === \"developer\") {\n        baseUrl = \"developer/dash\";\n        type = \"Developer\";\n      } else if ((_d$values = d.values) === null || _d$values === void 0 ? void 0 : _d$values.investor) {\n        baseUrl = \"investor/dash\";\n        type = \"Investor\";\n      } else {\n        baseUrl = \"owner-occupier/dash\";\n        type = \"Owner-Occupier\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"h768\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }\n      }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }\n      }, d.description), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"h400\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }\n      }, d.address), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"h768\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, type), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, formatDate(d.date)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        ariaLabel: \"Open\",\n        dataBalloonPos: \"left\",\n        extraClass: \"button-p align-c justify-c mb12\",\n        onClick: () => history.push(`${baseUrl}/${d._id}`),\n        iconUrl: OpenIcon,\n        iconColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        ariaLabel: \"Delete\",\n        dataBalloonPos: \"left\",\n        extraClass: \"button-p align-c justify-c\",\n        onClick: () => handleDelete(d),\n        iconUrl: CloseIcon,\n        iconColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      })));\n    }))))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    savedDashboards: state.dashboards.savedDashboards,\n    isFetching: state.dashboards.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  getDashboards,\n  deleteDashboard\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedDashboards);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/SavedDashboards.js"],"names":["React","useEffect","connect","useHistory","getDashboards","deleteDashboard","Loader","Button","formatDate","SavedDashboards","isFetching","savedDashboards","history","handleDelete","dashhboard","confirm","window","description","_id","map","d","i","baseUrl","type","values","investor","address","date","push","OpenIcon","CloseIcon","mapStateToProps","state","dashboards","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDashboards, deleteDashboard } from \"../reducers/dashboardReducer\";\nimport Loader from \"./Shared/Loader\";\nimport Button from \"./Shared/Button\";\nimport { formatDate } from \"../utils/dashboardHelper\";\nimport OpenIcon from \"../styles/svg/tick.svg\";\nimport CloseIcon from \"../styles/svg/close.svg\";\n\nconst SavedDashboards = ({\n  getDashboards,\n  isFetching,\n  savedDashboards,\n  deleteDashboard,\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    getDashboards();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDelete = (dashhboard) => {\n    const confirm = window.confirm(\n      `Delete dashboard: ${dashhboard.description}?`\n    );\n    if (confirm) {\n      deleteDashboard(dashhboard._id);\n    }\n  };\n\n  if (true) {\n    return <Loader />;\n  } else {\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb16\">Saved Dashboards</h1>\n        <div className=\"r bs-3 bg-1 p20 mb20\">\n          <div className=\"mh700 o-y-auto\">\n            <table id=\"save-overwrite\" className=\"overpayments w100 mb20\">\n              <thead>\n                <tr>\n                  <th className=\"h768\">Ref</th>\n                  <th>Description</th>\n                  <th className=\"h400\">Address</th>\n                  <th className=\"h768\">Type</th>\n                  <th>Created</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {savedDashboards.map((d, i) => {\n                  let baseUrl;\n                  let type;\n                  if (d.values.type === \"developer\") {\n                    baseUrl = \"developer/dash\";\n                    type = \"Developer\";\n                  } else if (d.values?.investor) {\n                    baseUrl = \"investor/dash\";\n                    type = \"Investor\";\n                  } else {\n                    baseUrl = \"owner-occupier/dash\";\n                    type = \"Owner-Occupier\";\n                  }\n                  return (\n                    <tr key={i}>\n                      <td className=\"h768\">{i + 1}</td>\n                      <td>{d.description}</td>\n                      <td className=\"h400\">{d.address}</td>\n                      <td className=\"h768\">{type}</td>\n                      <td>{formatDate(d.date)}</td>\n                      <td>\n                        <Button\n                          ariaLabel={\"Open\"}\n                          dataBalloonPos={\"left\"}\n                          extraClass={\"button-p align-c justify-c mb12\"}\n                          onClick={() => history.push(`${baseUrl}/${d._id}`)}\n                          iconUrl={OpenIcon}\n                          iconColor={\"white\"}\n                        />\n                        <Button\n                          ariaLabel={\"Delete\"}\n                          dataBalloonPos={\"left\"}\n                          extraClass={\"button-p align-c justify-c\"}\n                          onClick={() => handleDelete(d)}\n                          iconUrl={CloseIcon}\n                          iconColor={\"white\"}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    savedDashboards: state.dashboards.savedDashboards,\n    isFetching: state.dashboards.isFetching,\n  };\n};\n\nconst mapDispatchToProps = {\n  getDashboards,\n  deleteDashboard,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedDashboards);\n"]},"metadata":{},"sourceType":"module"}