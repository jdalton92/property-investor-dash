{"ast":null,"code":"import _toConsumableArray from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{v4 as uuid}from\"uuid\";import userService from\"../services/user\";var initialState={messagesRead:[],notifications:[]};var notificationReducer=function notificationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var newState;switch(action.type){case\"SET_MESSAGE\":newState=_objectSpread({},state);newState.messagesRead=[].concat(_toConsumableArray(state.messagesRead),[action.message]);return newState;case\"SET_MESSAGES\":if(action.messages&&action.messages.length){newState=_objectSpread({},state);newState.messagesRead=[].concat(_toConsumableArray(state.messagesRead),_toConsumableArray(action.messages));return newState;}else{return state;}case\"SET_NOTIFICATION\":newState=_objectSpread({},state);newState.notifications=[].concat(_toConsumableArray(state.notifications),[action.content]);return newState;case\"CLEAR_NOTIFICATION\":newState=_objectSpread({},state);newState.notifications=state.notifications.filter(function(n){return n.id!==action.id;});return newState;default:return state;}};export var setNotification=function setNotification(message,type){return function(dispatch){var id=uuid();dispatch({type:\"SET_NOTIFICATION\",content:{id:id,message:message,type:type}});};};export var clearNotification=function clearNotification(id){return function(dispatch){dispatch({type:\"CLEAR_NOTIFICATION\",id:id});};};export var hideHelperMessage=function hideHelperMessage(userId,type){return function(dispatch){try{userService.readMessage(userId,type);var token=JSON.parse(window.localStorage.getItem(\"loggedUser\"));token.messagesRead=[].concat(_toConsumableArray(token.messagesRead),[type]);window.localStorage.setItem(\"loggedUser\",JSON.stringify(token));dispatch({type:\"SET_MESSAGE\",message:type});}catch(e){console.log(e);dispatch({type:\"SET_NOTIFICATION\",content:{message:e.response.data.error,type:\"error\"}});}};};export default notificationReducer;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/reducers/notificationReducer.js"],"names":["v4","uuid","userService","initialState","messagesRead","notifications","notificationReducer","state","action","newState","type","message","messages","length","content","filter","n","id","setNotification","dispatch","clearNotification","hideHelperMessage","userId","readMessage","token","JSON","parse","window","localStorage","getItem","setItem","stringify","e","console","log","response","data","error"],"mappings":"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","sourcesContent":["import { v4 as uuid } from \"uuid\";\nimport userService from \"../services/user\";\n\nconst initialState = {\n  messagesRead: [],\n  notifications: [],\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case \"SET_MESSAGE\":\n      newState = { ...state };\n      newState.messagesRead = [...state.messagesRead, action.message];\n      return newState;\n    case \"SET_MESSAGES\":\n      if (action.messages && action.messages.length) {\n        newState = { ...state };\n        newState.messagesRead = [...state.messagesRead, ...action.messages];\n        return newState;\n      } else {\n        return state;\n      }\n    case \"SET_NOTIFICATION\":\n      newState = { ...state };\n      newState.notifications = [...state.notifications, action.content];\n      return newState;\n    case \"CLEAR_NOTIFICATION\":\n      newState = { ...state };\n      newState.notifications = state.notifications.filter(\n        (n) => n.id !== action.id\n      );\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  return (dispatch) => {\n    const id = uuid();\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      content: {\n        id,\n        message,\n        type,\n      },\n    });\n  };\n};\n\nexport const clearNotification = (id) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"CLEAR_NOTIFICATION\",\n      id,\n    });\n  };\n};\n\nexport const hideHelperMessage = (userId, type) => {\n  return (dispatch) => {\n    try {\n      userService.readMessage(userId, type);\n      let token = JSON.parse(window.localStorage.getItem(\"loggedUser\"));\n      token.messagesRead = [...token.messagesRead, type];\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(token));\n      dispatch({\n        type: \"SET_MESSAGE\",\n        message: type,\n      });\n    } catch (e) {\n      console.log(e);\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\",\n        },\n      });\n    }\n  };\n};\n\nexport default notificationReducer;\n"]},"metadata":{},"sourceType":"module"}