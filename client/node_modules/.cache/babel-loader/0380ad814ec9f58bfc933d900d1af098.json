{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Dashboards/OccupierInvestorDashboard.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CalculatorFormTooltip from \"../CalculatorForms/CalculatorFormTooltip\";\nimport { editDashboard, getDashboard } from \"../../reducers/dashboardReducer\";\nimport { setCashflow, setModal } from \"../../reducers/navigationReducer\";\nimport { cumulativeChartParse, tableParse, occupierInvestorCalculation, cardParse, occupierInvestorMOCCalculation } from \"../../helpers/occupierInvestorDashboardHelper\";\nimport { currencyFormatter, percentageFormatter, IRRCalculation } from \"../../helpers/dashboardHelper\";\nimport { Line } from \"react-chartjs-2\";\nimport { Table, Card, ListGroup, Button } from \"react-bootstrap\";\nimport \"../styles/Dashboard.css\";\n\nconst OccupierInvestorDashboard = props => {\n  const id = useParams().id;\n  const history = useHistory();\n  let userType;\n  let rawData;\n  let chartData;\n  let tableData;\n  let cardData;\n  useEffect(() => {\n    if (id) {\n      props.getDashboard(id);\n    }\n  }, []);\n  useEffect(() => {\n    userType = props.values.data[0].investor ? \"investor\" : \"ownerOccupier\";\n    rawData = occupierInvestorCalculation(props.values.data[0]);\n    chartData = cumulativeChartParse(rawData);\n    tableData = tableParse(rawData);\n    cardData = cardParse(rawData);\n  }, [props.values.values]);\n\n  const handleSave = e => {\n    e.preventDefault();\n    props.setModal(\"saveDashboard\");\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n\n    if (id) {\n      if (props.values.data[0].investor) {\n        history.push(`/investor/edit/${id}`);\n      } else {\n        history.push(`/owner-occupier/edit/${id}`);\n      }\n    } else {\n      props.editDashboard();\n\n      if (props.values.values.investor) {\n        history.replace(\"/investor\");\n      } else {\n        history.replace(\"/owner-occupier\");\n      }\n    }\n  };\n\n  if (props.values.data.isFetching) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, \"LOADING...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"ELSE\");\n  } // return (\n  //   <section className=\"dashboard-section\">\n  //     <div className=\"dashboard-header\">\n  //       <h1>\n  //         <b>{props.title}</b>\n  //       </h1>\n  //       <Button\n  //         id=\"dashboard-button\"\n  //         className=\"dashboard-save-button\"\n  //         onClick={handleSave}\n  //         variant=\"primary\"\n  //       >\n  //         Save Dashboard\n  //       </Button>\n  //       <Button\n  //         id=\"dashboard-button\"\n  //         className=\"dashboard-edit-button\"\n  //         onClick={handleEdit}\n  //         variant=\"outline-primary\"\n  //       >\n  //         Edit Dashboard\n  //       </Button>\n  //     </div>\n  //     <div className=\"dashboard-item\">\n  //       <div className=\"dashboard-subheader\">\n  //         <h3>Cumulative Position</h3>\n  //         <h5>\n  //           <i>after funding</i>\n  //         </h5>\n  //       </div>\n  //       <div className=\"dashboard-row\">\n  //         <div className=\"dashboard-chart-container\">\n  //           <Line data={chartData?.data} options={chartData?.options} />\n  //         </div>\n  //       </div>\n  //       <div className=\"dashboard-row\">\n  //         <div className=\"dashboard-card-deck\">\n  //           <Card className=\"dashboard-card\">\n  //             <Card.Header>Total</Card.Header>\n  //             <ListGroup variant=\"flush\">\n  //               <ListGroup.Item>\n  //                 Rental Income:{\" \"}\n  //                 <b>{currencyFormatter.format(cardData?.rentalIncome)}</b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Loan Interest:{\" \"}\n  //                 <b>{currencyFormatter.format(cardData?.mortgageInterest)}</b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Profit: <b>{currencyFormatter.format(cardData?.profit)}</b>\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Card>\n  //           <Card className=\"dashboard-card\">\n  //             <Card.Header>Average per Month</Card.Header>\n  //             <ListGroup variant=\"flush\">\n  //               <ListGroup.Item>\n  //                 Rental Income:{\" \"}\n  //                 <b>\n  //                   {currencyFormatter.format(\n  //                     cardData?.rentalIncome / cardData?.months\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Operating Costs:{\" \"}\n  //                 <b>\n  //                   {currencyFormatter.format(\n  //                     cardData?.opex / cardData?.months\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Mortgage Payment:{\" \"}\n  //                 <b>\n  //                   {currencyFormatter.format(\n  //                     cardData?.mortgagePayment / cardData?.months\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Card>\n  //           <Card className=\"dashboard-card\">\n  //             <Card.Header>Project Metrics</Card.Header>\n  //             <ListGroup variant=\"flush\">\n  //               <ListGroup.Item>\n  //                 IRR:{\" \"}\n  //                 <b>\n  //                   {percentageFormatter.format(\n  //                     IRRCalculation(rawData).postFinance\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Margin:{\" \"}\n  //                 <b>\n  //                   {percentageFormatter.format(\n  //                     occupierInvestorMOCCalculation(rawData)\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Card>\n  //         </div>\n  //       </div>\n  //     </div>\n  //     <div className=\"dashboard-item\">\n  //       <div className=\"dashboard-header-container\">\n  //         <div className=\"dashboard-subheader-container\">\n  //           <div className=\"dashboard-subheader\">\n  //             <h3>Cashflow Summary</h3>\n  //             <h5>\n  //               <i>after funding</i>\n  //             </h5>\n  //           </div>\n  //           <div className=\"dashboard-table-tooltip\">\n  //             <CalculatorFormTooltip\n  //               input={\"cashflowAfterFunding\"}\n  //               type={\"occupierInvestor\"}\n  //               placement={\"right\"}\n  //             />\n  //           </div>\n  //         </div>\n  //         <div className=\"dashboard-button-container\">\n  //           <Button\n  //             id=\"dashboard-button\"\n  //             className=\"dashboard-table-button\"\n  //             onClick={() => props.setCashflow(userType)}\n  //             variant=\"primary\"\n  //           >\n  //             {props.cashflowTable[userType] ? \"hide\" : \"show\"}\n  //           </Button>\n  //         </div>\n  //       </div>\n  //       <div\n  //         className={`dashboard-table-row\n  //                       ${props.cashflowTable[userType] ? \"\" : \"hide\"}`}\n  //       >\n  //         <Table striped bordered hover>\n  //           <thead>\n  //             <tr>\n  //               <th>Year</th>\n  //               <th className=\"dashboard-table-desktop\">Deposit</th>\n  //               <th className=\"dashboard-table-desktop\">Rental Income</th>\n  //               <th className=\"dashboard-table-desktop\">Operating Expenses</th>\n  //               <th className=\"dashboard-table-desktop\">Net Sale Proceeds</th>\n  //               <th className=\"dashboard-table-desktop\">Mortgage Costs</th>\n  //               <th className=\"dashboard-table-mobile\">Total Income</th>\n  //               <th className=\"dashboard-table-mobile\">Total Costs</th>\n  //               <th>Net Annual Cashflow</th>\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             {tableData?.annualCashflow.map((c) => (\n  //               <tr key={c.year}>\n  //                 <td>{c.year}</td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.equityUse)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.rentalIncome)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.opex)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.netSale)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.fundingCost)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-mobile\">\n  //                   {currencyFormatter.format(c.totalIncome)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-mobile\">\n  //                   {currencyFormatter.format(c.totalCost)}\n  //                 </td>\n  //                 <td>{currencyFormatter.format(c.postFinanceCashflow)}</td>\n  //               </tr>\n  //             ))}\n  //           </tbody>\n  //           <tfoot>\n  //             <tr>\n  //               <th>Total</th>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].equityUse\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].rentalIncome\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(tableData?.summaryCashflow[0].opex)}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].netSale\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].fundingCost\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-mobile\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].totalIncome\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-mobile\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].totalCost\n  //                 )}\n  //               </td>\n  //               <td>\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].postFinanceCashflow\n  //                 )}\n  //               </td>\n  //             </tr>\n  //           </tfoot>\n  //         </Table>\n  //       </div>\n  //     </div>\n  //   </section>\n  // );\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    values: state.dashboards,\n    cashflowTable: state.navigation.cashflowTable\n  };\n};\n\nconst mapDispatchToProps = {\n  setCashflow,\n  setModal,\n  editDashboard,\n  getDashboard\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OccupierInvestorDashboard);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Dashboards/OccupierInvestorDashboard.js"],"names":["React","useEffect","connect","useHistory","useParams","CalculatorFormTooltip","editDashboard","getDashboard","setCashflow","setModal","cumulativeChartParse","tableParse","occupierInvestorCalculation","cardParse","occupierInvestorMOCCalculation","currencyFormatter","percentageFormatter","IRRCalculation","Line","Table","Card","ListGroup","Button","OccupierInvestorDashboard","props","id","history","userType","rawData","chartData","tableData","cardData","values","data","investor","handleSave","e","preventDefault","handleEdit","push","replace","isFetching","mapStateToProps","state","dashboards","cashflowTable","navigation","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CalculatorFormTooltip from \"../CalculatorForms/CalculatorFormTooltip\";\nimport { editDashboard, getDashboard } from \"../../reducers/dashboardReducer\";\nimport { setCashflow, setModal } from \"../../reducers/navigationReducer\";\nimport {\n  cumulativeChartParse,\n  tableParse,\n  occupierInvestorCalculation,\n  cardParse,\n  occupierInvestorMOCCalculation,\n} from \"../../helpers/occupierInvestorDashboardHelper\";\nimport {\n  currencyFormatter,\n  percentageFormatter,\n  IRRCalculation,\n} from \"../../helpers/dashboardHelper\";\nimport { Line } from \"react-chartjs-2\";\nimport { Table, Card, ListGroup, Button } from \"react-bootstrap\";\nimport \"../styles/Dashboard.css\";\n\nconst OccupierInvestorDashboard = (props) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  let userType;\n  let rawData;\n  let chartData;\n  let tableData;\n  let cardData;\n\n  useEffect(() => {\n    if (id) {\n      props.getDashboard(id);\n    }\n  }, []);\n  useEffect(() => {\n    userType = props.values.data[0].investor ? \"investor\" : \"ownerOccupier\";\n    rawData = occupierInvestorCalculation(props.values.data[0]);\n    chartData = cumulativeChartParse(rawData);\n    tableData = tableParse(rawData);\n    cardData = cardParse(rawData);\n  }, [props.values.values]);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    props.setModal(\"saveDashboard\");\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    if (id) {\n      if (props.values.data[0].investor) {\n        history.push(`/investor/edit/${id}`);\n      } else {\n        history.push(`/owner-occupier/edit/${id}`);\n      }\n    } else {\n      props.editDashboard();\n      if (props.values.values.investor) {\n        history.replace(\"/investor\");\n      } else {\n        history.replace(\"/owner-occupier\");\n      }\n    }\n  };\n\n  if (props.values.data.isFetching) {\n    return <div>LOADING...</div>;\n  } else {\n    return <div>ELSE</div>;\n  }\n\n  // return (\n  //   <section className=\"dashboard-section\">\n  //     <div className=\"dashboard-header\">\n  //       <h1>\n  //         <b>{props.title}</b>\n  //       </h1>\n  //       <Button\n  //         id=\"dashboard-button\"\n  //         className=\"dashboard-save-button\"\n  //         onClick={handleSave}\n  //         variant=\"primary\"\n  //       >\n  //         Save Dashboard\n  //       </Button>\n  //       <Button\n  //         id=\"dashboard-button\"\n  //         className=\"dashboard-edit-button\"\n  //         onClick={handleEdit}\n  //         variant=\"outline-primary\"\n  //       >\n  //         Edit Dashboard\n  //       </Button>\n  //     </div>\n\n  //     <div className=\"dashboard-item\">\n  //       <div className=\"dashboard-subheader\">\n  //         <h3>Cumulative Position</h3>\n  //         <h5>\n  //           <i>after funding</i>\n  //         </h5>\n  //       </div>\n  //       <div className=\"dashboard-row\">\n  //         <div className=\"dashboard-chart-container\">\n  //           <Line data={chartData?.data} options={chartData?.options} />\n  //         </div>\n  //       </div>\n  //       <div className=\"dashboard-row\">\n  //         <div className=\"dashboard-card-deck\">\n  //           <Card className=\"dashboard-card\">\n  //             <Card.Header>Total</Card.Header>\n  //             <ListGroup variant=\"flush\">\n  //               <ListGroup.Item>\n  //                 Rental Income:{\" \"}\n  //                 <b>{currencyFormatter.format(cardData?.rentalIncome)}</b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Loan Interest:{\" \"}\n  //                 <b>{currencyFormatter.format(cardData?.mortgageInterest)}</b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Profit: <b>{currencyFormatter.format(cardData?.profit)}</b>\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Card>\n  //           <Card className=\"dashboard-card\">\n  //             <Card.Header>Average per Month</Card.Header>\n  //             <ListGroup variant=\"flush\">\n  //               <ListGroup.Item>\n  //                 Rental Income:{\" \"}\n  //                 <b>\n  //                   {currencyFormatter.format(\n  //                     cardData?.rentalIncome / cardData?.months\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Operating Costs:{\" \"}\n  //                 <b>\n  //                   {currencyFormatter.format(\n  //                     cardData?.opex / cardData?.months\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Mortgage Payment:{\" \"}\n  //                 <b>\n  //                   {currencyFormatter.format(\n  //                     cardData?.mortgagePayment / cardData?.months\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Card>\n  //           <Card className=\"dashboard-card\">\n  //             <Card.Header>Project Metrics</Card.Header>\n  //             <ListGroup variant=\"flush\">\n  //               <ListGroup.Item>\n  //                 IRR:{\" \"}\n  //                 <b>\n  //                   {percentageFormatter.format(\n  //                     IRRCalculation(rawData).postFinance\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //               <ListGroup.Item>\n  //                 Margin:{\" \"}\n  //                 <b>\n  //                   {percentageFormatter.format(\n  //                     occupierInvestorMOCCalculation(rawData)\n  //                   )}\n  //                 </b>\n  //               </ListGroup.Item>\n  //             </ListGroup>\n  //           </Card>\n  //         </div>\n  //       </div>\n  //     </div>\n  //     <div className=\"dashboard-item\">\n  //       <div className=\"dashboard-header-container\">\n  //         <div className=\"dashboard-subheader-container\">\n  //           <div className=\"dashboard-subheader\">\n  //             <h3>Cashflow Summary</h3>\n  //             <h5>\n  //               <i>after funding</i>\n  //             </h5>\n  //           </div>\n  //           <div className=\"dashboard-table-tooltip\">\n  //             <CalculatorFormTooltip\n  //               input={\"cashflowAfterFunding\"}\n  //               type={\"occupierInvestor\"}\n  //               placement={\"right\"}\n  //             />\n  //           </div>\n  //         </div>\n  //         <div className=\"dashboard-button-container\">\n  //           <Button\n  //             id=\"dashboard-button\"\n  //             className=\"dashboard-table-button\"\n  //             onClick={() => props.setCashflow(userType)}\n  //             variant=\"primary\"\n  //           >\n  //             {props.cashflowTable[userType] ? \"hide\" : \"show\"}\n  //           </Button>\n  //         </div>\n  //       </div>\n  //       <div\n  //         className={`dashboard-table-row\n  //                       ${props.cashflowTable[userType] ? \"\" : \"hide\"}`}\n  //       >\n  //         <Table striped bordered hover>\n  //           <thead>\n  //             <tr>\n  //               <th>Year</th>\n  //               <th className=\"dashboard-table-desktop\">Deposit</th>\n  //               <th className=\"dashboard-table-desktop\">Rental Income</th>\n  //               <th className=\"dashboard-table-desktop\">Operating Expenses</th>\n  //               <th className=\"dashboard-table-desktop\">Net Sale Proceeds</th>\n  //               <th className=\"dashboard-table-desktop\">Mortgage Costs</th>\n  //               <th className=\"dashboard-table-mobile\">Total Income</th>\n  //               <th className=\"dashboard-table-mobile\">Total Costs</th>\n  //               <th>Net Annual Cashflow</th>\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             {tableData?.annualCashflow.map((c) => (\n  //               <tr key={c.year}>\n  //                 <td>{c.year}</td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.equityUse)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.rentalIncome)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.opex)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.netSale)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-desktop\">\n  //                   {currencyFormatter.format(c.fundingCost)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-mobile\">\n  //                   {currencyFormatter.format(c.totalIncome)}\n  //                 </td>\n  //                 <td className=\"dashboard-table-mobile\">\n  //                   {currencyFormatter.format(c.totalCost)}\n  //                 </td>\n  //                 <td>{currencyFormatter.format(c.postFinanceCashflow)}</td>\n  //               </tr>\n  //             ))}\n  //           </tbody>\n  //           <tfoot>\n  //             <tr>\n  //               <th>Total</th>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].equityUse\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].rentalIncome\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(tableData?.summaryCashflow[0].opex)}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].netSale\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-desktop\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].fundingCost\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-mobile\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].totalIncome\n  //                 )}\n  //               </td>\n  //               <td className=\"dashboard-table-mobile\">\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].totalCost\n  //                 )}\n  //               </td>\n  //               <td>\n  //                 {currencyFormatter.format(\n  //                   tableData?.summaryCashflow[0].postFinanceCashflow\n  //                 )}\n  //               </td>\n  //             </tr>\n  //           </tfoot>\n  //         </Table>\n  //       </div>\n  //     </div>\n  //   </section>\n  // );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    values: state.dashboards,\n    cashflowTable: state.navigation.cashflowTable,\n  };\n};\n\nconst mapDispatchToProps = {\n  setCashflow,\n  setModal,\n  editDashboard,\n  getDashboard,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OccupierInvestorDashboard);\n"]},"metadata":{},"sourceType":"module"}