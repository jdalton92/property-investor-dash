{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Settings/Settings.DeleteAccount.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { updateUser } from \"../../reducers/userReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport { required, minLength, isEmail, composeValidators } from \"../../utils/formValidatorHelper\";\n\nconst DeleteAccount = ({\n  user,\n  updateUser\n}) => {\n  const userDetails = {\n    username: user.data.username,\n    oldEmail: user.data.email,\n    id: user.data.id\n  };\n\n  const handleSubmit = async ({\n    password\n  }) => {\n    const confirm = window.confirm(`Delete ${userDetails.username}?`);\n\n    if (confirm) {\n      await deleteUser(password, user.id);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f20 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Change Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r bs-3 bg-1 p20 mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"old-password\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Old Password\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"oldPassword\",\n      validate: composeValidators(required, minLength(3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"old-password\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Password\",\n      type: \"password\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-password\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"New Password\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"newPassword\",\n      validate: composeValidators(required, minLength(3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"new-password\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Password\",\n      type: \"password\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"confirm-password\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Confirm New Password\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"checkPassword\",\n      validate: composeValidators(required, minLength(3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"confirm-password\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Password\",\n      type: \"password\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-button-p font-white bs-2 pt8 pb8 r mt12\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Update\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Settings/Settings.DeleteAccount.js"],"names":["React","connect","Form","Field","updateUser","setNotification","required","minLength","isEmail","composeValidators","DeleteAccount","user","userDetails","username","data","oldEmail","email","id","handleSubmit","password","confirm","window","deleteUser","values","input","meta","error","touched","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { updateUser } from \"../../reducers/userReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport {\n  required,\n  minLength,\n  isEmail,\n  composeValidators,\n} from \"../../utils/formValidatorHelper\";\n\nconst DeleteAccount = ({ user, updateUser }) => {\n  const userDetails = {\n    username: user.data.username,\n    oldEmail: user.data.email,\n    id: user.data.id,\n  };\n\n  const handleSubmit = async ({ password }) => {\n    const confirm = window.confirm(`Delete ${userDetails.username}?`);\n    if (confirm) {\n      await deleteUser(password, user.id);\n    }\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={({ handleSubmit, values }) => (\n        <form onSubmit={handleSubmit}>\n          <h2 className=\"f20 bold mt16 mb16\">Change Password</h2>\n          <div className=\"r bs-3 bg-1 p20 mb20\">\n            <label htmlFor=\"old-password\" className=\"f16 mb8\">\n              Old Password\n              <span className=\"font-red f12 bold ml4\">*</span>\n            </label>\n            <Field\n              name=\"oldPassword\"\n              validate={composeValidators(required, minLength(3))}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"old-password\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <label htmlFor=\"new-password\" className=\"f16 mb8\">\n              New Password\n              <span className=\"font-red f12 bold ml4\">*</span>\n            </label>\n            <Field\n              name=\"newPassword\"\n              validate={composeValidators(required, minLength(3))}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"new-password\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <label htmlFor=\"confirm-password\" className=\"f16 mb8\">\n              Confirm New Password\n              <span className=\"font-red f12 bold ml4\">*</span>\n            </label>\n            <Field\n              name=\"checkPassword\"\n              validate={composeValidators(required, minLength(3))}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"confirm-password\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <button\n              className=\"form-button-p font-white bs-2 pt8 pb8 r mt12\"\n              type=\"submit\"\n            >\n              Update\n            </button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount);\n"]},"metadata":{},"sourceType":"module"}