{"ast":null,"code":"import _regeneratorRuntime from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import contactService from\"../services/contact\";import{v4 as uuid}from\"uuid\";import{CONSTANTS}from\"../static/constants\";var initialState={isFetching:false};var contactReducer=function contactReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"CONTACT_REQUEST\":return{isFetching:true};case\"MESSAGE_SENT\":return{isFetching:false};default:return state;}};export var setMessage=function setMessage(values){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:\"CONTACT_REQUEST\"});_context.prev=1;_context.next=4;return contactService.sendEmail(values);case 4:response=_context.sent;dispatch({type:\"MESSAGE_SENT\"});dispatch({type:\"SET_NOTIFICATION\",content:{id:uuid(),message:response.message,type:CONSTANTS.NOTIFICATION.SUCCES}});_context.next=14;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(_context.t0);dispatch({type:\"MESSAGE_SENT\"});dispatch({type:\"SET_NOTIFICATION\",content:{id:uuid(),message:_context.t0.response.data.error,type:CONSTANTS.NOTIFICATION.ERROR}});case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default contactReducer;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/reducers/contactReducer.js"],"names":["contactService","v4","uuid","CONSTANTS","initialState","isFetching","contactReducer","state","action","type","setMessage","values","dispatch","sendEmail","response","content","id","message","NOTIFICATION","SUCCES","console","log","data","error","ERROR"],"mappings":"qVAAA,MAAOA,CAAAA,cAAP,KAA2B,qBAA3B,CACA,OAASC,EAAE,GAAIC,CAAAA,IAAf,KAA2B,MAA3B,CACA,OAASC,SAAT,KAA0B,qBAA1B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CAAEC,UAAU,CAAE,KAAd,CAArB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACvD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,iBAAL,CACE,MAAO,CAAEJ,UAAU,CAAE,IAAd,CAAP,CACF,IAAK,cAAL,CACE,MAAO,CAAEA,UAAU,CAAE,KAAd,CAAP,CACF,QACE,MAAOE,CAAAA,KAAP,CANJ,CAQD,CATD,CAWA,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAY,CACpC,+FAAO,iBAAOC,QAAP,+HACLA,QAAQ,CAAC,CACPH,IAAI,CAAE,iBADC,CAAD,CAAR,CADK,sCAKoBT,CAAAA,cAAc,CAACa,SAAf,CAAyBF,MAAzB,CALpB,QAKGG,QALH,eAMHF,QAAQ,CAAC,CACPH,IAAI,CAAE,cADC,CAAD,CAAR,CAGAG,QAAQ,CAAC,CACPH,IAAI,CAAE,kBADC,CAEPM,OAAO,CAAE,CACPC,EAAE,CAAEd,IAAI,EADD,CAEPe,OAAO,CAAEH,QAAQ,CAACG,OAFX,CAGPR,IAAI,CAAEN,SAAS,CAACe,YAAV,CAAuBC,MAHtB,CAFF,CAAD,CAAR,CATG,+EAkBHC,OAAO,CAACC,GAAR,cACAT,QAAQ,CAAC,CACPH,IAAI,CAAE,cADC,CAAD,CAAR,CAGAG,QAAQ,CAAC,CACPH,IAAI,CAAE,kBADC,CAEPM,OAAO,CAAE,CACPC,EAAE,CAAEd,IAAI,EADD,CAEPe,OAAO,CAAE,YAAEH,QAAF,CAAWQ,IAAX,CAAgBC,KAFlB,CAGPd,IAAI,CAAEN,SAAS,CAACe,YAAV,CAAuBM,KAHtB,CAFF,CAAD,CAAR,CAtBG,oEAAP,+DAgCD,CAjCM,CAmCP,cAAelB,CAAAA,cAAf","sourcesContent":["import contactService from \"../services/contact\";\nimport { v4 as uuid } from \"uuid\";\nimport { CONSTANTS } from \"../static/constants\";\n\nconst initialState = { isFetching: false };\n\nconst contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONTACT_REQUEST\":\n      return { isFetching: true };\n    case \"MESSAGE_SENT\":\n      return { isFetching: false };\n    default:\n      return state;\n  }\n};\n\nexport const setMessage = (values) => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"CONTACT_REQUEST\",\n    });\n    try {\n      const response = await contactService.sendEmail(values);\n      dispatch({\n        type: \"MESSAGE_SENT\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          id: uuid(),\n          message: response.message,\n          type: CONSTANTS.NOTIFICATION.SUCCES,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n      dispatch({\n        type: \"MESSAGE_SENT\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          id: uuid(),\n          message: e.response.data.error,\n          type: CONSTANTS.NOTIFICATION.ERROR,\n        },\n      });\n    }\n  };\n};\n\nexport default contactReducer;\n"]},"metadata":{},"sourceType":"module"}