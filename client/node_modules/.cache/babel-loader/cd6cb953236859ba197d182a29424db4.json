{"ast":null,"code":"import _toConsumableArray from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{Field}from\"react-final-form\";import{required,composeValidators}from\"../../utils/formValidatorHelper\";import{developerTooltip,occupierInvestorTooltip}from\"../../static/tooltipText\";import{CONSTANTS}from\"../../static/constants\";import Tooltip from\"./Tooltip\";var FinalFormField=function FinalFormField(_ref){var _developerTooltip$fie,_occupierInvestorTool;var label=_ref.label,fieldName=_ref.fieldName,type=_ref.type,validators=_ref.validators,placeholder=_ref.placeholder,fieldType=_ref.fieldType,maxLength=_ref.maxLength,min=_ref.min,max=_ref.max,step=_ref.step,prepend=_ref.prepend,append=_ref.append,parseType=_ref.parseType,readOnly=_ref.readOnly;var message=type===CONSTANTS.TYPES.DEVELOPER?(_developerTooltip$fie=developerTooltip[fieldName])===null||_developerTooltip$fie===void 0?void 0:_developerTooltip$fie.message:(_occupierInvestorTool=occupierInvestorTooltip[fieldName])===null||_occupierInvestorTool===void 0?void 0:_occupierInvestorTool.message;var parse=function parse(value){if(parseType===CONSTANTS.PARSETYPE.INT){return isNaN(parseInt(value))?\"\":parseInt(value);}return isNaN(parseFloat(value))?\"\":parseFloat(value);};var id=\"\".concat(type,\"-\").concat(fieldName).toLowerCase();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row align-c relative\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:id,className:\"f16 mb8\"},label,validators.includes(required)&&/*#__PURE__*/React.createElement(\"span\",{className:\"font-red f12 bold ml4\"},\"*\")),message&&/*#__PURE__*/React.createElement(Tooltip,{message:message})),/*#__PURE__*/React.createElement(Field,{name:fieldName,validate:composeValidators.apply(void 0,_toConsumableArray(validators)),parse:parse},function(_ref2){var input=_ref2.input,meta=_ref2.meta;return/*#__PURE__*/React.createElement(\"div\",{className:\"relative mb20\"},/*#__PURE__*/React.createElement(\"input\",Object.assign({id:id,className:\"form-input bs-1 w100 \".concat(prepend?\"pl32\":\"\",\" \").concat(append?\"pr70\":\"\"),placeholder:placeholder,type:fieldType,maxLength:maxLength,min:min,max:max,step:step},input,{readOnly:readOnly})),prepend&&/*#__PURE__*/React.createElement(\"span\",{className:\"prepend absolute f12 pl12 pt12\"},prepend),append&&/*#__PURE__*/React.createElement(\"span\",{className:\"append absolute f12 pr12 pt12\"},append),meta.error&&meta.touched&&/*#__PURE__*/React.createElement(\"span\",{className:\"form-error f10\"},meta.error));}));};export default FinalFormField;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Shared/FinalFormField.js"],"names":["React","Field","required","composeValidators","developerTooltip","occupierInvestorTooltip","CONSTANTS","Tooltip","FinalFormField","label","fieldName","type","validators","placeholder","fieldType","maxLength","min","max","step","prepend","append","parseType","readOnly","message","TYPES","DEVELOPER","parse","value","PARSETYPE","INT","isNaN","parseInt","parseFloat","id","toLowerCase","includes","input","meta","error","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field } from \"react-final-form\";\nimport { required, composeValidators } from \"../../utils/formValidatorHelper\";\nimport {\n  developerTooltip,\n  occupierInvestorTooltip,\n} from \"../../static/tooltipText\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport Tooltip from \"./Tooltip\";\n\nconst FinalFormField = ({\n  label,\n  fieldName,\n  type,\n  validators,\n  placeholder,\n  fieldType,\n  maxLength,\n  min,\n  max,\n  step,\n  prepend,\n  append,\n  parseType,\n  readOnly,\n}) => {\n  const message =\n    type === CONSTANTS.TYPES.DEVELOPER\n      ? developerTooltip[fieldName]?.message\n      : occupierInvestorTooltip[fieldName]?.message;\n\n  const parse = (value) => {\n    if (parseType === CONSTANTS.PARSETYPE.INT) {\n      return isNaN(parseInt(value)) ? \"\" : parseInt(value);\n    }\n    return isNaN(parseFloat(value)) ? \"\" : parseFloat(value);\n  };\n\n  const id = `${type}-${fieldName}`.toLowerCase();\n\n  return (\n    <>\n      <div className=\"flex-row align-c relative\">\n        <label htmlFor={id} className=\"f16 mb8\">\n          {label}\n          {validators.includes(required) && (\n            <span className=\"font-red f12 bold ml4\">*</span>\n          )}\n        </label>\n        {message && <Tooltip message={message} />}\n      </div>\n      <Field\n        name={fieldName}\n        validate={composeValidators(...validators)}\n        parse={parse}\n      >\n        {({ input, meta }) => (\n          <div className=\"relative mb20\">\n            <input\n              id={id}\n              className={`form-input bs-1 w100 ${prepend ? \"pl32\" : \"\"} ${\n                append ? \"pr70\" : \"\"\n              }`}\n              placeholder={placeholder}\n              type={fieldType}\n              maxLength={maxLength}\n              min={min}\n              max={max}\n              step={step}\n              {...input}\n              readOnly={readOnly}\n            />\n            {prepend && (\n              <span className=\"prepend absolute f12 pl12 pt12\">{prepend}</span>\n            )}\n            {append && (\n              <span className=\"append absolute f12 pr12 pt12\">{append}</span>\n            )}\n            {meta.error && meta.touched && (\n              <span className=\"form-error f10\">{meta.error}</span>\n            )}\n          </div>\n        )}\n      </Field>\n    </>\n  );\n};\n\nexport default FinalFormField;\n"]},"metadata":{},"sourceType":"module"}