{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Contact.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { setMessage } from \"../reducers/contactReducer\";\nimport { required, maxLength, isEmail, composeValidators } from \"../utils/formValidatorHelper\";\nimport FinalFormField from \"./Shared/FinalFormField\";\n\nconst Contact = ({\n  setMessage\n}) => {\n  const onSubmit = values => {\n    setMessage(values);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"f24 bold mt16 mb16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Contact Us\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"r bs-3 bg-1 p20 mb20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      rest\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FinalFormField, {\n      label: \"Full Name\",\n      fieldName: \"fullName\",\n      validators: [required, maxLength(50)],\n      placeholder: \"Full Name\",\n      fieldType: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FinalFormField, {\n      label: \"Company\",\n      fieldName: \"company\",\n      validators: [maxLength(100)],\n      placeholder: \"Company Name\",\n      fieldType: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FinalFormField, {\n      label: \"Email\",\n      fieldName: \"email\",\n      validators: [required, isEmail],\n      placeholder: \"example@email.com\",\n      fieldType: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, label, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"message\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n      id: \"message\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Message\",\n      input: \"text\",\n      maxLength: \"1250\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }\n    }, meta.error)))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.contact.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Contact.js"],"names":["React","connect","Form","Field","setMessage","required","maxLength","isEmail","composeValidators","FinalFormField","Contact","onSubmit","values","handleSubmit","rest","label","input","meta","error","touched","mapStateToProps","state","isFetching","contact","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { setMessage } from \"../reducers/contactReducer\";\nimport {\n  required,\n  maxLength,\n  isEmail,\n  composeValidators,\n} from \"../utils/formValidatorHelper\";\nimport FinalFormField from \"./Shared/FinalFormField\";\n\nconst Contact = ({ setMessage }) => {\n  const onSubmit = (values) => {\n    setMessage(values);\n  };\n\n  return (\n    <>\n      <h1 className=\"f24 bold mt16 mb16\">Contact Us</h1>\n      <div className=\"r bs-3 bg-1 p20 mb20\">\n        <Form\n          onSubmit={onSubmit}\n          render={({ handleSubmit, rest }) => (\n            <form onSubmit={handleSubmit}>\n              <FinalFormField\n                label={\"Full Name\"}\n                fieldName={\"fullName\"}\n                validators={[required, maxLength(50)]}\n                placeholder={\"Full Name\"}\n                fieldType={\"text\"}\n              />\n              <FinalFormField\n                label={\"Company\"}\n                fieldName={\"company\"}\n                validators={[maxLength(100)]}\n                placeholder={\"Company Name\"}\n                fieldType={\"text\"}\n              />\n              <FinalFormField\n                label={\"Email\"}\n                fieldName={\"email\"}\n                validators={[required, isEmail]}\n                placeholder={\"example@email.com\"}\n                fieldType={\"email\"}\n              />\n              <label htmlFor={\"message\"} className=\"f16 mb8\">\n                {label}\n                <span className=\"font-red f12 bold ml4\">*</span>\n              </label>\n              <Field name=\"message\" validate={required}>\n                {({ input, meta }) => (\n                  <div>\n                    <textarea\n                      id=\"message\"\n                      className=\"form-input bs-1 w100\"\n                      placeholder=\"Message\"\n                      input=\"text\"\n                      maxLength=\"1250\"\n                      {...input}\n                    />\n                    {meta.error && meta.touched && (\n                      <span className=\"form-error f10\">{meta.error}</span>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </form>\n          )}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.contact.isFetching,\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\n"]},"metadata":{},"sourceType":"module"}