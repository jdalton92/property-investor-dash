{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nimport userService from \"../services/user\";\nconst initialState = [];\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return [...state, action.content];\n\n    case \"CLEAR_NOTIFICATION\":\n      return state.filter(n => n.id !== action.content.id);\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  return dispatch => {\n    const id = uuid();\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      content: {\n        id,\n        message,\n        type\n      }\n    });\n  };\n};\nexport const clearNotification = id => {\n  return dispatch => {\n    dispatch({\n      type: \"CLEAR_NOTIFICATION\",\n      content: {\n        id\n      }\n    });\n  };\n};\nexport const hideHelperMessage = (userId, type) => {\n  return async dispatch => {\n    try {\n      await userService.readMessage(userId, type);\n    } catch (e) {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\"\n        }\n      });\n    }\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/reducers/notificationReducer.js"],"names":["v4","uuid","userService","initialState","notificationReducer","state","action","type","content","filter","n","id","setNotification","message","dispatch","clearNotification","hideHelperMessage","userId","readMessage","e","response","data","error"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAK,oBAAL;AACE,aAAOH,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAP,CAAeG,EAA5C,CAAP;;AACF;AACE,aAAON,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMO,eAAe,GAAG,CAACC,OAAD,EAAUN,IAAV,KAAmB;AAChD,SAAQO,QAAD,IAAc;AACnB,UAAMH,EAAE,GAAGV,IAAI,EAAf;AACAa,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,OAAO,EAAE;AACPG,QAAAA,EADO;AAEPE,QAAAA,OAFO;AAGPN,QAAAA;AAHO;AAFF,KAAD,CAAR;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMQ,iBAAiB,GAAIJ,EAAD,IAAQ;AACvC,SAAQG,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAE;AACPG,QAAAA;AADO;AAFF,KAAD,CAAR;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMK,iBAAiB,GAAG,CAACC,MAAD,EAASV,IAAT,KAAkB;AACjD,SAAO,MAAOO,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMZ,WAAW,CAACgB,WAAZ,CAAwBD,MAAxB,EAAgCV,IAAhC,CAAN;AACD,KAFD,CAEE,OAAOY,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAE;AACPK,UAAAA,OAAO,EAAEM,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,KADlB;AAEPf,UAAAA,IAAI,EAAE;AAFC;AAFF,OAAD,CAAR;AAOD;AACF,GAZD;AAaD,CAdM;AAgBP,eAAeH,mBAAf","sourcesContent":["import { v4 as uuid } from \"uuid\";\nimport userService from \"../services/user\";\n\nconst initialState = [];\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return [...state, action.content];\n    case \"CLEAR_NOTIFICATION\":\n      return state.filter((n) => n.id !== action.content.id);\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  return (dispatch) => {\n    const id = uuid();\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      content: {\n        id,\n        message,\n        type,\n      },\n    });\n  };\n};\n\nexport const clearNotification = (id) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"CLEAR_NOTIFICATION\",\n      content: {\n        id,\n      },\n    });\n  };\n};\n\nexport const hideHelperMessage = (userId, type) => {\n  return async (dispatch) => {\n    try {\n      await userService.readMessage(userId, type);\n    } catch (e) {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response.data.error,\n          type: \"error\",\n        },\n      });\n    }\n  };\n};\n\nexport default notificationReducer;\n"]},"metadata":{},"sourceType":"module"}