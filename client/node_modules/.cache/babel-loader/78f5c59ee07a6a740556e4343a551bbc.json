{"ast":null,"code":"import _slicedToArray from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/james/development/property-investor-dash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as sCurveData from\"../static/sCurve.json\";import{currencyFormatter,reducerHelper}from\"./dashboardHelper\";export var developerCalculation=function developerCalculation(_ref){var acquisitionPrice=_ref.acquisitionPrice,acquisitionCosts=_ref.acquisitionCosts,dwellings=_ref.dwellings,constructionCostPerDwelling=_ref.constructionCostPerDwelling,designFees=_ref.designFees,constructionContingency=_ref.constructionContingency,statutoryFees=_ref.statutoryFees,constructionDuration=_ref.constructionDuration,planningAndDesign=_ref.planningAndDesign,revenuePerDwelling=_ref.revenuePerDwelling,sellingCosts=_ref.sellingCosts,investmentPeriod=_ref.investmentPeriod,recurringCosts=_ref.recurringCosts,rentalYield=_ref.rentalYield,initialEquity=_ref.initialEquity,loanType=_ref.loanType,interestRate=_ref.interestRate,loanTerm=_ref.loanTerm,overPayments=_ref.overPayments,capitalGrowth=_ref.capitalGrowth,constructionCostGrowth=_ref.constructionCostGrowth;// If value undefined then default to zero\n// All other inputs are required\nif(!designFees){designFees=0;}if(!investmentPeriod){investmentPeriod=0;}if(!statutoryFees){statutoryFees=0;}if(!sellingCosts){sellingCosts=0;}if(!recurringCosts){recurringCosts=0;}if(!capitalGrowth){capitalGrowth=0;}if(!constructionCostGrowth){constructionCostGrowth=0;}if(!overPayments){overPayments=[{}];}if(!acquisitionCosts){acquisitionCosts=0;}//Initialise constant variables\nvar deliveryPhase=planningAndDesign+constructionDuration;var investmentEnd=planningAndDesign+constructionDuration+investmentPeriod*12;var loanEnd=planningAndDesign+constructionDuration+loanTerm*12;var sCurveRef=constructionDuration-1;var totalConstructionCost=dwellings*constructionCostPerDwelling*Math.pow(1+constructionCostGrowth/100/12,planningAndDesign+Math.ceil(constructionDuration/2)-1//escalate construction costs to middle of construction period\n);var grossSale=dwellings*revenuePerDwelling*Math.pow(1+capitalGrowth/100/12,deliveryPhase+investmentPeriod*12-1);//Initalise finance variables\nvar cumulativeFundableCosts=0;var t=investmentEnd;var r=interestRate/100;var closingBalance=0;//Initialise summary output\nvar monthSummary=[];//Master Loop over investment period\nvar _loop=function _loop(i){//Initialise Flags\nvar constFlag=i>planningAndDesign-1&&i<deliveryPhase;var deliveryFlag=i<deliveryPhase;var investFlag=i>deliveryPhase-1&&i<investmentEnd;//Acquisition Costs\nvar acquisition=i===planningAndDesign?acquisitionPrice*Math.pow(1+capitalGrowth/100/12,planningAndDesign):null;var initialCosts=i===planningAndDesign?acquisitionCosts/100*acquisition:null;//Delivery Period Costs\nvar sCurve=!constFlag?null:constructionDuration>50?1/constructionDuration:sCurveData.default[sCurveRef][constructionDuration.toString()][i-planningAndDesign];var constructionCost=constFlag?totalConstructionCost*parseFloat(sCurve):null;var professionalFees=deliveryFlag?designFees/100*totalConstructionCost/deliveryPhase:null;var statutoryCosts=i===planningAndDesign?statutoryFees/100*totalConstructionCost:null;var contingency=constFlag?constructionContingency/100*constructionCost:null;//Revenues & Investment Period Costs\nvar grossRealisation=i===investmentEnd-1?grossSale:null;var sellingCost=grossRealisation*sellingCosts/100;var rentalIncome=investFlag?dwellings*revenuePerDwelling*Math.pow(1+capitalGrowth/100/12,i)*rentalYield/100/12:null;var opex=investFlag?recurringCosts/100*rentalIncome:null;//Finance costs\nvar fundableCosts=acquisition+initialCosts+constructionCost+professionalFees+statutoryCosts+contingency;cumulativeFundableCosts+=fundableCosts;var equitySource=cumulativeFundableCosts<initialEquity?fundableCosts:cumulativeFundableCosts-initialEquity<fundableCosts?fundableCosts-(cumulativeFundableCosts-initialEquity):null;var equityWithdraw=i===investmentEnd-1?initialEquity:null;var debtSource=cumulativeFundableCosts>initialEquity?cumulativeFundableCosts-initialEquity<fundableCosts?cumulativeFundableCosts-initialEquity:fundableCosts:null;var openingBalance=closingBalance;var openingBalanceInterest=openingBalance*(1+r/12);var n=deliveryPhase+loanTerm*12-i;var loanPayment=0;if(i>deliveryPhase-1&&i<loanEnd){loanPayment=loanType===\"interestOnly\"?openingBalance*r/12:Math.min(r/12*openingBalance*Math.pow(1+r/12,n)/(Math.pow(1+r/12,n)-1),openingBalanceInterest);}var annualOverPayment=overPayments.filter(function(p){return parseInt(p===null||p===void 0?void 0:p.year)*12===i+1;}).reduce(function(a,b){return a+(b===null||b===void 0?void 0:b.payment);},0);var loanInstallment=loanPayment+annualOverPayment;var principalRepayment=i===loanEnd-1||i===investmentEnd-1?openingBalanceInterest-loanInstallment:null;closingBalance=openingBalanceInterest+debtSource-loanInstallment-principalRepayment;//Summary cashflow items\nvar preFinanceCashflow=-acquisition-initialCosts-constructionCost-professionalFees-statutoryCosts-contingency+grossRealisation-sellingCost+rentalIncome-opex;var postFinanceCashflow=preFinanceCashflow+debtSource-loanInstallment-principalRepayment;//Add month summary object to summary array\nmonthSummary.push({month:i+1,year:Math.ceil((i+1)/12),acquisition:acquisition,initialCosts:initialCosts,constructionCost:constructionCost,professionalFees:professionalFees,statutoryCosts:statutoryCosts,contingency:contingency,grossRealisation:grossRealisation,sellingCost:sellingCost,rentalIncome:rentalIncome,opex:opex,preFinanceCashflow:preFinanceCashflow,openingBalance:openingBalance,interest:openingBalanceInterest-openingBalance,loanInstallment:loanInstallment,principalRepayment:principalRepayment,closingBalance:closingBalance,equitySource:equitySource,equityWithdraw:equityWithdraw,debtSource:debtSource,postFinanceCashflow:postFinanceCashflow});};for(var i=0;i<t;i++){_loop(i);}return monthSummary;};export var cumulativeChartParse=function cumulativeChartParse(data){var labels=data.map(function(c){return c.month;});var cumulativePreFinanceCashflow=data.reduce(function(acc,c){acc.push(c.preFinanceCashflow+(acc.length>0?acc[acc.length-1]:0));return acc;},[]);var cumulativePostFinanceCashflow=data.reduce(function(acc,c){acc.push(c.postFinanceCashflow+(acc.length>0?acc[acc.length-1]:0));return acc;},[]);var dataObject={data:{postFinance:{datasets:[{data:_toConsumableArray(cumulativePostFinanceCashflow),fill:true,backgroundColor:\"#92bed2\",pointBackgroundColor:\"#3282bf\",borderColor:\"#3282bf\",pointHighlightStroke:\"#3282bf\",borderCapStyle:\"butt\"}],labels:_toConsumableArray(labels)},preFinance:{datasets:[{data:_toConsumableArray(cumulativePreFinanceCashflow),fill:true,backgroundColor:\"#92bed2\",pointBackgroundColor:\"#3282bf\",borderColor:\"#3282bf\",pointHighlightStroke:\"#3282bf\",borderCapStyle:\"butt\"}],labels:_toConsumableArray(labels)}},options:{maintainAspectRatio:false,scales:{yAxes:[{ticks:{// Include a dollar sign in the ticks\ncallback:function callback(value){return currencyFormatter.format(value);}}}],xAxes:[{scaleLabel:{display:true,labelString:\"Month\"}}]},tooltips:{callbacks:{beforeTitle:function beforeTitle(tooltipItem,object){return\"Month\";},label:function label(tooltipItem,data){return currencyFormatter.format(tooltipItem.yLabel);}}},legend:{display:false}}};return dataObject;};export var annualChartParse=function annualChartParse(data){//Get annual cashflow\nvar _tableParse=tableParse(data),annualCashflow=_tableParse.annualCashflow;//Transform annual cashflow from objects of annual\n//cashflow summary, to an object with each cost item\n//an array of each year sum\nvar annualData={acquisitionCosts:[],TDC:[],NOI:[],netSale:[]};annualCashflow.forEach(function(cf){for(var _i=0,_Object$entries=Object.entries(cf);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(!annualData[key])continue;annualData[key].push(value);}});//Transform annualData into ChartJS data structure\nvar datasets=[];var dataLabels=[\"Acquisition Costs\",\"Total Development Costs\",\"Net Rental Income\",\"Net Sale Proceeds\"];var dataColors=[\"rgba(8, 65, 92, 0.6)\",\"rgba(107, 129, 140, 0.6)\",\"rgba(241, 192, 152, 0.6)\",\"rgba(238, 229, 233, 0.6)\"];var i=0;for(var _i2=0,_Object$values=Object.values(annualData);_i2<_Object$values.length;_i2++){var value=_Object$values[_i2];datasets.push({label:dataLabels[i],data:value,backgroundColor:dataColors[i]});i++;}//x-axis labels\nvar labels=annualCashflow.map(function(c){return c.year;});//ChartJS data object for config of stacked bar chart\nvar dataObject={data:{labels:_toConsumableArray(labels),datasets:[].concat(datasets)},options:{maintainAspectRatio:false,scales:{yAxes:[{stacked:true,ticks:{// Include a dollar sign in the ticks\ncallback:function callback(value){return currencyFormatter.format(value);}}}],xAxes:[{stacked:true,scaleLabel:{display:true,labelString:\"Year\"}}]},tooltips:{callbacks:{label:function label(tooltipItem,data){return\"\".concat(data.datasets[tooltipItem.datasetIndex].label,\" \").concat(currencyFormatter.format(tooltipItem.yLabel));},beforeTitle:function beforeTitle(tooltipItem,object){return\"Year\";}}}}};return dataObject;};export var pieChartParse=function pieChartParse(data){var totalData=reducerHelper(data);var preFinanceDataset=[Math.round(totalData.acquisition),Math.round(totalData.initialCosts),Math.round(totalData.constructionCost),Math.round(totalData.professionalFees),Math.round(totalData.statutoryCosts),Math.round(totalData.contingency),Math.round(totalData.sellingCost),Math.round(totalData.opex)];var postFinanceDataset=preFinanceDataset.concat(Math.round(totalData.interest));var preFinanceLabels=[\"Acquisition\",\"Acquisition Costs\",\"Construction Costs\",\"Planning & Design Fees\",\"Development Levy\",\"Contingency\",\"Selling Costs\",\"Operating Costs\"];var postFinanceLabels=preFinanceLabels.concat(\"Interest on Debt\");var dataObject={data:{postFinance:{datasets:[{data:_toConsumableArray(postFinanceDataset)}],labels:_toConsumableArray(postFinanceLabels)},preFinance:{datasets:[{data:[].concat(preFinanceDataset)}],labels:[].concat(preFinanceLabels)}},options:{maintainAspectRatio:false,legend:{position:\"right\"}}};return dataObject;};export var tableParse=function tableParse(data){var tableData={summaryCashflow:[],annualCashflow:[]};var _loop2=function _loop2(i){var annualData=reducerHelper(data.filter(function(d){return d.year===i;}));tableData.annualCashflow.push({year:i,acquisitionCosts:-annualData.acquisition-annualData.initialCosts,TDC:-annualData.constructionCost-annualData.professionalFees-annualData.statutoryCosts-annualData.contingency,NOI:annualData.rentalIncome-annualData.opex,netSale:annualData.grossRealisation-annualData.sellingCost,preFinanceCashflow:annualData.preFinanceCashflow,loanCosts:-annualData.loanInstallment-annualData.principalRepayment,postFinanceCashflow:annualData.postFinanceCashflow,totalIncome:annualData.rentalIncome+annualData.grossRealisation,preFinanceTotalCost:-annualData.acquisition-annualData.initialCosts-annualData.constructionCost-annualData.professionalFees-annualData.statutoryCosts-annualData.contingency-annualData.opex-annualData.sellingCost,debtSource:annualData.debtSource,postFinanceTotalCost:-annualData.acquisition-annualData.initialCosts-annualData.constructionCost-annualData.professionalFees-annualData.statutoryCosts-annualData.contingency-annualData.opex-annualData.sellingCost-annualData.loanInstallment-annualData.principalRepayment});};for(var i=1;i<=Math.ceil(data.length/12);i++){_loop2(i);}var summaryData=reducerHelper(data);tableData.summaryCashflow.push({year:null,totalRevenue:summaryData.grossRealisation+summaryData.rentalIncome,totalCostsPreFinance:summaryData.acquisition+summaryData.initialCosts+summaryData.constructionCost+summaryData.professionalFees+summaryData.statutoryCosts+summaryData.contingency+summaryData.opex+summaryData.sellingCost,totalCostsPostFinance:summaryData.acquisition+summaryData.initialCosts+summaryData.constructionCost+summaryData.professionalFees+summaryData.statutoryCosts+summaryData.contingency+summaryData.opex+summaryData.sellingCost+summaryData.loanInstallment,acquisitionCosts:-summaryData.acquisition-summaryData.initialCosts,TDC:-summaryData.constructionCost-summaryData.professionalFees-summaryData.statutoryCosts-summaryData.contingency,NOI:summaryData.rentalIncome-summaryData.opex,netSale:summaryData.grossRealisation-summaryData.sellingCost,preFinanceCashflow:summaryData.preFinanceCashflow,loanCosts:-summaryData.loanInstallment-summaryData.principalRepayment,postFinanceCashflow:summaryData.postFinanceCashflow,totalIncome:summaryData.rentalIncome+summaryData.grossRealisation,preFinanceTotalCost:-summaryData.acquisition-summaryData.initialCosts-summaryData.constructionCost-summaryData.professionalFees-summaryData.statutoryCosts-summaryData.contingency-summaryData.opex-summaryData.sellingCost,debtSource:summaryData.debtSource,postFinanceTotalCost:-summaryData.acquisition-summaryData.initialCosts-summaryData.constructionCost-summaryData.professionalFees-summaryData.statutoryCosts-summaryData.contingency-summaryData.opex-summaryData.sellingCost-summaryData.loanInstallment-summaryData.principalRepayment});return tableData;};export var developerMOCCalculation=function developerMOCCalculation(data){var summaryData=reducerHelper(data);var preProfit=summaryData.preFinanceCashflow;var postProfit=summaryData.postFinanceCashflow;var preCost=summaryData.acquisition+summaryData.initialCosts+summaryData.constructionCost+summaryData.professionalFees+summaryData.statutoryCosts+summaryData.contingency+summaryData.sellingCost;var postCost=preCost+summaryData.loanInstallment;return{preFinance:preProfit/preCost,postFinance:postProfit/postCost};};export var fundingChartParse=function fundingChartParse(data){var labels=data.map(function(c){return c.month;});var cumulativeEquity=data.reduce(function(acc,c){acc.push(Math.round(c.equitySource-c.equityWithdraw)+(acc.length>0?acc[acc.length-1]:0));return acc;},[]);var cumulativeDebt=data.reduce(function(acc,c){acc.push(Math.round(c.debtSource+c.interest-c.loanInstallment-c.principalRepayment)+(acc.length>0?acc[acc.length-1]:0));return acc;},[]);var dataObject={data:{datasets:[{data:_toConsumableArray(cumulativeEquity),label:\"Equity\",fill:true,backgroundColor:\"#8fa8c8\",pointBackgroundColor:\"#75539e\",borderColor:\"#75539e\",pointHighlightStroke:\"#75539e\",borderCapStyle:\"butt\"},{data:_toConsumableArray(cumulativeDebt),label:\"Debt\",fill:true,backgroundColor:\"#92bed2\",pointBackgroundColor:\"#3282bf\",borderColor:\"#3282bf\",pointHighlightStroke:\"#3282bf\",borderCapStyle:\"butt\"}],labels:_toConsumableArray(labels)},options:{maintainAspectRatio:false,scales:{yAxes:[{ticks:{// Include a dollar sign in the ticks\ncallback:function callback(value){return currencyFormatter.format(value);}},stacked:true}],xAxes:[{scaleLabel:{display:true,labelString:\"Month\"}}]},tooltips:{callbacks:{beforeTitle:function beforeTitle(tooltipItem,object){return\"Month\";},label:function label(tooltipItem,data){return currencyFormatter.format(tooltipItem.yLabel);}}}}};return dataObject;};","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/utils/developerDashboardDataParser.js"],"names":["sCurveData","currencyFormatter","reducerHelper","developerCalculation","acquisitionPrice","acquisitionCosts","dwellings","constructionCostPerDwelling","designFees","constructionContingency","statutoryFees","constructionDuration","planningAndDesign","revenuePerDwelling","sellingCosts","investmentPeriod","recurringCosts","rentalYield","initialEquity","loanType","interestRate","loanTerm","overPayments","capitalGrowth","constructionCostGrowth","deliveryPhase","investmentEnd","loanEnd","sCurveRef","totalConstructionCost","Math","pow","ceil","grossSale","cumulativeFundableCosts","t","r","closingBalance","monthSummary","i","constFlag","deliveryFlag","investFlag","acquisition","initialCosts","sCurve","default","toString","constructionCost","parseFloat","professionalFees","statutoryCosts","contingency","grossRealisation","sellingCost","rentalIncome","opex","fundableCosts","equitySource","equityWithdraw","debtSource","openingBalance","openingBalanceInterest","n","loanPayment","min","annualOverPayment","filter","p","parseInt","year","reduce","a","b","payment","loanInstallment","principalRepayment","preFinanceCashflow","postFinanceCashflow","push","month","interest","cumulativeChartParse","data","labels","map","c","cumulativePreFinanceCashflow","acc","length","cumulativePostFinanceCashflow","dataObject","postFinance","datasets","fill","backgroundColor","pointBackgroundColor","borderColor","pointHighlightStroke","borderCapStyle","preFinance","options","maintainAspectRatio","scales","yAxes","ticks","callback","value","format","xAxes","scaleLabel","display","labelString","tooltips","callbacks","beforeTitle","tooltipItem","object","label","yLabel","legend","annualChartParse","tableParse","annualCashflow","annualData","TDC","NOI","netSale","forEach","cf","Object","entries","key","dataLabels","dataColors","values","stacked","datasetIndex","pieChartParse","totalData","preFinanceDataset","round","postFinanceDataset","concat","preFinanceLabels","postFinanceLabels","position","tableData","summaryCashflow","d","loanCosts","totalIncome","preFinanceTotalCost","postFinanceTotalCost","summaryData","totalRevenue","totalCostsPreFinance","totalCostsPostFinance","developerMOCCalculation","preProfit","postProfit","preCost","postCost","fundingChartParse","cumulativeEquity","cumulativeDebt"],"mappings":"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","sourcesContent":["import * as sCurveData from \"../static/sCurve.json\";\nimport { currencyFormatter, reducerHelper } from \"./dashboardHelper\";\n\nexport const developerCalculation = ({\n  acquisitionPrice,\n  acquisitionCosts,\n  dwellings,\n  constructionCostPerDwelling,\n  designFees,\n  constructionContingency,\n  statutoryFees,\n  constructionDuration,\n  planningAndDesign,\n\n  revenuePerDwelling,\n  sellingCosts,\n  investmentPeriod,\n  recurringCosts,\n  rentalYield,\n\n  initialEquity,\n  loanType,\n  interestRate,\n  loanTerm,\n  overPayments,\n\n  capitalGrowth,\n  constructionCostGrowth,\n}) => {\n  // If value undefined then default to zero\n  // All other inputs are required\n  if (!designFees) {\n    designFees = 0;\n  }\n  if (!investmentPeriod) {\n    investmentPeriod = 0;\n  }\n  if (!statutoryFees) {\n    statutoryFees = 0;\n  }\n  if (!sellingCosts) {\n    sellingCosts = 0;\n  }\n  if (!recurringCosts) {\n    recurringCosts = 0;\n  }\n  if (!capitalGrowth) {\n    capitalGrowth = 0;\n  }\n  if (!constructionCostGrowth) {\n    constructionCostGrowth = 0;\n  }\n  if (!overPayments) {\n    overPayments = [{}];\n  }\n  if (!acquisitionCosts) {\n    acquisitionCosts = 0;\n  }\n  //Initialise constant variables\n  const deliveryPhase = planningAndDesign + constructionDuration;\n  const investmentEnd =\n    planningAndDesign + constructionDuration + investmentPeriod * 12;\n  const loanEnd = planningAndDesign + constructionDuration + loanTerm * 12;\n  const sCurveRef = constructionDuration - 1;\n  const totalConstructionCost =\n    dwellings *\n    constructionCostPerDwelling *\n    Math.pow(\n      1 + constructionCostGrowth / 100 / 12,\n      planningAndDesign + Math.ceil(constructionDuration / 2) - 1 //escalate construction costs to middle of construction period\n    );\n  const grossSale =\n    dwellings *\n    revenuePerDwelling *\n    Math.pow(\n      1 + capitalGrowth / 100 / 12,\n      deliveryPhase + investmentPeriod * 12 - 1\n    );\n\n  //Initalise finance variables\n  let cumulativeFundableCosts = 0;\n  const t = investmentEnd;\n  const r = interestRate / 100;\n  let closingBalance = 0;\n\n  //Initialise summary output\n  let monthSummary = [];\n\n  //Master Loop over investment period\n  for (let i = 0; i < t; i++) {\n    //Initialise Flags\n    const constFlag = i > planningAndDesign - 1 && i < deliveryPhase;\n    const deliveryFlag = i < deliveryPhase;\n    const investFlag = i > deliveryPhase - 1 && i < investmentEnd;\n\n    //Acquisition Costs\n    const acquisition =\n      i === planningAndDesign\n        ? acquisitionPrice *\n          Math.pow(1 + capitalGrowth / 100 / 12, planningAndDesign)\n        : null;\n\n    const initialCosts =\n      i === planningAndDesign ? (acquisitionCosts / 100) * acquisition : null;\n\n    //Delivery Period Costs\n    const sCurve = !constFlag\n      ? null\n      : constructionDuration > 50\n      ? 1 / constructionDuration\n      : sCurveData.default[sCurveRef][constructionDuration.toString()][\n          i - planningAndDesign\n        ];\n\n    const constructionCost = constFlag\n      ? totalConstructionCost * parseFloat(sCurve)\n      : null;\n\n    const professionalFees = deliveryFlag\n      ? ((designFees / 100) * totalConstructionCost) / deliveryPhase\n      : null;\n\n    const statutoryCosts =\n      i === planningAndDesign\n        ? (statutoryFees / 100) * totalConstructionCost\n        : null;\n\n    const contingency = constFlag\n      ? (constructionContingency / 100) * constructionCost\n      : null;\n\n    //Revenues & Investment Period Costs\n    const grossRealisation = i === investmentEnd - 1 ? grossSale : null;\n\n    const sellingCost = (grossRealisation * sellingCosts) / 100;\n\n    const rentalIncome = investFlag\n      ? (dwellings *\n          revenuePerDwelling *\n          Math.pow(1 + capitalGrowth / 100 / 12, i) *\n          rentalYield) /\n        100 /\n        12\n      : null;\n\n    const opex = investFlag ? (recurringCosts / 100) * rentalIncome : null;\n\n    //Finance costs\n    const fundableCosts =\n      acquisition +\n      initialCosts +\n      constructionCost +\n      professionalFees +\n      statutoryCosts +\n      contingency;\n\n    cumulativeFundableCosts += fundableCosts;\n\n    const equitySource =\n      cumulativeFundableCosts < initialEquity\n        ? fundableCosts\n        : cumulativeFundableCosts - initialEquity < fundableCosts\n        ? fundableCosts - (cumulativeFundableCosts - initialEquity)\n        : null;\n\n    const equityWithdraw = i === investmentEnd - 1 ? initialEquity : null;\n\n    const debtSource =\n      cumulativeFundableCosts > initialEquity\n        ? cumulativeFundableCosts - initialEquity < fundableCosts\n          ? cumulativeFundableCosts - initialEquity\n          : fundableCosts\n        : null;\n\n    const openingBalance = closingBalance;\n\n    const openingBalanceInterest = openingBalance * (1 + r / 12);\n\n    const n = deliveryPhase + loanTerm * 12 - i;\n    let loanPayment = 0;\n    if (i > deliveryPhase - 1 && i < loanEnd) {\n      loanPayment =\n        loanType === \"interestOnly\"\n          ? (openingBalance * r) / 12\n          : Math.min(\n              ((r / 12) * openingBalance * Math.pow(1 + r / 12, n)) /\n                (Math.pow(1 + r / 12, n) - 1),\n              openingBalanceInterest\n            );\n    }\n\n    const annualOverPayment = overPayments\n      .filter((p) => parseInt(p?.year) * 12 === i + 1)\n      .reduce((a, b) => a + b?.payment, 0);\n\n    const loanInstallment = loanPayment + annualOverPayment;\n\n    const principalRepayment =\n      i === loanEnd - 1 || i === investmentEnd - 1\n        ? openingBalanceInterest - loanInstallment\n        : null;\n\n    closingBalance =\n      openingBalanceInterest +\n      debtSource -\n      loanInstallment -\n      principalRepayment;\n\n    //Summary cashflow items\n    const preFinanceCashflow =\n      -acquisition -\n      initialCosts -\n      constructionCost -\n      professionalFees -\n      statutoryCosts -\n      contingency +\n      grossRealisation -\n      sellingCost +\n      rentalIncome -\n      opex;\n\n    const postFinanceCashflow =\n      preFinanceCashflow + debtSource - loanInstallment - principalRepayment;\n\n    //Add month summary object to summary array\n    monthSummary.push({\n      month: i + 1,\n      year: Math.ceil((i + 1) / 12),\n      acquisition,\n      initialCosts,\n      constructionCost,\n      professionalFees,\n      statutoryCosts,\n      contingency,\n      grossRealisation,\n      sellingCost,\n      rentalIncome,\n      opex,\n      preFinanceCashflow,\n      openingBalance,\n      interest: openingBalanceInterest - openingBalance,\n      loanInstallment,\n      principalRepayment,\n      closingBalance,\n      equitySource,\n      equityWithdraw,\n      debtSource,\n      postFinanceCashflow,\n    });\n  }\n  return monthSummary;\n};\n\nexport const cumulativeChartParse = (data) => {\n  const labels = data.map((c) => c.month);\n\n  const cumulativePreFinanceCashflow = data.reduce((acc, c) => {\n    acc.push(c.preFinanceCashflow + (acc.length > 0 ? acc[acc.length - 1] : 0));\n    return acc;\n  }, []);\n  const cumulativePostFinanceCashflow = data.reduce((acc, c) => {\n    acc.push(\n      c.postFinanceCashflow + (acc.length > 0 ? acc[acc.length - 1] : 0)\n    );\n    return acc;\n  }, []);\n\n  const dataObject = {\n    data: {\n      postFinance: {\n        datasets: [\n          {\n            data: [...cumulativePostFinanceCashflow],\n            fill: true,\n            backgroundColor: \"#92bed2\",\n            pointBackgroundColor: \"#3282bf\",\n            borderColor: \"#3282bf\",\n            pointHighlightStroke: \"#3282bf\",\n            borderCapStyle: \"butt\",\n          },\n        ],\n        labels: [...labels],\n      },\n      preFinance: {\n        datasets: [\n          {\n            data: [...cumulativePreFinanceCashflow],\n            fill: true,\n            backgroundColor: \"#92bed2\",\n            pointBackgroundColor: \"#3282bf\",\n            borderColor: \"#3282bf\",\n            pointHighlightStroke: \"#3282bf\",\n            borderCapStyle: \"butt\",\n          },\n        ],\n        labels: [...labels],\n      },\n    },\n    options: {\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // Include a dollar sign in the ticks\n              callback: (value) => {\n                return currencyFormatter.format(value);\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Month\",\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          beforeTitle: (tooltipItem, object) => {\n            return \"Month\";\n          },\n          label: (tooltipItem, data) => {\n            return currencyFormatter.format(tooltipItem.yLabel);\n          },\n        },\n      },\n      legend: {\n        display: false,\n      },\n    },\n  };\n  return dataObject;\n};\n\nexport const annualChartParse = (data) => {\n  //Get annual cashflow\n  const { annualCashflow } = tableParse(data);\n\n  //Transform annual cashflow from objects of annual\n  //cashflow summary, to an object with each cost item\n  //an array of each year sum\n  let annualData = {\n    acquisitionCosts: [],\n    TDC: [],\n    NOI: [],\n    netSale: [],\n  };\n\n  annualCashflow.forEach((cf) => {\n    for (let [key, value] of Object.entries(cf)) {\n      if (!annualData[key]) continue;\n      annualData[key].push(value);\n    }\n  });\n\n  //Transform annualData into ChartJS data structure\n  const datasets = [];\n  const dataLabels = [\n    \"Acquisition Costs\",\n    \"Total Development Costs\",\n    \"Net Rental Income\",\n    \"Net Sale Proceeds\",\n  ];\n  const dataColors = [\n    \"rgba(8, 65, 92, 0.6)\",\n    \"rgba(107, 129, 140, 0.6)\",\n    \"rgba(241, 192, 152, 0.6)\",\n    \"rgba(238, 229, 233, 0.6)\",\n  ];\n  let i = 0;\n  for (let value of Object.values(annualData)) {\n    datasets.push({\n      label: dataLabels[i],\n      data: value,\n      backgroundColor: dataColors[i],\n    });\n    i++;\n  }\n\n  //x-axis labels\n  const labels = annualCashflow.map((c) => c.year);\n\n  //ChartJS data object for config of stacked bar chart\n  const dataObject = {\n    data: {\n      labels: [...labels],\n      datasets: [...datasets],\n    },\n    options: {\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [\n          {\n            stacked: true,\n            ticks: {\n              // Include a dollar sign in the ticks\n              callback: (value) => {\n                return currencyFormatter.format(value);\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"Year\",\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          label: (tooltipItem, data) => {\n            return `${\n              data.datasets[tooltipItem.datasetIndex].label\n            } ${currencyFormatter.format(tooltipItem.yLabel)}`;\n          },\n          beforeTitle: (tooltipItem, object) => {\n            return \"Year\";\n          },\n        },\n      },\n    },\n  };\n  return dataObject;\n};\n\nexport const pieChartParse = (data) => {\n  const totalData = reducerHelper(data);\n\n  const preFinanceDataset = [\n    Math.round(totalData.acquisition),\n    Math.round(totalData.initialCosts),\n    Math.round(totalData.constructionCost),\n    Math.round(totalData.professionalFees),\n    Math.round(totalData.statutoryCosts),\n    Math.round(totalData.contingency),\n    Math.round(totalData.sellingCost),\n    Math.round(totalData.opex),\n  ];\n\n  const postFinanceDataset = preFinanceDataset.concat(\n    Math.round(totalData.interest)\n  );\n\n  const preFinanceLabels = [\n    \"Acquisition\",\n    \"Acquisition Costs\",\n    \"Construction Costs\",\n    \"Planning & Design Fees\",\n    \"Development Levy\",\n    \"Contingency\",\n    \"Selling Costs\",\n    \"Operating Costs\",\n  ];\n\n  const postFinanceLabels = preFinanceLabels.concat(\"Interest on Debt\");\n\n  const dataObject = {\n    data: {\n      postFinance: {\n        datasets: [\n          {\n            data: [...postFinanceDataset],\n          },\n        ],\n        labels: [...postFinanceLabels],\n      },\n      preFinance: {\n        datasets: [\n          {\n            data: [...preFinanceDataset],\n          },\n        ],\n        labels: [...preFinanceLabels],\n      },\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        position: \"right\",\n      },\n    },\n  };\n  return dataObject;\n};\n\nexport const tableParse = (data) => {\n  let tableData = {\n    summaryCashflow: [],\n    annualCashflow: [],\n  };\n\n  for (let i = 1; i <= Math.ceil(data.length / 12); i++) {\n    const annualData = reducerHelper(data.filter((d) => d.year === i));\n    tableData.annualCashflow.push({\n      year: i,\n      acquisitionCosts: -annualData.acquisition - annualData.initialCosts,\n      TDC:\n        -annualData.constructionCost -\n        annualData.professionalFees -\n        annualData.statutoryCosts -\n        annualData.contingency,\n      NOI: annualData.rentalIncome - annualData.opex,\n      netSale: annualData.grossRealisation - annualData.sellingCost,\n      preFinanceCashflow: annualData.preFinanceCashflow,\n      loanCosts: -annualData.loanInstallment - annualData.principalRepayment,\n      postFinanceCashflow: annualData.postFinanceCashflow,\n      totalIncome: annualData.rentalIncome + annualData.grossRealisation,\n      preFinanceTotalCost:\n        -annualData.acquisition -\n        annualData.initialCosts -\n        annualData.constructionCost -\n        annualData.professionalFees -\n        annualData.statutoryCosts -\n        annualData.contingency -\n        annualData.opex -\n        annualData.sellingCost,\n      debtSource: annualData.debtSource,\n      postFinanceTotalCost:\n        -annualData.acquisition -\n        annualData.initialCosts -\n        annualData.constructionCost -\n        annualData.professionalFees -\n        annualData.statutoryCosts -\n        annualData.contingency -\n        annualData.opex -\n        annualData.sellingCost -\n        annualData.loanInstallment -\n        annualData.principalRepayment,\n    });\n  }\n\n  const summaryData = reducerHelper(data);\n\n  tableData.summaryCashflow.push({\n    year: null,\n    totalRevenue: summaryData.grossRealisation + summaryData.rentalIncome,\n    totalCostsPreFinance:\n      summaryData.acquisition +\n      summaryData.initialCosts +\n      summaryData.constructionCost +\n      summaryData.professionalFees +\n      summaryData.statutoryCosts +\n      summaryData.contingency +\n      summaryData.opex +\n      summaryData.sellingCost,\n    totalCostsPostFinance:\n      summaryData.acquisition +\n      summaryData.initialCosts +\n      summaryData.constructionCost +\n      summaryData.professionalFees +\n      summaryData.statutoryCosts +\n      summaryData.contingency +\n      summaryData.opex +\n      summaryData.sellingCost +\n      summaryData.loanInstallment,\n    acquisitionCosts: -summaryData.acquisition - summaryData.initialCosts,\n    TDC:\n      -summaryData.constructionCost -\n      summaryData.professionalFees -\n      summaryData.statutoryCosts -\n      summaryData.contingency,\n    NOI: summaryData.rentalIncome - summaryData.opex,\n    netSale: summaryData.grossRealisation - summaryData.sellingCost,\n    preFinanceCashflow: summaryData.preFinanceCashflow,\n    loanCosts: -summaryData.loanInstallment - summaryData.principalRepayment,\n    postFinanceCashflow: summaryData.postFinanceCashflow,\n    totalIncome: summaryData.rentalIncome + summaryData.grossRealisation,\n    preFinanceTotalCost:\n      -summaryData.acquisition -\n      summaryData.initialCosts -\n      summaryData.constructionCost -\n      summaryData.professionalFees -\n      summaryData.statutoryCosts -\n      summaryData.contingency -\n      summaryData.opex -\n      summaryData.sellingCost,\n    debtSource: summaryData.debtSource,\n    postFinanceTotalCost:\n      -summaryData.acquisition -\n      summaryData.initialCosts -\n      summaryData.constructionCost -\n      summaryData.professionalFees -\n      summaryData.statutoryCosts -\n      summaryData.contingency -\n      summaryData.opex -\n      summaryData.sellingCost -\n      summaryData.loanInstallment -\n      summaryData.principalRepayment,\n  });\n  return tableData;\n};\n\nexport const developerMOCCalculation = (data) => {\n  const summaryData = reducerHelper(data);\n\n  const preProfit = summaryData.preFinanceCashflow;\n  const postProfit = summaryData.postFinanceCashflow;\n  const preCost =\n    summaryData.acquisition +\n    summaryData.initialCosts +\n    summaryData.constructionCost +\n    summaryData.professionalFees +\n    summaryData.statutoryCosts +\n    summaryData.contingency +\n    summaryData.sellingCost;\n  const postCost = preCost + summaryData.loanInstallment;\n\n  return {\n    preFinance: preProfit / preCost,\n    postFinance: postProfit / postCost,\n  };\n};\n\nexport const fundingChartParse = (data) => {\n  const labels = data.map((c) => c.month);\n  const cumulativeEquity = data.reduce((acc, c) => {\n    acc.push(\n      Math.round(c.equitySource - c.equityWithdraw) +\n        (acc.length > 0 ? acc[acc.length - 1] : 0)\n    );\n    return acc;\n  }, []);\n  const cumulativeDebt = data.reduce((acc, c) => {\n    acc.push(\n      Math.round(\n        c.debtSource + c.interest - c.loanInstallment - c.principalRepayment\n      ) + (acc.length > 0 ? acc[acc.length - 1] : 0)\n    );\n    return acc;\n  }, []);\n\n  const dataObject = {\n    data: {\n      datasets: [\n        {\n          data: [...cumulativeEquity],\n          label: \"Equity\",\n          fill: true,\n          backgroundColor: \"#8fa8c8\",\n          pointBackgroundColor: \"#75539e\",\n          borderColor: \"#75539e\",\n          pointHighlightStroke: \"#75539e\",\n          borderCapStyle: \"butt\",\n        },\n        {\n          data: [...cumulativeDebt],\n          label: \"Debt\",\n          fill: true,\n          backgroundColor: \"#92bed2\",\n          pointBackgroundColor: \"#3282bf\",\n          borderColor: \"#3282bf\",\n          pointHighlightStroke: \"#3282bf\",\n          borderCapStyle: \"butt\",\n        },\n      ],\n      labels: [...labels],\n    },\n    options: {\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // Include a dollar sign in the ticks\n              callback: (value) => {\n                return currencyFormatter.format(value);\n              },\n            },\n            stacked: true,\n          },\n        ],\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Month\",\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          beforeTitle: (tooltipItem, object) => {\n            return \"Month\";\n          },\n          label: (tooltipItem, data) => {\n            return currencyFormatter.format(tooltipItem.yLabel);\n          },\n        },\n      },\n    },\n  };\n  return dataObject;\n};\n"]},"metadata":{},"sourceType":"module"}