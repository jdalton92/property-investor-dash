{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Tooltip.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst TooltipOutsideAlerter = ({\n  setShow\n}) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = e => {\n    if (!(wrapperRef.current && wrapperRef.current.contains(e.target))) {\n      setShow(false);\n    }\n  };\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nconst Tooltip = ({\n  message\n}) => {\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/React.createElement(TooltipOutsideAlerter, {\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative mb8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, show && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip-msg absolute bg-black r p8 font-white white text-center fade-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, message), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"tooltip-btn\",\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"?\")));\n};\n\nexport default connect(null, null)(Tooltip);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Tooltip.js"],"names":["React","useState","useEffect","useRef","connect","TooltipOutsideAlerter","setShow","wrapperRef","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","props","children","Tooltip","message","show"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7C,QAAMC,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;;AACA,QAAMK,kBAAkB,GAAIC,CAAD,IAAO;AAChC,QAAI,EAAEF,UAAU,CAACG,OAAX,IAAsBH,UAAU,CAACG,OAAX,CAAmBC,QAAnB,CAA4BF,CAAC,CAACG,MAA9B,CAAxB,CAAJ,EAAoE;AAClEN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAJD;;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,WAAO,MAAM;AACX;AACAK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD,KAHD;AAID,GAPQ,CAAT;AASA,sBAAO;AAAK,IAAA,GAAG,EAAED,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBS,KAAK,CAACC,QAA7B,CAAP;AACD,CAlBD;;AAoBA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,QAAM,CAACC,IAAD,EAAOd,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,IAAI,iBACH;AAAK,IAAA,SAAS,EAAC,yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,CAFJ,eAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAE,MAAMb,OAAO,CAAC,CAACc,IAAF,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADF,CADF;AAkBD,CArBD;;AAuBA,eAAehB,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAAoBc,OAApB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst TooltipOutsideAlerter = ({ setShow }) => {\n  const wrapperRef = useRef(null);\n  const handleClickOutside = (e) => {\n    if (!(wrapperRef.current && wrapperRef.current.contains(e.target))) {\n      setShow(false);\n    }\n  };\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n};\n\nconst Tooltip = ({ message }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <TooltipOutsideAlerter setShow={setShow}>\n      <div className=\"relative mb8\">\n        {show && (\n          <div className=\"tooltip-msg absolute bg-black r p8 font-white white text-center fade-in\">\n            {message}\n          </div>\n        )}\n        <button\n          type=\"button\"\n          className=\"tooltip-btn\"\n          onClick={() => setShow(!show)}\n        >\n          ?\n        </button>\n      </div>\n    </TooltipOutsideAlerter>\n  );\n};\n\nexport default connect(null, null)(Tooltip);\n"]},"metadata":{},"sourceType":"module"}