{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Login.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginUser, demoUser } from \"../reducers/userReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { required, minLength, isEmail, composeValidators } from \"../utils/formValidatorHelper\";\nimport { CONSTANTS } from \"../static/constants\";\n\nconst Login = ({\n  loginUser,\n  user,\n  demoUser,\n  setNotification\n}) => {\n  const history = useHistory();\n  useEffect(() => {\n    if (user.data.username) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  const onSubmit = async ({\n    email,\n    password\n  }) => {\n    await loginUser(email, password);\n  };\n\n  const handleForgotPassword = () => {\n    setNotification(\"Forgot password clicked\", CONSTANTS.NOTIFICATION.MESSAGE);\n  };\n\n  const handleCreateAccount = () => {\n    setNotification(\"Create account clicked\", CONSTANTS.NOTIFICATION.MESSAGE);\n  };\n\n  const handleDemo = () => {\n    demoUser();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vh100 w100 fade-in relative bg-blue-1 flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h100 testclass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h100 r p24 m8 bs-3 bg-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"bold f24 mb56 mt32 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"PropertyInvestorDash\"), /*#__PURE__*/React.createElement(FinalForm, {\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      validate: composeValidators(isEmail, required),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-input mb28 w100\",\n      placeholder: \"example@email.com\",\n      type: \"email\"\n    }, input, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      validate: composeValidators(required, minLength(3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-input mb32 w100\",\n      placeholder: \"Password\",\n      type: \"password\"\n    }, input, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-button-p font-white bs-3 w100 pt8 pb8 r\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, \"Login\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb8 ml8 mr8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link\",\n    onClick: handleForgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Forgot your password?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb8 ml8 mr8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link\",\n    onClick: handleCreateAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Create an account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml8 mr8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"link\",\n    onClick: handleDemo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Try a demo account\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  loginUser,\n  demoUser,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Login.js"],"names":["React","useEffect","connect","Form","FinalForm","Field","useHistory","loginUser","demoUser","setNotification","required","minLength","isEmail","composeValidators","CONSTANTS","Login","user","history","data","username","push","onSubmit","email","password","handleForgotPassword","NOTIFICATION","MESSAGE","handleCreateAccount","handleDemo","handleSubmit","input","meta","error","touched","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginUser, demoUser } from \"../reducers/userReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport {\n  required,\n  minLength,\n  isEmail,\n  composeValidators,\n} from \"../utils/formValidatorHelper\";\nimport { CONSTANTS } from \"../static/constants\";\n\nconst Login = ({ loginUser, user, demoUser, setNotification }) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user.data.username) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  const onSubmit = async ({ email, password }) => {\n    await loginUser(email, password);\n  };\n\n  const handleForgotPassword = () => {\n    setNotification(\"Forgot password clicked\", CONSTANTS.NOTIFICATION.MESSAGE);\n  };\n\n  const handleCreateAccount = () => {\n    setNotification(\"Create account clicked\", CONSTANTS.NOTIFICATION.MESSAGE);\n  };\n\n  const handleDemo = () => {\n    demoUser();\n  };\n\n  return (\n    <div className=\"vh100 w100 fade-in relative bg-blue-1 flex-col\">\n      <div className=\"h100 testclass\"></div>\n      <div>\n        <div className=\"center login\">\n          <div className=\"h100 r p24 m8 bs-3 bg-1\">\n            <h1 className=\"bold f24 mb56 mt32 text-center\">\n              PropertyInvestorDash\n            </h1>\n            <FinalForm\n              onSubmit={onSubmit}\n              render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <h2 className=\"f16 mb8\">Email</h2>\n                  <Field\n                    name=\"email\"\n                    validate={composeValidators(isEmail, required)}\n                  >\n                    {({ input, meta }) => (\n                      <div className=\"relative\">\n                        <input\n                          className=\"form-input mb28 w100\"\n                          placeholder=\"example@email.com\"\n                          type=\"email\"\n                          {...input}\n                          required\n                        />\n                        {meta.error && meta.touched && (\n                          <div className=\"form-error\">{meta.error}</div>\n                        )}\n                      </div>\n                    )}\n                  </Field>\n                  <h2 className=\"f16 mb8\">Password</h2>\n                  <Field\n                    name=\"password\"\n                    validate={composeValidators(required, minLength(3))}\n                  >\n                    {({ input, meta }) => (\n                      <div className=\"relative\">\n                        <input\n                          className=\"form-input mb32 w100\"\n                          placeholder=\"Password\"\n                          type=\"password\"\n                          {...input}\n                          required\n                        />\n                        {meta.error && meta.touched && (\n                          <span className=\"form-error\">{meta.error}</span>\n                        )}\n                      </div>\n                    )}\n                  </Field>\n                  <button\n                    className=\"form-button-p font-white bs-3 w100 pt8 pb8 r\"\n                    type=\"submit\"\n                  >\n                    Login\n                  </button>\n                </form>\n              )}\n            />\n          </div>\n          <div className=\"mb8 ml8 mr8\">\n            <span className=\"link\" onClick={handleForgotPassword}>\n              Forgot your password?\n            </span>\n          </div>\n          <div className=\"mb8 ml8 mr8\">\n            <span className=\"link\" onClick={handleCreateAccount}>\n              Create an account\n            </span>\n          </div>\n          <div className=\"ml8 mr8\">\n            <span className=\"link\" onClick={handleDemo}>\n              Try a demo account\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  loginUser,\n  demoUser,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}