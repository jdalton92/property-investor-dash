{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Settings/Settings.ChangePassword.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { updateUser } from \"../../reducers/userReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport { required, minLength, isEmail, composeValidators } from \"../../utils/formValidatorHelper\";\n\nconst ChangePassword = ({\n  user,\n  updateUser\n}) => {\n  const userDetails = {\n    username: user.data.username,\n    oldEmail: user.data.email,\n    id: user.data.id\n  };\n\n  const handleSubmit = async values => {\n    // React final form handles e.preventDefault()\n    const {\n      oldPassword,\n      newPassword,\n      checkPassword\n    } = values;\n    await updateUser({\n      oldPassword,\n      newPassword,\n      checkPassword,\n      ...userDetails\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: ({\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f20 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Change Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r bs-3 bg-1 p20 mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-email\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"New Email\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"newEmail\",\n      validate: composeValidators(required, minLength(3), isEmail),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"new-email\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"new@email.com\",\n      type: \"email\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-button-p font-white bs-2 pt8 pb8 r mt12\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Update\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Settings/Settings.ChangePassword.js"],"names":["React","connect","Form","Field","updateUser","setNotification","required","minLength","isEmail","composeValidators","ChangePassword","user","userDetails","username","data","oldEmail","email","id","handleSubmit","values","oldPassword","newPassword","checkPassword","input","meta","error","touched","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { updateUser } from \"../../reducers/userReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport {\n  required,\n  minLength,\n  isEmail,\n  composeValidators,\n} from \"../../utils/formValidatorHelper\";\n\nconst ChangePassword = ({ user, updateUser }) => {\n  const userDetails = {\n    username: user.data.username,\n    oldEmail: user.data.email,\n    id: user.data.id,\n  };\n\n  const handleSubmit = async (values) => {\n    // React final form handles e.preventDefault()\n    const { oldPassword, newPassword, checkPassword } = values;\n    await updateUser({\n      oldPassword,\n      newPassword,\n      checkPassword,\n      ...userDetails,\n    });\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={({ handleSubmit, values }) => (\n        <form onSubmit={handleSubmit}>\n          <h2 className=\"f20 bold mt16 mb16\">Change Password</h2>\n          <div className=\"r bs-3 bg-1 p20 mb20\">\n            <label htmlFor=\"new-email\" className=\"f16 mb8\">\n              New Email\n              <span className=\"font-red f12 bold ml4\">*</span>\n            </label>\n            <Field\n              name=\"newEmail\"\n              validate={composeValidators(required, minLength(3), isEmail)}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"new-email\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"new@email.com\"\n                    type=\"email\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <button\n              className=\"form-button-p font-white bs-2 pt8 pb8 r mt12\"\n              type=\"submit\"\n            >\n              Update\n            </button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}