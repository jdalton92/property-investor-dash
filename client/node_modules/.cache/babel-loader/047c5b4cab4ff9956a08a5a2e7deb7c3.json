{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nconst initialState = [];\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return [...state, action.content];\n\n    case \"CLEAR_NOTIFICATION\":\n      return state.filter(n => n.id !== action.content.id);\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  return dispatch => {\n    const id = uuid();\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      content: {\n        id,\n        message,\n        type\n      }\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"CLEAR_NOTIFICATION\",\n        content: {\n          id\n        }\n      });\n    }, 5000);\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/reducers/notificationReducer.js"],"names":["v4","uuid","initialState","notificationReducer","state","action","type","content","filter","n","id","setNotification","message","dispatch","setTimeout"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAK,oBAAL;AACE,aAAOH,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAP,CAAeG,EAA5C,CAAP;;AACF;AACE,aAAON,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMO,eAAe,GAAG,CAACC,OAAD,EAAUN,IAAV,KAAmB;AAChD,SAAQO,QAAD,IAAc;AACnB,UAAMH,EAAE,GAAGT,IAAI,EAAf;AACAY,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,OAAO,EAAE;AACPG,QAAAA,EADO;AAEPE,QAAAA,OAFO;AAGPN,QAAAA;AAHO;AAFF,KAAD,CAAR;AAQAQ,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAE;AACPG,UAAAA;AADO;AAFF,OAAD,CAAR;AAMD,KAPS,EAOP,IAPO,CAAV;AAQD,GAlBD;AAmBD,CApBM;AAsBP,eAAeP,mBAAf","sourcesContent":["import { v4 as uuid } from \"uuid\";\n\nconst initialState = [];\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return [...state, action.content];\n    case \"CLEAR_NOTIFICATION\":\n      return state.filter((n) => n.id !== action.content.id);\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  return (dispatch) => {\n    const id = uuid();\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      content: {\n        id,\n        message,\n        type,\n      },\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"CLEAR_NOTIFICATION\",\n        content: {\n          id,\n        },\n      });\n    }, 5000);\n  };\n};\n\nexport default notificationReducer;\n"]},"metadata":{},"sourceType":"module"}