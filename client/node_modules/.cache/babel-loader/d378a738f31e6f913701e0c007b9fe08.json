{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Dashboards/SaveDashboardModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport { setModal } from \"../../reducers/navigationReducer\";\nimport { saveDashboard, updateDashboard } from \"../../reducers/dashboardReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport { composeValidators, required, maxLength, minLength } from \"../../utils/formValidatorHelper\";\n\nconst SaveDashboardModal = ({\n  dashboards,\n  user,\n  setModal,\n  setNotification,\n  saveDashboard,\n  updateDashboard,\n  saveDashboardModal\n}) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  const handleSave = async saveData => {\n    if (!user.data.username) {\n      setModal(\"saveDashboard\");\n      setNotification(\"Please login to save dashboard\", \"danger\");\n      return;\n    }\n\n    const dashObject = {\n      values: dashboards.data[0].values,\n      ...saveData\n    };\n\n    if (id) {\n      await updateDashboard(dashObject);\n    } else {\n      await saveDashboard(dashObject);\n    }\n\n    setModal(\"saveDashboard\");\n\n    if (!dashboards.isFetching) {\n      setNotification(`${saveData.description} saved`, \"success\");\n      history.push(\"/saved-dashboards\");\n    }\n  };\n\n  const handleCancel = e => {\n    // React Final Form handles preventDefault()\n    setModal(\"saveDashboard\");\n  };\n\n  const initialValues = id ? dashboards.data[0].values : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-wrapper w100 h100 fixed p8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal mt24 r bs-3 bg-1 p20 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"SAVE DASHBOARD MODAL\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards,\n    saveDashboardModal: state.navigation.modal.saveDashboard,\n    user: state.user,\n    requestSuceed: state.navigation.requestSuceed\n  };\n};\n\nconst mapDispatchToProps = {\n  setModal,\n  saveDashboard,\n  updateDashboard,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDashboardModal);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Dashboards/SaveDashboardModal.js"],"names":["React","connect","useHistory","useParams","Form","Field","setModal","saveDashboard","updateDashboard","setNotification","composeValidators","required","maxLength","minLength","SaveDashboardModal","dashboards","user","saveDashboardModal","id","history","handleSave","saveData","data","username","dashObject","values","isFetching","description","push","handleCancel","e","initialValues","mapStateToProps","state","navigation","modal","requestSuceed","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SACEC,aADF,EAEEC,eAFF,QAGO,iCAHP;AAIA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SACEC,iBADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,SAJF,QAKO,iCALP;;AAOA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,UAD0B;AAE1BC,EAAAA,IAF0B;AAG1BV,EAAAA,QAH0B;AAI1BG,EAAAA,eAJ0B;AAK1BF,EAAAA,aAL0B;AAM1BC,EAAAA,eAN0B;AAO1BS,EAAAA;AAP0B,CAAD,KAQrB;AACJ,QAAMC,EAAE,GAAGf,SAAS,GAAGe,EAAvB;AACA,QAAMC,OAAO,GAAGjB,UAAU,EAA1B;;AAEA,QAAMkB,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACrC,QAAI,CAACL,IAAI,CAACM,IAAL,CAAUC,QAAf,EAAyB;AACvBjB,MAAAA,QAAQ,CAAC,eAAD,CAAR;AACAG,MAAAA,eAAe,CAAC,gCAAD,EAAmC,QAAnC,CAAf;AACA;AACD;;AAED,UAAMe,UAAU,GAAG;AACjBC,MAAAA,MAAM,EAAEV,UAAU,CAACO,IAAX,CAAgB,CAAhB,EAAmBG,MADV;AAEjB,SAAGJ;AAFc,KAAnB;;AAKA,QAAIH,EAAJ,EAAQ;AACN,YAAMV,eAAe,CAACgB,UAAD,CAArB;AACD,KAFD,MAEO;AACL,YAAMjB,aAAa,CAACiB,UAAD,CAAnB;AACD;;AAEDlB,IAAAA,QAAQ,CAAC,eAAD,CAAR;;AAEA,QAAI,CAACS,UAAU,CAACW,UAAhB,EAA4B;AAC1BjB,MAAAA,eAAe,CAAE,GAAEY,QAAQ,CAACM,WAAY,QAAzB,EAAkC,SAAlC,CAAf;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,mBAAb;AACD;AACF,GAxBD;;AA0BA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAxB,IAAAA,QAAQ,CAAC,eAAD,CAAR;AACD,GAHD;;AAKA,QAAMyB,aAAa,GAAGb,EAAE,GAAGH,UAAU,CAACO,IAAX,CAAgB,CAAhB,EAAmBG,MAAtB,GAA+B,IAAvD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAOD,CApDD;;AAsDA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLlB,IAAAA,UAAU,EAAEkB,KAAK,CAAClB,UADb;AAELE,IAAAA,kBAAkB,EAAEgB,KAAK,CAACC,UAAN,CAAiBC,KAAjB,CAAuB5B,aAFtC;AAGLS,IAAAA,IAAI,EAAEiB,KAAK,CAACjB,IAHP;AAILoB,IAAAA,aAAa,EAAEH,KAAK,CAACC,UAAN,CAAiBE;AAJ3B,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAG;AACzB/B,EAAAA,QADyB;AAEzBC,EAAAA,aAFyB;AAGzBC,EAAAA,eAHyB;AAIzBC,EAAAA;AAJyB,CAA3B;AAOA,eAAeR,OAAO,CAAC+B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CvB,kBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport { setModal } from \"../../reducers/navigationReducer\";\nimport {\n  saveDashboard,\n  updateDashboard,\n} from \"../../reducers/dashboardReducer\";\nimport { setNotification } from \"../../reducers/notificationReducer\";\nimport {\n  composeValidators,\n  required,\n  maxLength,\n  minLength,\n} from \"../../utils/formValidatorHelper\";\n\nconst SaveDashboardModal = ({\n  dashboards,\n  user,\n  setModal,\n  setNotification,\n  saveDashboard,\n  updateDashboard,\n  saveDashboardModal,\n}) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  const handleSave = async (saveData) => {\n    if (!user.data.username) {\n      setModal(\"saveDashboard\");\n      setNotification(\"Please login to save dashboard\", \"danger\");\n      return;\n    }\n\n    const dashObject = {\n      values: dashboards.data[0].values,\n      ...saveData,\n    };\n\n    if (id) {\n      await updateDashboard(dashObject);\n    } else {\n      await saveDashboard(dashObject);\n    }\n\n    setModal(\"saveDashboard\");\n\n    if (!dashboards.isFetching) {\n      setNotification(`${saveData.description} saved`, \"success\");\n      history.push(\"/saved-dashboards\");\n    }\n  };\n\n  const handleCancel = (e) => {\n    // React Final Form handles preventDefault()\n    setModal(\"saveDashboard\");\n  };\n\n  const initialValues = id ? dashboards.data[0].values : null;\n\n  return (\n    <div className=\"modal-wrapper w100 h100 fixed p8\">\n      <div className=\"modal mt24 r bs-3 bg-1 p20 m-auto\">\n        SAVE DASHBOARD MODAL\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n    saveDashboardModal: state.navigation.modal.saveDashboard,\n    user: state.user,\n    requestSuceed: state.navigation.requestSuceed,\n  };\n};\n\nconst mapDispatchToProps = {\n  setModal,\n  saveDashboard,\n  updateDashboard,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveDashboardModal);\n"]},"metadata":{},"sourceType":"module"}