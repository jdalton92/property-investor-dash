{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Contact.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { setMessage } from \"../reducers/contactReducer\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { required, isEmail, composeValidators } from \"../helpers/formValidatorHelper\";\n\nconst Contact = ({\n  setMessage,\n  isFetching\n}) => {\n  const onSubmit = values => {\n    setMessage(values);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form-section\",\n    id: \"contact-form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-outer-container form-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Contact\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(Spinner, {\n    className: \"loading-spinner\",\n    animation: \"border\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FinalForm, {\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      rest\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-element\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"fullName\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"Full Name\",\n      type: \"text\",\n      maxLength: \"50\"\n    }, input, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"company\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"Company\",\n      type: \"text\",\n      maxLength: \"50\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      validate: composeValidators(isEmail, required),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"example@email.com\",\n      type: \"email\",\n      maxLength: \"100\"\n    }, input, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"message\",\n      validate: required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n      id: \"form-message\",\n      className: \"form-control\",\n      placeholder: \"Message\",\n      input: \"text\",\n      maxLength: \"1250\"\n    }, input, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"form-button\",\n      id: \"form-submit\",\n      type: \"submit\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Submit\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.contact.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Contact.js"],"names":["React","connect","Form","FinalForm","Field","setMessage","Button","Spinner","required","isEmail","composeValidators","Contact","isFetching","onSubmit","values","handleSubmit","rest","input","meta","error","touched","mapStateToProps","state","contact","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { setMessage } from \"../reducers/contactReducer\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport {\n  required,\n  isEmail,\n  composeValidators,\n} from \"../helpers/formValidatorHelper\";\n\nconst Contact = ({ setMessage, isFetching }) => {\n  const onSubmit = (values) => {\n    setMessage(values);\n  };\n\n  return (\n    <section className=\"form-section\" id=\"contact-form-section\">\n      <div className=\"form-outer-container form-card-container\">\n        <div className=\"form-header\">\n          <h1>Contact</h1>\n        </div>\n        <div className=\"form-inner-container\">\n          {isFetching ? (\n            <Spinner\n              className=\"loading-spinner\"\n              animation=\"border\"\n              variant=\"primary\"\n            />\n          ) : (\n            <FinalForm\n              onSubmit={onSubmit}\n              render={({ handleSubmit, rest }) => (\n                <form className=\"form-element\" onSubmit={handleSubmit}>\n                  <div className=\"form-item\">\n                    <h5>Full Name</h5>\n                    <Field name=\"fullName\" validate={required}>\n                      {({ input, meta }) => (\n                        <div>\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"Full Name\"\n                            type=\"text\"\n                            maxLength=\"50\"\n                            {...input}\n                            required\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <h5>Company</h5>\n                    <Field name=\"company\">\n                      {({ input, meta }) => (\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Company\"\n                          type=\"text\"\n                          maxLength=\"50\"\n                          {...input}\n                        />\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <h5>Email</h5>\n                    <Field\n                      name=\"email\"\n                      validate={composeValidators(isEmail, required)}\n                    >\n                      {({ input, meta }) => (\n                        <div>\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"example@email.com\"\n                            type=\"email\"\n                            maxLength=\"100\"\n                            {...input}\n                            required\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <h5>Message</h5>\n                    <Field name=\"message\" validate={required}>\n                      {({ input, meta }) => (\n                        <div>\n                          <textarea\n                            id=\"form-message\"\n                            className=\"form-control\"\n                            placeholder=\"Message\"\n                            input=\"text\"\n                            maxLength=\"1250\"\n                            {...input}\n                            required\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-button-container\">\n                    <Button\n                      className=\"form-button\"\n                      id=\"form-submit\"\n                      type=\"submit\"\n                      variant=\"primary\"\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              )}\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.contact.isFetching,\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\n"]},"metadata":{},"sourceType":"module"}