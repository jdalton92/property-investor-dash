{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/MortgageOverpayments.js\";\nimport React from \"react\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { Field } from \"react-final-form\";\nimport { minValue, maxValue, composeValidators } from \"../../utils/formValidatorHelper\";\nimport { developerTooltipHelper, occupierInvestorTooltipHelper } from \"../../utils/tooltipHelper\";\nimport Tooltip from \"../Shared/Tooltip\";\nimport { CONSTANTS } from \"../../static/constants\";\n\nconst MortgageOverpayments = ({\n  push,\n  type\n}) => {\n  const message = type === CONSTANTS.TYPES.DEVELOPER ? developerTooltipHelper[\"overPayments\"].message : occupierInvestorTooltipHelper[\"overPayments\"].message;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row align-c relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `${type}-overpayments`,\n    className: \"f16 mb8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Mortgage Overpayments\"), /*#__PURE__*/React.createElement(Tooltip, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"overPayments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, ({\n    fields\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    id: `${type}-overpayments`,\n    className: \"w100 mb20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Year\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml8 mb8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Overpayment\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, fields.map((name, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"pb4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, index + 1)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: `${name}.year`,\n    validate: minValue(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative mr8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input w100 bs-1\",\n    placeholder: \"Year\",\n    type: \"number\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-error f10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  }, meta.error)))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: `${name}.payment`,\n    validate: composeValidators(minValue(0), maxValue(1000000)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative ml8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input w100 pl32 bs-1\",\n    placeholder: \"Overpayment\",\n    type: \"number\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"prepend absolute f16 pl12 pt10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"$\"), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-error f10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 31\n    }\n  }, meta.error)))))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"form-button-p bs-3 font-white\",\n    onClick: () => push(\"overPayments\", undefined),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Add Overpayment\"))));\n};\n\nexport default MortgageOverpayments;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/MortgageOverpayments.js"],"names":["React","FieldArray","Field","minValue","maxValue","composeValidators","developerTooltipHelper","occupierInvestorTooltipHelper","Tooltip","CONSTANTS","MortgageOverpayments","push","type","message","TYPES","DEVELOPER","fields","map","name","index","input","meta","error","touched","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { Field } from \"react-final-form\";\nimport {\n  minValue,\n  maxValue,\n  composeValidators,\n} from \"../../utils/formValidatorHelper\";\nimport {\n  developerTooltipHelper,\n  occupierInvestorTooltipHelper,\n} from \"../../utils/tooltipHelper\";\nimport Tooltip from \"../Shared/Tooltip\";\nimport { CONSTANTS } from \"../../static/constants\";\n\nconst MortgageOverpayments = ({ push, type }) => {\n  const message =\n    type === CONSTANTS.TYPES.DEVELOPER\n      ? developerTooltipHelper[\"overPayments\"].message\n      : occupierInvestorTooltipHelper[\"overPayments\"].message;\n\n  return (\n    <>\n      <div className=\"flex-row align-c relative\">\n        <label htmlFor={`${type}-overpayments`} className=\"f16 mb8\">\n          Mortgage Overpayments\n        </label>\n        <Tooltip message={message} />\n      </div>\n      <FieldArray name=\"overPayments\">\n        {({ fields }) => (\n          <>\n            <table id={`${type}-overpayments`} className=\"w100 mb20\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>\n                    <span className=\"mb8\">Year</span>\n                  </th>\n                  <th>\n                    <span className=\"ml8 mb8\">Overpayment</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {fields.map((name, index) => (\n                  <tr key={index} className=\"pb4\">\n                    <th>\n                      <span>{index + 1}</span>\n                    </th>\n                    <td>\n                      <Field name={`${name}.year`} validate={minValue(0)}>\n                        {({ input, meta }) => (\n                          <div className=\"relative mr8\">\n                            <input\n                              className=\"form-input w100 bs-1\"\n                              placeholder=\"Year\"\n                              type=\"number\"\n                              step=\"1\"\n                            />\n                            {meta.error && meta.touched && (\n                              <span className=\"form-error f10\">\n                                {meta.error}\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </td>\n                    <td>\n                      <Field\n                        name={`${name}.payment`}\n                        validate={composeValidators(\n                          minValue(0),\n                          maxValue(1000000)\n                        )}\n                      >\n                        {({ input, meta }) => (\n                          <div className=\"relative ml8\">\n                            <input\n                              className=\"form-input w100 pl32 bs-1\"\n                              placeholder=\"Overpayment\"\n                              type=\"number\"\n                              step=\"1\"\n                            />\n                            <span className=\"prepend absolute f16 pl12 pt10\">\n                              $\n                            </span>\n                            {meta.error && meta.touched && (\n                              <span className=\"form-error f10\">\n                                {meta.error}\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button\n              className=\"form-button-p bs-3 font-white\"\n              onClick={() => push(\"overPayments\", undefined)}\n              type=\"button\"\n            >\n              Add Overpayment\n            </button>\n          </>\n        )}\n      </FieldArray>\n    </>\n  );\n};\n\nexport default MortgageOverpayments;\n"]},"metadata":{},"sourceType":"module"}