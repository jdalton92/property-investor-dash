{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Occupier/OccupierForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport MortgageOverpayments from \"../MortgageOverpayments\";\nimport Helper from \"../../Shared/Helper\";\nimport Loader from \"../../Shared/Loader\";\nimport OwnerOccupierInvestorInputs from \"../OwnerOccupierInvestorInputs\";\nimport FinalFormField from \"../../Shared/FinalFormField\";\nimport { required, minValue, maxValue, composeValidators } from \"../../../utils/formValidatorHelper\";\nimport { occupierInvestorTooltipHelper } from \"../../../utils/tooltipHelper\";\nimport { CONSTANTS } from \"../../../static/constants\";\n\nconst OccupierForm = ({\n  id,\n  setModal,\n  testDashboard,\n  dashboards\n}) => {\n  const history = useHistory();\n\n  const onSubmit = values => {\n    setModal(\"disclaimer\");\n    values.investor = false;\n    values.type = \"occupierInvestor\";\n    testDashboard(values);\n    history.push(\"/owner-occupier/dash\");\n  };\n\n  if (dashboards.isFetching) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n    const initialValues = {\n      housePrice: 1000000,\n      deposit: 200000,\n      loanType: \"principalAndInterest\",\n      interestRate: 3.5,\n      homeloanTerm: 30,\n      overPayments: [{}],\n      investmentPeriod: 15,\n      sellingCosts: 3,\n      capitalGrowth: 3.5,\n      upfrontCosts: 3,\n      recurringCosts: 1000,\n      rentalYield: 3,\n      investor: false,\n      inflation: 3\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f24 bold mt16 mb32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Owner Occupier Inputs\"), /*#__PURE__*/React.createElement(Helper, {\n      title: \"Owner Occupier\",\n      body: \"Helper body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OwnerOccupierInvestorInputs, {\n      investor: true,\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OccupierForm);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Occupier/OccupierForm.js"],"names":["React","connect","useHistory","Form","Field","arrayMutators","testDashboard","setAccordian","setModal","MortgageOverpayments","Helper","Loader","OwnerOccupierInvestorInputs","FinalFormField","required","minValue","maxValue","composeValidators","occupierInvestorTooltipHelper","CONSTANTS","OccupierForm","id","dashboards","history","onSubmit","values","investor","type","push","isFetching","initialValues","housePrice","deposit","loanType","interestRate","homeloanTerm","overPayments","investmentPeriod","sellingCosts","capitalGrowth","upfrontCosts","recurringCosts","rentalYield","inflation","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport MortgageOverpayments from \"../MortgageOverpayments\";\nimport Helper from \"../../Shared/Helper\";\nimport Loader from \"../../Shared/Loader\";\nimport OwnerOccupierInvestorInputs from \"../OwnerOccupierInvestorInputs\"\nimport FinalFormField from \"../../Shared/FinalFormField\";\nimport {\n  required,\n  minValue,\n  maxValue,\n  composeValidators,\n} from \"../../../utils/formValidatorHelper\";\nimport { occupierInvestorTooltipHelper } from \"../../../utils/tooltipHelper\";\nimport { CONSTANTS } from \"../../../static/constants\";\n\nconst OccupierForm = ({\n  id,\n  setModal,\n  testDashboard,\n  dashboards,\n}) => {\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    setModal(\"disclaimer\");\n    values.investor = false;\n    values.type = \"occupierInvestor\";\n    testDashboard(values);\n    history.push(\"/owner-occupier/dash\")\n  };\n\n  if (dashboards.isFetching) {\n    return <Loader />;\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n\n    const initialValues = {\n      housePrice: 1000000,\n      deposit: 200000,\n      loanType: \"principalAndInterest\",\n      interestRate: 3.5,\n      homeloanTerm: 30,\n      overPayments: [{}],\n      investmentPeriod: 15,\n      sellingCosts: 3,\n      capitalGrowth: 3.5,\n      upfrontCosts: 3,\n      recurringCosts: 1000,\n      rentalYield: 3,\n      investor: false,\n      inflation: 3,\n    }\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb32\">Owner Occupier Inputs</h1>\n        <Helper title={\"Owner Occupier\"} body={\"Helper body\"} />\n        <OwnerOccupierInvestorInputs investor={true} initialValues={initialValues} onSubmit={onSubmit}/>\n        {/* <Form\n          onSubmit={onSubmit}\n          mutators={{\n            ...arrayMutators,\n          }}\n          initialValues={{\n            ...initialValues,\n          }}\n          render={({\n            handleSubmit,\n            values,\n            form,\n            form: {\n              mutators: { push, pop },\n            },\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <h2 className=\"f20 bold mb16\">Base Assumptions</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                <FinalFormField\n                  label={\"House Price\"}\n                  placeholder={\"House Price\"}\n                  fieldName={\"housePrice\"}\n                  type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                  validators={[required, minValue(0), maxValue(100000000)]}\n                  fieldType={\"number\"}\n                  step={\"1\"}\n                  prepend={\"$\"}\n                />\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Ownership Length\"}\n                      fieldName={\"investmentPeriod\"}\n                      type={\"occupierInvestor\"}\n                      validators={[required, minValue(0), maxValue(30)]}\n                      placeholder={\"Ownership Length\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      append={\"years\"}\n                      parseType={\"parseInt\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Home Capital Growth\"}\n                      fieldName={\"capitalGrowth\"}\n                      type={\"occupierInvestor\"}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Home Capital Growth\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% pa\"}\n                    />\n                  </div>\n                </div>\n              </div>\n              <h2 className=\"f20 bold mb16\">Costs</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Upfront Costs\"}\n                      fieldName={\"upfrontCosts\"}\n                      type={\"occupierInvestor\"}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Agents/legal fees etc\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% of cost\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Selling Costs\"}\n                      fieldName={\"sellingCosts\"}\n                      type={\"occupierInvestor\"}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Acquisition Costs\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% of sale\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Operating Costs\"}\n                      fieldName={\"recurringCosts\"}\n                      type={\"occupierInvestor\"}\n                      validators={[minValue(0)]}\n                      placeholder={\"Water, electricity, insurance etc\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      prepend={\"$\"}\n                      append={\"pa\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Inflation\"}\n                      fieldName={\"inflation\"}\n                      type={\"occupierInvestor\"}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Inflation\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% pa\"}\n                    />\n                  </div>\n                </div>\n              </div>\n              <h2 className=\"f20 bold mb16\">Funding</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n              <div className=\"form-row\">\n                  <div className=\"form-item\">\n                <FinalFormField\n                  label={\"Deposit\"}\n                  fieldName={\"deposit\"}\n                  type={\"occupierInvestor\"}\n                  validators={[\n                    required,\n                    minValue(0),\n                    maxValue(values.housePrice),\n                  ]}\n                  placeholder={\"Deposit\"}\n                  fieldType={\"number\"}\n                  step={\"1\"}\n                  prepend={\"$\"}\n                />\n                </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Homeloan Term\"}\n                      fieldName={\"homeloanTerm\"}\n                      type={\"occupierInvestor\"}\n                      validators={[required, maxValue(30), minValue(0)]}\n                      placeholder={\"Homeloan Term\"}\n                      fieldType={\"number\"}\n                      step={\"1\"}\n                      append={\"years\"}\n                      parseType={\"parseInt\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <label htmlFor=\"owneroccupier-loantype\" className=\"f16 mb8\">\n                      Repayment Type\n                      <span className=\"font-red f12 bold ml4\">*</span>\n                    </label>\n                    <button type=\"button\" className=\"ml8\">\n                      <span\n                        aria-label={\n                          occupierInvestorTooltipHelper.loanType.message\n                        }\n                        data-balloon-pos=\"up\"\n                        className=\"f12\"\n                      >\n                        ?\n                      </span>\n                    </button>\n                    <Field name=\"loanType\" validate={required}>\n                      {({ input, meta }) => (\n                        <div className=\"relative mb20\">\n                          <select\n                            className=\"form-input select w100\"\n                            id=\"owneroccupier-loantype\"\n                            name=\"loanType\"\n                            defaultValue={\"default\"}\n                          >\n                            <option value=\"default\" disabled hidden>\n                              Repayment Type\n                            </option>\n                            <option value=\"interestOnly\">Interest Only</option>\n                            <option value=\"principalAndInterest\">\n                              Principal + Interest\n                            </option>\n                          </select>\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error f10\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                  <FinalFormField\n                    label={\"Loan Interest Rate\"}\n                    fieldName={\"interestRate\"}\n                    type={\"occupierInvestor\"}\n                    validators={[required, maxValue(100), minValue(0)]}\n                    placeholder={\"Loan Interest Rate\"}\n                    maxLength={3}\n                    fieldType={\"number\"}\n                    step={\"0.01\"}\n                    append={\"% pa\"}\n                  />\n                  </div>\n                </div>\n                <MortgageOverpayments\n                  type={CONSTANTS.TYPES.OWNEROCCUPIER}\n                  push={push}\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button\n                  type=\"submit\"\n                  className=\"form-button-p font-white bs-2 mt12 pt8 pb8\"\n                >\n                  Submit\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"form-button-s font-white bs-2 mt12 pt8 pb8 r\"\n                  onClick={form.reset}\n                >\n                  Reset\n                </button>\n              </div>\n            </form>\n          )}\n        /> */}\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OccupierForm);\n"]},"metadata":{},"sourceType":"module"}