{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/SavedDashboards.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDashboards, deleteDashboard } from \"../reducers/dashboardReducer\";\nimport { dashboardType, formatDate } from \"../utils/dashboardHelper\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { Table, Button, Spinner } from \"react-bootstrap\";\n\nconst SavedDashboards = ({\n  getDashboards,\n  deleteDashboard,\n  setNotification,\n  dashboards,\n  user\n}) => {\n  useEffect(() => {\n    if (!user.isFetching) {\n      getDashboards();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [user.isFetching]);\n  const history = useHistory();\n\n  const handleView = dashboard => {\n    if (dashboard.values.type === \"developer\") {\n      history.push(`/developer/dash/${dashboard._id}`);\n    } else if (dashboard.values.type === \"occupierInvestor\" && dashboard.values.investor) {\n      history.push(`/investor/dash/${dashboard._id}`);\n    } else if (dashboard.values.type === \"occupierInvestor\" && !dashboard.values.investor) {\n      history.push(`/occupier/dash/${dashboard._id}`);\n    }\n  };\n\n  const handleDelete = async dashboard => {\n    if (window.confirm(`Delete dashboard ${dashboard.description}?`)) {\n      await deleteDashboard(dashboard._id);\n      setNotification(`${dashboard.description} deleted`, \"success\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"saved-dashboard-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saved-dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saved-dashboard-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Saved Dashboards\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saved-dashboard-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, dashboards.isFetching || user.isFetching ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saved-dashboards-loader-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: \"loading-spinner\",\n    animation: \"border\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  })) : dashboards.data.length === 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"saved-dashboard-subheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"No saved Dashboards\") : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    className: \"saved-dashboard-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"saved-dashboard-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"saved-dashboard-xs-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"saved-dashboard-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Dashboard Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"saved-dashboard-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Saved Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, dashboards.data.map((d, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"saved-dashboard-row\",\n    key: d._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"saved-dashboard-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, d.description), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"saved-dashboard-xs-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, d.address), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"saved-dashboard-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, dashboardType(d.values)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"saved-dashboard-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, formatDate(d.date)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saved-dashboard-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"button\",\n    className: \"saved-dashboard-button view-dashboard\",\n    id: \"dashboard-view\",\n    onClick: () => handleView(d),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    type: \"button\",\n    className: \"saved-dashboard-button delete-dashboard\",\n    id: \"dashboard-delete\",\n    onClick: () => handleDelete(d),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Delete\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  getDashboards,\n  deleteDashboard,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedDashboards);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/SavedDashboards.js"],"names":["React","useEffect","connect","useHistory","getDashboards","deleteDashboard","dashboardType","formatDate","setNotification","Table","Button","Spinner","SavedDashboards","dashboards","user","isFetching","history","handleView","dashboard","values","type","push","_id","investor","handleDelete","window","confirm","description","data","length","map","d","i","address","date","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDashboards, deleteDashboard } from \"../reducers/dashboardReducer\";\nimport { dashboardType, formatDate } from \"../utils/dashboardHelper\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { Table, Button, Spinner } from \"react-bootstrap\";\n\nconst SavedDashboards = ({\n  getDashboards,\n  deleteDashboard,\n  setNotification,\n  dashboards,\n  user,\n}) => {\n  useEffect(() => {\n    if (!user.isFetching) {\n      getDashboards();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user.isFetching]);\n\n  const history = useHistory();\n\n  const handleView = (dashboard) => {\n    if (dashboard.values.type === \"developer\") {\n      history.push(`/developer/dash/${dashboard._id}`);\n    } else if (\n      dashboard.values.type === \"occupierInvestor\" &&\n      dashboard.values.investor\n    ) {\n      history.push(`/investor/dash/${dashboard._id}`);\n    } else if (\n      dashboard.values.type === \"occupierInvestor\" &&\n      !dashboard.values.investor\n    ) {\n      history.push(`/occupier/dash/${dashboard._id}`);\n    }\n  };\n\n  const handleDelete = async (dashboard) => {\n    if (window.confirm(`Delete dashboard ${dashboard.description}?`)) {\n      await deleteDashboard(dashboard._id);\n      setNotification(`${dashboard.description} deleted`, \"success\");\n    }\n  };\n\n  return (\n    <section className=\"saved-dashboard-section\">\n      <div className=\"saved-dashboard-container\">\n        <div className=\"saved-dashboard-header\">\n          <h1>\n            <b>Saved Dashboards</b>\n          </h1>\n        </div>\n        <div className=\"saved-dashboard-table-container\">\n          {dashboards.isFetching || user.isFetching ? (\n            <div className=\"saved-dashboards-loader-wrapper\">\n              <Spinner\n                className=\"loading-spinner\"\n                animation=\"border\"\n                variant=\"primary\"\n              />\n            </div>\n          ) : dashboards.data.length === 0 ? (\n            <h2 className=\"saved-dashboard-subheader\">No saved Dashboards</h2>\n          ) : (\n            <Table\n              striped\n              bordered\n              hover\n              size=\"sm\"\n              className=\"saved-dashboard-table\"\n            >\n              <thead>\n                <tr>\n                  <th className=\"saved-dashboard-mobile\">#</th>\n                  <th>Description</th>\n                  <th className=\"saved-dashboard-xs-mobile\">Address</th>\n                  <th className=\"saved-dashboard-mobile\">Dashboard Type</th>\n                  <th className=\"saved-dashboard-mobile\">Saved Date</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {dashboards.data.map((d, i) => (\n                  <tr className=\"saved-dashboard-row\" key={d._id}>\n                    <td className=\"saved-dashboard-mobile\">{i + 1}</td>\n                    <td>{d.description}</td>\n                    <td className=\"saved-dashboard-xs-mobile\">{d.address}</td>\n                    <td className=\"saved-dashboard-mobile\">\n                      {dashboardType(d.values)}\n                    </td>\n                    <td className=\"saved-dashboard-mobile\">\n                      {formatDate(d.date)}\n                    </td>\n                    <td>\n                      <div className=\"saved-dashboard-button-container\">\n                        <Button\n                          variant=\"primary\"\n                          type=\"button\"\n                          className=\"saved-dashboard-button view-dashboard\"\n                          id=\"dashboard-view\"\n                          onClick={() => handleView(d)}\n                        >\n                          View\n                        </Button>\n                        <Button\n                          variant=\"outline-primary\"\n                          type=\"button\"\n                          className=\"saved-dashboard-button delete-dashboard\"\n                          id=\"dashboard-delete\"\n                          onClick={() => handleDelete(d)}\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  getDashboards,\n  deleteDashboard,\n  setNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedDashboards);\n"]},"metadata":{},"sourceType":"module"}