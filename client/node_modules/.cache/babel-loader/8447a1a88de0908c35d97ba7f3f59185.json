{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Shared/Notification/NotificationAlert.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../../reducers/notificationReducer\";\nimport Button from \"../Button\";\nimport { Icon } from \"../Icon\";\nimport { CONSTANTS } from \"../../../static/constants\";\nimport messageIcon from \"../../../styles/svg/message.svg\";\nimport tickIcon from \"../../../styles/svg/tick.svg\";\nimport errorIcon from \"../../../styles/svg/error.svg\";\n\nconst NotificationAlert = ({\n  notification,\n  clearNotification\n}) => {\n  const handleCloseNotification = e => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  let notificationType;\n  let icon;\n\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.MESSAGE:\n      notificationType = \"message\";\n      icon = messageIcon;\n      break;\n\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      icon = tickIcon;\n      break;\n\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      icon = errorIcon;\n      break;\n\n    default:\n      notificationType = \"message\";\n      icon = messageIcon;\n  }\n\n  const toTitleCase = string => {\n    return string.replace(/\\w\\S*/g, txt => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification p8 mb8 fade-in flex-row align-c relative bs-2 jump border-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    url: icon,\n    color: \"white\",\n    hover: false,\n    active: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w100 ml8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${notificationType} bold`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, toTitleCase(notificationType), \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-white pl4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, typeof notification.message === \"string\" ? ` ${notification.message}` : ` ${notification.statusText}`)), /*#__PURE__*/React.createElement(Button, {\n    extraClass: \"button-p align-c justify-c\",\n    onClick: handleCloseNotification,\n    iconUrl: \"../../styles/svg/close.svg\",\n    iconColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}; // const mapStateToProps = (state) => {\n//   return {\n//     notification: state.notification,\n//   };\n// };\n\n\nconst mapDispatchToProps = {\n  clearNotification\n};\nexport default connect(null, mapDispatchToProps)(NotificationAlert);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Shared/Notification/NotificationAlert.js"],"names":["React","connect","clearNotification","Button","Icon","CONSTANTS","NotificationAlert","notification","handleCloseNotification","e","preventDefault","id","notificationType","icon","type","NOTIFICATION","MESSAGE","messageIcon","SUCCESS","tickIcon","ERROR","errorIcon","toTitleCase","string","replace","txt","charAt","toUpperCase","substr","toLowerCase","message","statusText","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;;;AAKA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBL,EAAAA;AAAhB,CAAD,KAAyC;AACjE,QAAMM,uBAAuB,GAAIC,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,iBAAiB,CAACK,YAAY,CAACI,EAAd,CAAjB;AACD,GAHD;;AAKA,MAAIC,gBAAJ;AACA,MAAIC,IAAJ;;AACA,UAAQN,YAAY,CAACO,IAArB;AACE,SAAKT,SAAS,CAACU,YAAV,CAAuBC,OAA5B;AACEJ,MAAAA,gBAAgB,GAAG,SAAnB;AACAC,MAAAA,IAAI,GAAGI,WAAP;AACA;;AACF,SAAKZ,SAAS,CAACU,YAAV,CAAuBG,OAA5B;AACEN,MAAAA,gBAAgB,GAAG,SAAnB;AACAC,MAAAA,IAAI,GAAGM,QAAP;AACA;;AACF,SAAKd,SAAS,CAACU,YAAV,CAAuBK,KAA5B;AACER,MAAAA,gBAAgB,GAAG,OAAnB;AACAC,MAAAA,IAAI,GAAGQ,SAAP;AACA;;AACF;AACET,MAAAA,gBAAgB,GAAG,SAAnB;AACAC,MAAAA,IAAI,GAAGI,WAAP;AAfJ;;AAkBA,QAAMK,WAAW,GAAIC,MAAD,IAAY;AAC9B,WAAOA,MAAM,CAACC,OAAP,CAAe,QAAf,EAA0BC,GAAD,IAAS;AACvC,aAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEhB,IAAX;AAAiB,IAAA,KAAK,EAAE,OAAxB;AAAiC,IAAA,KAAK,EAAE,KAAxC;AAA+C,IAAA,MAAM,EAAE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAG,GAAED,gBAAiB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,WAAW,CAACV,gBAAD,CADd,MADF,eAIE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOL,YAAY,CAACuB,OAApB,KAAgC,QAAhC,GACI,IAAGvB,YAAY,CAACuB,OAAQ,EAD5B,GAEI,IAAGvB,YAAY,CAACwB,UAAW,EAHlC,CAJF,CAVF,eAoBE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE,4BADd;AAEE,IAAA,OAAO,EAAEvB,uBAFX;AAGE,IAAA,OAAO,EAAE,4BAHX;AAIE,IAAA,SAAS,EAAE,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AA6BD,CA7DD,C,CA+DA;AACA;AACA;AACA;AACA;;;AAEA,MAAMwB,kBAAkB,GAAG;AACzB9B,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAO+B,kBAAP,CAAP,CAAkC1B,iBAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../../reducers/notificationReducer\";\nimport Button from \"../Button\";\nimport { Icon } from \"../Icon\";\nimport { CONSTANTS } from \"../../../static/constants\";\nimport messageIcon from \"../../../styles/svg/message.svg\";\nimport tickIcon from \"../../../styles/svg/tick.svg\";\nimport errorIcon from \"../../../styles/svg/error.svg\";\n\nconst NotificationAlert = ({ notification, clearNotification }) => {\n  const handleCloseNotification = (e) => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  let notificationType;\n  let icon;\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.MESSAGE:\n      notificationType = \"message\";\n      icon = messageIcon;\n      break;\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      icon = tickIcon;\n      break;\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      icon = errorIcon;\n      break;\n    default:\n      notificationType = \"message\";\n      icon = messageIcon;\n  }\n\n  const toTitleCase = (string) => {\n    return string.replace(/\\w\\S*/g, (txt) => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  return (\n    <div className=\"notification p8 mb8 fade-in flex-row align-c relative bs-2 jump border-p\">\n      <Icon url={icon} color={\"white\"} hover={false} active={false} />\n      {/* <div\n        className=\"background-img\"\n        style={{\n          background: `url(${icon})`,\n          height: \"32px\",\n          width: \"32px\",\n        }}\n      ></div> */}\n      <div className=\"w100 ml8\">\n        <span className={`${notificationType} bold`}>\n          {toTitleCase(notificationType)}:\n        </span>\n        <span className=\"font-white pl4\">\n          {typeof notification.message === \"string\"\n            ? ` ${notification.message}`\n            : ` ${notification.statusText}`}\n        </span>\n      </div>\n      <Button\n        extraClass={\"button-p align-c justify-c\"}\n        onClick={handleCloseNotification}\n        iconUrl={\"../../styles/svg/close.svg\"}\n        iconColor={\"white\"}\n      />\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     notification: state.notification,\n//   };\n// };\n\nconst mapDispatchToProps = {\n  clearNotification,\n};\n\nexport default connect(null, mapDispatchToProps)(NotificationAlert);\n"]},"metadata":{},"sourceType":"module"}