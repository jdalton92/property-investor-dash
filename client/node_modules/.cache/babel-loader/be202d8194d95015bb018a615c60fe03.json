{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Tooltip.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Tooltip = ({\n  message\n}) => {\n  const [show, setShow] = useState(false);\n\n  const useTooltipOutsideAlerter = ref => {\n    const handleClickOutside = e => {\n      if (ref.current && ref.current.contains(e.target)) {\n        setShow(false);\n      }\n    };\n\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  };\n\n  const TooltipOutsideAlerter = props => {\n    const wrapperRef = useRef(null);\n    useTooltipOutsideAlerter(wrapperRef);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: wrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, props.children);\n  };\n\n  return /*#__PURE__*/React.createElement(TooltipOutsideAlerter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative mb8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, show && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tooltip-msg absolute bg-black r p8 font-white white text-center fade-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, message), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"tooltip-btn\",\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"?\")));\n};\n\nexport default connect(null, null)(Tooltip);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Tooltip.js"],"names":["React","useState","useEffect","useRef","connect","Tooltip","message","show","setShow","useTooltipOutsideAlerter","ref","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","TooltipOutsideAlerter","props","wrapperRef","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMQ,wBAAwB,GAAIC,GAAD,IAAS;AACxC,UAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAChC,UAAIF,GAAG,CAACG,OAAJ,IAAeH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,CAAC,CAACG,MAAvB,CAAnB,EAAmD;AACjDP,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAJD;;AAMAN,IAAAA,SAAS,CAAC,MAAM;AACd;AACAc,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,aAAO,MAAM;AACX;AACAK,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD,OAHD;AAID,KAPQ,CAAT;AAQD,GAfD;;AAiBA,QAAMQ,qBAAqB,GAAIC,KAAD,IAAW;AACvC,UAAMC,UAAU,GAAGlB,MAAM,CAAC,IAAD,CAAzB;AACAM,IAAAA,wBAAwB,CAACY,UAAD,CAAxB;AAEA,wBAAO;AAAK,MAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,KAAK,CAACE,QAA7B,CAAP;AACD,GALD;;AAOA,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,IAAI,iBACH;AAAK,IAAA,SAAS,EAAC,yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,CAFJ,eAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,EAAE,MAAME,OAAO,CAAC,CAACD,IAAF,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADF,CADF;AAkBD,CA7CD;;AA+CA,eAAeH,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAAoBC,OAApB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Tooltip = ({ message }) => {\n  const [show, setShow] = useState(false);\n\n  const useTooltipOutsideAlerter = (ref) => {\n    const handleClickOutside = (e) => {\n      if (ref.current && ref.current.contains(e.target)) {\n        setShow(false);\n      }\n    };\n\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  };\n\n  const TooltipOutsideAlerter = (props) => {\n    const wrapperRef = useRef(null);\n    useTooltipOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n  };\n\n  return (\n    <TooltipOutsideAlerter>\n      <div className=\"relative mb8\">\n        {show && (\n          <div className=\"tooltip-msg absolute bg-black r p8 font-white white text-center fade-in\">\n            {message}\n          </div>\n        )}\n        <button\n          type=\"button\"\n          className=\"tooltip-btn\"\n          onClick={() => setShow(!show)}\n        >\n          ?\n        </button>\n      </div>\n    </TooltipOutsideAlerter>\n  );\n};\n\nexport default connect(null, null)(Tooltip);\n"]},"metadata":{},"sourceType":"module"}