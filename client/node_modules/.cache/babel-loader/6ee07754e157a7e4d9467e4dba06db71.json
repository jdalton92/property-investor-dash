{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Settings/Settings.ChangeEmail.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { updateUser } from \"../../reducers/userReducer\";\nimport { required, minLength, isEmail, composeValidators } from \"../../utils/formValidatorHelper\";\n\nconst ChangeEmail = ({\n  user,\n  updateUser\n}) => {\n  const userDetails = {\n    oldEmail: user.data.email,\n    id: user.data.id\n  };\n\n  const handleEmailChange = async values => {\n    const confirm = window.confirm(`Change email from ${userDetails.oldEmail} to ${values.newEmail}?`);\n\n    if (confirm) {\n      await updateUser({\n        newEmail: values.newEmail,\n        ...userDetails\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleEmailChange,\n    render: ({\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f20 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Change Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r bs-3 bg-1 p20 mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"old-email\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Existing Email\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"old-email\",\n      className: \"form-input bs-1 w100\",\n      value: user.data.email,\n      type: \"email\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-email\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"New Email\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"newEmail\",\n      validate: composeValidators(required, minLength(3), isEmail),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"new-email\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"new@email.com\",\n      type: \"email\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-button-p font-white bs-2 pt8 pb8 r mt12\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Update\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  updateUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeEmail);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Settings/Settings.ChangeEmail.js"],"names":["React","connect","Form","Field","updateUser","required","minLength","isEmail","composeValidators","ChangeEmail","user","userDetails","oldEmail","data","email","id","handleEmailChange","values","confirm","window","newEmail","handleSubmit","input","meta","error","touched","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { updateUser } from \"../../reducers/userReducer\";\nimport {\n  required,\n  minLength,\n  isEmail,\n  composeValidators,\n} from \"../../utils/formValidatorHelper\";\n\nconst ChangeEmail = ({ user, updateUser }) => {\n  const userDetails = {\n    oldEmail: user.data.email,\n    id: user.data.id,\n  };\n\n  const handleEmailChange = async (values) => {\n    const confirm = window.confirm(\n      `Change email from ${userDetails.oldEmail} to ${values.newEmail}?`\n    );\n    if (confirm) {\n      await updateUser({\n        newEmail: values.newEmail,\n        ...userDetails,\n      });\n    }\n  };\n\n  return (\n    <Form\n      onSubmit={handleEmailChange}\n      render={({ handleSubmit, values }) => (\n        <form onSubmit={handleSubmit}>\n          <h2 className=\"f20 bold mt16 mb16\">Change Email</h2>\n          <div className=\"r bs-3 bg-1 p20 mb20\">\n            <label htmlFor=\"old-email\" className=\"f16 mb8\">\n              Existing Email\n              <span className=\"font-red f12 bold ml4\">*</span>\n            </label>\n            <div className=\"relative mb20\">\n              <input\n                id=\"old-email\"\n                className=\"form-input bs-1 w100\"\n                value={user.data.email}\n                type=\"email\"\n                disabled\n              />\n            </div>\n            <label htmlFor=\"new-email\" className=\"f16 mb8\">\n              New Email\n              <span className=\"font-red f12 bold ml4\">*</span>\n            </label>\n            <Field\n              name=\"newEmail\"\n              validate={composeValidators(required, minLength(3), isEmail)}\n            >\n              {({ input, meta }) => (\n                <div className=\"relative mb20\">\n                  <input\n                    id=\"new-email\"\n                    className=\"form-input bs-1 w100\"\n                    placeholder=\"new@email.com\"\n                    type=\"email\"\n                    {...input}\n                  />\n                  {meta.error && meta.touched && (\n                    <span className=\"form-error f10\">{meta.error}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n            <button\n              className=\"form-button-p font-white bs-2 pt8 pb8 r mt12\"\n              type=\"submit\"\n            >\n              Update\n            </button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeEmail);\n"]},"metadata":{},"sourceType":"module"}