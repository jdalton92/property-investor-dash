{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Investor/InvestorForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../../static/constants\";\nimport HelperMessage from \"../../Shared/HelperMessage\";\nimport Loader from \"../../Shared/Loader\";\nimport OwnerOccupierInvestorInputs from \"../OwnerOccupierInvestorInputs\";\n\nconst InvestorForm = ({\n  id,\n  setModal,\n  testDashboard,\n  dashboards\n}) => {\n  const history = useHistory();\n\n  const onSubmit = values => {\n    setModal(\"disclaimer\");\n    values.investor = true;\n    values.type = \"occupierInvestor\";\n    testDashboard(values);\n    history.push(\"/investor/dash\");\n  };\n\n  if (dashboards.isFetching) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n    const initialValues = {\n      housePrice: 1000000,\n      deposit: 200000,\n      loanType: \"principalAndInterest\",\n      interestRate: 3.5,\n      homeloanTerm: 30,\n      overPayments: [{}],\n      investmentPeriod: 15,\n      sellingCosts: 3,\n      capitalGrowth: 3.5,\n      upfrontCosts: 3,\n      recurringCosts: 5,\n      rentalYield: 3,\n      investor: true,\n      inflation: 3\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f24 bold mt16 mb32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Investor Inputs\"), /*#__PURE__*/React.createElement(HelperMessage, {\n      type: CONSTANTS.HELPERMESSAGES.INVESTORFORM,\n      body: \"Helper body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OwnerOccupierInvestorInputs, {\n      investor: true,\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InvestorForm);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/Investor/InvestorForm.js"],"names":["React","connect","useHistory","testDashboard","setAccordian","setModal","CONSTANTS","HelperMessage","Loader","OwnerOccupierInvestorInputs","InvestorForm","id","dashboards","history","onSubmit","values","investor","type","push","isFetching","initialValues","housePrice","deposit","loanType","interestRate","homeloanTerm","overPayments","investmentPeriod","sellingCosts","capitalGrowth","upfrontCosts","recurringCosts","rentalYield","inflation","HELPERMESSAGES","INVESTORFORM","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,qCAAvC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,2BAAP,MAAwC,gCAAxC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMN,EAAAA,QAAN;AAAgBF,EAAAA,aAAhB;AAA+BS,EAAAA;AAA/B,CAAD,KAAiD;AACpE,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AAEA,QAAMY,QAAQ,GAAIC,MAAD,IAAY;AAC3BV,IAAAA,QAAQ,CAAC,YAAD,CAAR;AACAU,IAAAA,MAAM,CAACC,QAAP,GAAkB,IAAlB;AACAD,IAAAA,MAAM,CAACE,IAAP,GAAc,kBAAd;AACAd,IAAAA,aAAa,CAACY,MAAD,CAAb;AACAF,IAAAA,OAAO,CAACK,IAAR,CAAa,gBAAb;AACD,GAND;;AAQA,MAAIN,UAAU,CAACO,UAAf,EAA2B;AACzB,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL;AACA;AAEA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,UAAU,EAAE,OADQ;AAEpBC,MAAAA,OAAO,EAAE,MAFW;AAGpBC,MAAAA,QAAQ,EAAE,sBAHU;AAIpBC,MAAAA,YAAY,EAAE,GAJM;AAKpBC,MAAAA,YAAY,EAAE,EALM;AAMpBC,MAAAA,YAAY,EAAE,CAAC,EAAD,CANM;AAOpBC,MAAAA,gBAAgB,EAAE,EAPE;AAQpBC,MAAAA,YAAY,EAAE,CARM;AASpBC,MAAAA,aAAa,EAAE,GATK;AAUpBC,MAAAA,YAAY,EAAE,CAVM;AAWpBC,MAAAA,cAAc,EAAE,CAXI;AAYpBC,MAAAA,WAAW,EAAE,CAZO;AAapBhB,MAAAA,QAAQ,EAAE,IAbU;AAcpBiB,MAAAA,SAAS,EAAE;AAdS,KAAtB;AAgBA,wBACE,uDACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE3B,SAAS,CAAC4B,cAAV,CAAyBC,YADjC;AAEE,MAAA,IAAI,EAAE,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME,oBAAC,2BAAD;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,aAAa,EAAEf,aAFjB;AAGE,MAAA,QAAQ,EAAEN,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;AACF,CAhDD;;AAkDA,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLzB,IAAAA,UAAU,EAAEyB,KAAK,CAACzB;AADb,GAAP;AAGD,CAJD;;AAMA,MAAM0B,kBAAkB,GAAG;AACzBnC,EAAAA,aADyB;AAEzBC,EAAAA,YAFyB;AAGzBC,EAAAA;AAHyB,CAA3B;AAMA,eAAeJ,OAAO,CAACmC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C5B,YAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../../static/constants\";\nimport HelperMessage from \"../../Shared/HelperMessage\";\nimport Loader from \"../../Shared/Loader\";\nimport OwnerOccupierInvestorInputs from \"../OwnerOccupierInvestorInputs\";\n\nconst InvestorForm = ({ id, setModal, testDashboard, dashboards }) => {\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    setModal(\"disclaimer\");\n    values.investor = true;\n    values.type = \"occupierInvestor\";\n    testDashboard(values);\n    history.push(\"/investor/dash\");\n  };\n\n  if (dashboards.isFetching) {\n    return <Loader />;\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n\n    const initialValues = {\n      housePrice: 1000000,\n      deposit: 200000,\n      loanType: \"principalAndInterest\",\n      interestRate: 3.5,\n      homeloanTerm: 30,\n      overPayments: [{}],\n      investmentPeriod: 15,\n      sellingCosts: 3,\n      capitalGrowth: 3.5,\n      upfrontCosts: 3,\n      recurringCosts: 5,\n      rentalYield: 3,\n      investor: true,\n      inflation: 3,\n    };\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb32\">Investor Inputs</h1>\n        <HelperMessage\n          type={CONSTANTS.HELPERMESSAGES.INVESTORFORM}\n          body={\"Helper body\"}\n        />\n        <OwnerOccupierInvestorInputs\n          investor={true}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvestorForm);\n"]},"metadata":{},"sourceType":"module"}