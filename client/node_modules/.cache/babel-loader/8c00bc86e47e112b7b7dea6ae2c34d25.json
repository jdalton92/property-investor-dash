{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Dashboards/OwnerOccupierDashboard.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Tooltip from \"../Shared/Tooltip\";\nimport Loader from \"../Shared/Loader\";\nimport Icon from \"../Shared/Icon\";\nimport { getDashboard, preSaveDashboard } from \"../../reducers/dashboardReducer\";\nimport { setCashflow, setModal } from \"../../reducers/navigationReducer\";\nimport { cumulativeChartParse, tableParse, occupierInvestorCalculation, cardParse, occupierInvestorMOCCalculation } from \"../../utils/occupierAndInvestorDataParser\";\nimport { currencyFormatter, percentageFormatter, IRRCalculation } from \"../../utils/dashboardHelper\";\nimport { Line } from \"react-chartjs-2\";\nimport SaveIcon from \"../../styles/svg/save.svg\";\n\nconst OccupierInvestorDashboard = ({\n  dashboards,\n  getDashboard,\n  preSaveDashboard,\n  setModal,\n  cashflowTable,\n  setCashflow\n}) => {\n  const id = useParams().id;\n  const history = useHistory();\n  useEffect(() => {\n    if (id && !dashboards.preSave) {\n      getDashboard(id);\n    }\n  }, [id]);\n\n  const handleSave = e => {\n    e.preventDefault();\n    setModal(\"saveDashboard\");\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n    preSaveDashboard();\n\n    if (id) {\n      history.push(`/owner-occupier/edit/${id}`);\n    } else {\n      history.replace(\"/owner-occupier/edit\");\n    }\n  };\n\n  if (dashboards.isFetching || !dashboards.data[0]) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  } else {\n    const userType = dashboards.data[0].values.investor ? \"investor\" : \"ownerOccupier\";\n    const rawData = occupierInvestorCalculation(dashboards.data[0].values);\n    const chartData = cumulativeChartParse(rawData);\n    const tableData = tableParse(rawData);\n    const cardData = cardParse(rawData);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f20 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Base Assumptions\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form-button-p bs-3 font-white mt20 pt4 pb4 flex-row align-c justify-c\",\n      onClick: handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: \"20px\",\n      url: SaveIcon,\n      color: \"white\",\n      hover: false,\n      active: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Save\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form-button-s bs-3 font-white mt20 pt4 pb4 flex-row align-c justify-c\",\n      onClick: handleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: \"20px\",\n      url: SaveIcon,\n      color: \"white\",\n      hover: false,\n      active: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Edit\"))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards,\n    cashflowTable: state.navigation.cashflowTable\n  };\n};\n\nconst mapDispatchToProps = {\n  setCashflow,\n  setModal,\n  getDashboard,\n  preSaveDashboard\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OccupierInvestorDashboard);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Dashboards/OwnerOccupierDashboard.js"],"names":["React","useEffect","connect","useHistory","useParams","Tooltip","Loader","Icon","getDashboard","preSaveDashboard","setCashflow","setModal","cumulativeChartParse","tableParse","occupierInvestorCalculation","cardParse","occupierInvestorMOCCalculation","currencyFormatter","percentageFormatter","IRRCalculation","Line","OccupierInvestorDashboard","dashboards","cashflowTable","id","history","preSave","handleSave","e","preventDefault","handleEdit","push","replace","isFetching","data","userType","values","investor","rawData","chartData","tableData","cardData","SaveIcon","mapStateToProps","state","navigation","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Tooltip from \"../Shared/Tooltip\";\nimport Loader from \"../Shared/Loader\";\nimport Icon from \"../Shared/Icon\";\nimport {\n  getDashboard,\n  preSaveDashboard,\n} from \"../../reducers/dashboardReducer\";\nimport { setCashflow, setModal } from \"../../reducers/navigationReducer\";\nimport {\n  cumulativeChartParse,\n  tableParse,\n  occupierInvestorCalculation,\n  cardParse,\n  occupierInvestorMOCCalculation,\n} from \"../../utils/occupierAndInvestorDataParser\";\nimport {\n  currencyFormatter,\n  percentageFormatter,\n  IRRCalculation,\n} from \"../../utils/dashboardHelper\";\nimport { Line } from \"react-chartjs-2\";\nimport SaveIcon from \"../../styles/svg/save.svg\";\n\nconst OccupierInvestorDashboard = ({\n  dashboards,\n  getDashboard,\n  preSaveDashboard,\n  setModal,\n  cashflowTable,\n  setCashflow,\n}) => {\n  const id = useParams().id;\n  const history = useHistory();\n\n  useEffect(() => {\n    if (id && !dashboards.preSave) {\n      getDashboard(id);\n    }\n  }, [id]);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    setModal(\"saveDashboard\");\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    preSaveDashboard();\n    if (id) {\n      history.push(`/owner-occupier/edit/${id}`);\n    } else {\n      history.replace(\"/owner-occupier/edit\");\n    }\n  };\n\n  if (dashboards.isFetching || !dashboards.data[0]) {\n    return <Loader />;\n  } else {\n    const userType = dashboards.data[0].values.investor\n      ? \"investor\"\n      : \"ownerOccupier\";\n    const rawData = occupierInvestorCalculation(dashboards.data[0].values);\n    const chartData = cumulativeChartParse(rawData);\n    const tableData = tableParse(rawData);\n    const cardData = cardParse(rawData);\n    return (\n      <>\n        <div className=\"flex-row\">\n          <h2 className=\"f20 bold mt16 mb16\">Base Assumptions</h2>\n          <button\n            type=\"submit\"\n            className=\"form-button-p bs-3 font-white mt20 pt4 pb4 flex-row align-c justify-c\"\n            onClick={handleSave}\n          >\n            <Icon\n              size={\"20px\"}\n              url={SaveIcon}\n              color={\"white\"}\n              hover={false}\n              active={false}\n            />\n            <span className=\"ml8\">Save</span>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"form-button-s bs-3 font-white mt20 pt4 pb4 flex-row align-c justify-c\"\n            onClick={handleEdit}\n          >\n            <Icon\n              size={\"20px\"}\n              url={SaveIcon}\n              color={\"white\"}\n              hover={false}\n              active={false}\n            />\n            <span className=\"ml8\">Edit</span>\n          </button>\n        </div>\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n    cashflowTable: state.navigation.cashflowTable,\n  };\n};\n\nconst mapDispatchToProps = {\n  setCashflow,\n  setModal,\n  getDashboard,\n  preSaveDashboard,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OccupierInvestorDashboard);\n"]},"metadata":{},"sourceType":"module"}