{"ast":null,"code":"import React from\"react\";import{FieldArray}from\"react-final-form-arrays\";import{Field}from\"react-final-form\";import{minValue,maxValue,composeValidators}from\"../../utils/formValidatorHelper\";import{developerTooltip,occupierInvestorTooltip}from\"../../static/tooltipText\";import Tooltip from\"../Shared/Tooltip\";import{CONSTANTS}from\"../../static/constants\";var MortgageOverpayments=function MortgageOverpayments(_ref){var push=_ref.push,type=_ref.type;var message=type===CONSTANTS.TYPES.DEVELOPER?developerTooltip[\"overPayments\"].message:occupierInvestorTooltip[\"overPayments\"].message;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"flex-row align-c relative\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\".concat(type.toLowerCase(),\"-overpayments\"),className:\"f16 mb8\"},\"Mortgage Overpayments\"),/*#__PURE__*/React.createElement(Tooltip,{message:message})),/*#__PURE__*/React.createElement(FieldArray,{name:\"overPayments\"},function(_ref2){var fields=_ref2.fields;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"table\",{id:\"\".concat(type.toLowerCase(),\"-overpayments\"),className:\"overpayments w100 mb20\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"mb8\"},\"Year\")),/*#__PURE__*/React.createElement(\"th\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"ml8 mb8\"},\"Overpayment\")))),/*#__PURE__*/React.createElement(\"tbody\",null,fields.map(function(name,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",null,/*#__PURE__*/React.createElement(\"span\",null,index+1)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Field,{name:\"\".concat(name,\".year\"),validate:minValue(0)},function(_ref3){var input=_ref3.input,meta=_ref3.meta;return/*#__PURE__*/React.createElement(\"div\",{className:\"relative mr8\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-input w100 bs-1\",placeholder:\"Year\",type:\"number\",step:\"1\"}),meta.error&&meta.touched&&/*#__PURE__*/React.createElement(\"span\",{className:\"form-error f10\"},meta.error));})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Field,{name:\"\".concat(name,\".payment\"),validate:composeValidators(minValue(0),maxValue(1000000))},function(_ref4){var input=_ref4.input,meta=_ref4.meta;return/*#__PURE__*/React.createElement(\"div\",{className:\"relative ml8\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-input w100 pl32 bs-1\",placeholder:\"Overpayment\",type:\"number\",step:\"1\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"prepend absolute f12 pl12 pt10\"},\"$\"),meta.error&&meta.touched&&/*#__PURE__*/React.createElement(\"span\",{className:\"form-error f10\"},meta.error));})));}))),/*#__PURE__*/React.createElement(\"button\",{className:\"form-button-p bs-3 font-white\",onClick:function onClick(){return push(\"overPayments\",undefined);},type:\"button\"},\"Add Overpayment\"));}));};export default MortgageOverpayments;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/MortgageOverpayments.js"],"names":["React","FieldArray","Field","minValue","maxValue","composeValidators","developerTooltip","occupierInvestorTooltip","Tooltip","CONSTANTS","MortgageOverpayments","push","type","message","TYPES","DEVELOPER","toLowerCase","fields","map","name","index","input","meta","error","touched","undefined"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OACEC,QADF,CAEEC,QAFF,CAGEC,iBAHF,KAIO,iCAJP,CAKA,OACEC,gBADF,CAEEC,uBAFF,KAGO,0BAHP,CAIA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAAoB,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,IAAW,MAAXA,IAAW,CAC/C,GAAMC,CAAAA,OAAO,CACXD,IAAI,GAAKH,SAAS,CAACK,KAAV,CAAgBC,SAAzB,CACIT,gBAAgB,CAAC,cAAD,CAAhB,CAAiCO,OADrC,CAEIN,uBAAuB,CAAC,cAAD,CAAvB,CAAwCM,OAH9C,CAKA,mBACE,qDACE,2BAAK,SAAS,CAAC,2BAAf,eACE,6BACE,OAAO,WAAKD,IAAI,CAACI,WAAL,EAAL,iBADT,CAEE,SAAS,CAAC,SAFZ,0BADF,cAOE,oBAAC,OAAD,EAAS,OAAO,CAAEH,OAAlB,EAPF,CADF,cAUE,oBAAC,UAAD,EAAY,IAAI,CAAC,cAAjB,EACG,mBAAGI,CAAAA,MAAH,OAAGA,MAAH,oBACC,qDACE,6BACE,EAAE,WAAKL,IAAI,CAACI,WAAL,EAAL,iBADJ,CAEE,SAAS,CAAC,wBAFZ,eAIE,8CACE,2CACE,kCADF,cAEE,2CACE,4BAAM,SAAS,CAAC,KAAhB,SADF,CAFF,cAKE,2CACE,4BAAM,SAAS,CAAC,SAAhB,gBADF,CALF,CADF,CAJF,cAeE,iCACGC,MAAM,CAACC,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,qBACV,0BAAI,GAAG,CAAEA,KAAT,eACE,2CACE,gCAAOA,KAAK,CAAG,CAAf,CADF,CADF,cAIE,2CACE,oBAAC,KAAD,EAAO,IAAI,WAAKD,IAAL,SAAX,CAA6B,QAAQ,CAAEhB,QAAQ,CAAC,CAAD,CAA/C,EACG,mBAAGkB,CAAAA,KAAH,OAAGA,KAAH,CAAUC,IAAV,OAAUA,IAAV,oBACC,2BAAK,SAAS,CAAC,cAAf,eACE,6BACE,SAAS,CAAC,sBADZ,CAEE,WAAW,CAAC,MAFd,CAGE,IAAI,CAAC,QAHP,CAIE,IAAI,CAAC,GAJP,EADF,CAOGA,IAAI,CAACC,KAAL,EAAcD,IAAI,CAACE,OAAnB,eACC,4BAAM,SAAS,CAAC,gBAAhB,EACGF,IAAI,CAACC,KADR,CARJ,CADD,EADH,CADF,CAJF,cAuBE,2CACE,oBAAC,KAAD,EACE,IAAI,WAAKJ,IAAL,YADN,CAEE,QAAQ,CAAEd,iBAAiB,CACzBF,QAAQ,CAAC,CAAD,CADiB,CAEzBC,QAAQ,CAAC,OAAD,CAFiB,CAF7B,EAOG,mBAAGiB,CAAAA,KAAH,OAAGA,KAAH,CAAUC,IAAV,OAAUA,IAAV,oBACC,2BAAK,SAAS,CAAC,cAAf,eACE,6BACE,SAAS,CAAC,2BADZ,CAEE,WAAW,CAAC,aAFd,CAGE,IAAI,CAAC,QAHP,CAIE,IAAI,CAAC,GAJP,EADF,cAOE,4BAAM,SAAS,CAAC,gCAAhB,MAPF,CAUGA,IAAI,CAACC,KAAL,EAAcD,IAAI,CAACE,OAAnB,eACC,4BAAM,SAAS,CAAC,gBAAhB,EACGF,IAAI,CAACC,KADR,CAXJ,CADD,EAPH,CADF,CAvBF,CADU,EAAX,CADH,CAfF,CADF,cAyEE,8BACE,SAAS,CAAC,+BADZ,CAEE,OAAO,CAAE,yBAAMZ,CAAAA,IAAI,CAAC,cAAD,CAAiBc,SAAjB,CAAV,EAFX,CAGE,IAAI,CAAC,QAHP,oBAzEF,CADD,EADH,CAVF,CADF,CAkGD,CAxGD,CA0GA,cAAef,CAAAA,oBAAf","sourcesContent":["import React from \"react\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { Field } from \"react-final-form\";\nimport {\n  minValue,\n  maxValue,\n  composeValidators,\n} from \"../../utils/formValidatorHelper\";\nimport {\n  developerTooltip,\n  occupierInvestorTooltip,\n} from \"../../static/tooltipText\";\nimport Tooltip from \"../Shared/Tooltip\";\nimport { CONSTANTS } from \"../../static/constants\";\n\nconst MortgageOverpayments = ({ push, type }) => {\n  const message =\n    type === CONSTANTS.TYPES.DEVELOPER\n      ? developerTooltip[\"overPayments\"].message\n      : occupierInvestorTooltip[\"overPayments\"].message;\n\n  return (\n    <>\n      <div className=\"flex-row align-c relative\">\n        <label\n          htmlFor={`${type.toLowerCase()}-overpayments`}\n          className=\"f16 mb8\"\n        >\n          Mortgage Overpayments\n        </label>\n        <Tooltip message={message} />\n      </div>\n      <FieldArray name=\"overPayments\">\n        {({ fields }) => (\n          <>\n            <table\n              id={`${type.toLowerCase()}-overpayments`}\n              className=\"overpayments w100 mb20\"\n            >\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>\n                    <span className=\"mb8\">Year</span>\n                  </th>\n                  <th>\n                    <span className=\"ml8 mb8\">Overpayment</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {fields.map((name, index) => (\n                  <tr key={index}>\n                    <th>\n                      <span>{index + 1}</span>\n                    </th>\n                    <td>\n                      <Field name={`${name}.year`} validate={minValue(0)}>\n                        {({ input, meta }) => (\n                          <div className=\"relative mr8\">\n                            <input\n                              className=\"form-input w100 bs-1\"\n                              placeholder=\"Year\"\n                              type=\"number\"\n                              step=\"1\"\n                            />\n                            {meta.error && meta.touched && (\n                              <span className=\"form-error f10\">\n                                {meta.error}\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </td>\n                    <td>\n                      <Field\n                        name={`${name}.payment`}\n                        validate={composeValidators(\n                          minValue(0),\n                          maxValue(1000000)\n                        )}\n                      >\n                        {({ input, meta }) => (\n                          <div className=\"relative ml8\">\n                            <input\n                              className=\"form-input w100 pl32 bs-1\"\n                              placeholder=\"Overpayment\"\n                              type=\"number\"\n                              step=\"1\"\n                            />\n                            <span className=\"prepend absolute f12 pl12 pt10\">\n                              $\n                            </span>\n                            {meta.error && meta.touched && (\n                              <span className=\"form-error f10\">\n                                {meta.error}\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button\n              className=\"form-button-p bs-3 font-white\"\n              onClick={() => push(\"overPayments\", undefined)}\n              type=\"button\"\n            >\n              Add Overpayment\n            </button>\n          </>\n        )}\n      </FieldArray>\n    </>\n  );\n};\n\nexport default MortgageOverpayments;\n"]},"metadata":{},"sourceType":"module"}