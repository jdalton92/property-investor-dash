{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/DeveloperForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { testDashboard } from \"../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport { required, minValue, maxValue } from \"../../utils/formValidatorHelper\";\nimport { developerTooltipHelper } from \"../../utils/tooltipHelper\";\nimport FinalFormField from \"../Shared/FinalFormField\";\nimport HelperMessage from \"../Shared/HelperMessage\";\nimport Loader from \"../Shared/Loader\";\nimport MortgageOverpayments from \"./MortgageOverpayments\";\nimport Tooltip from \"../Shared/Tooltip\";\n\nconst DeveloperForm = ({\n  id,\n  testDashboard,\n  dashboards\n}) => {\n  const history = useHistory();\n\n  const onSubmit = values => {\n    testDashboard(values);\n    history.push(\"/developer/dash\");\n  };\n\n  const helperMessage = `Developer Inputs Helper Text`;\n\n  if (dashboards.isFetching) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n    const initialValues = {\n      acquisitionPrice: 100000,\n      acquisitionCosts: 5,\n      dwellings: 4,\n      constructionCostPerDwelling: 400000,\n      designFees: 10,\n      constructionContingency: 10,\n      statutoryFees: 3,\n      constructionDuration: 24,\n      planningAndDesign: 6,\n      revenuePerDwelling: 750000,\n      sellingCosts: 5,\n      investmentPeriod: 5,\n      recurringCosts: 30,\n      rentalYield: 4,\n      initialEquity: 400000,\n      loanType: \"interestOnly\",\n      interestRate: 3.5,\n      loanTerm: 30,\n      overPayments: [{}],\n      capitalGrowth: 3.5,\n      constructionCostGrowth: 2.5\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f24 bold mt16 mb16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Developer Inputs\"), /*#__PURE__*/React.createElement(HelperMessage, {\n      type: CONSTANTS.HELPERMESSAGES.DEVELOPERFORM,\n      body: helperMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onSubmit,\n      mutators: { ...arrayMutators\n      },\n      initialValues: { ...initialValues\n      },\n      render: ({\n        handleSubmit,\n        values,\n        form,\n        form: {\n          mutators: {\n            push,\n            pop\n          }\n        }\n      }) => /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"f20 bold mt16 mb16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, \"Timing Assumptions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r bs-3 bg-1 p20 mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Design Period\",\n        fieldName: \"planningAndDesign\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0)],\n        placeholder: \"Design Period\",\n        fieldType: \"number\",\n        step: 1,\n        append: \"mths\",\n        parseType: CONSTANTS.PARSETYPE.INT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Construction Duration\",\n        fieldName: \"constructionDuration\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0)],\n        placeholder: \"Construction Duration\",\n        fieldType: \"number\",\n        step: 1,\n        append: \"mths\",\n        parseType: CONSTANTS.PARSETYPE.INT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Investment Period\",\n        fieldName: \"investmentPeriod\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(30)],\n        placeholder: \"Investment Period\",\n        fieldType: \"number\",\n        step: 1,\n        append: \"yrs\",\n        parseType: CONSTANTS.PARSETYPE.INT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"f20 bold mt16 mb16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"Cost Assumptions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r bs-3 bg-1 p20 mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Acquisition Price\",\n        fieldName: \"acquisitionPrice\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0)],\n        placeholder: \"Acquisition Price (land)\",\n        fieldType: \"number\",\n        step: 1,\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Dwellings\",\n        fieldName: \"dwellings\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(1)],\n        placeholder: \"Dwellings to Build\",\n        fieldType: \"number\",\n        step: 1,\n        append: \"no.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Construction Cost / Dwelling\",\n        fieldName: \"constructionCostPerDwelling\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0)],\n        placeholder: \"Construction Cost per Dwelling\",\n        fieldType: \"number\",\n        step: 1,\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Design Fees\",\n        fieldName: \"designFees\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0)],\n        placeholder: \"Design Fees\",\n        fieldType: \"number\",\n        maxLength: 3,\n        step: 0.01,\n        append: \"% of cost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Development Levy\",\n        fieldName: \"statutoryFees\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Development Levy\",\n        fieldType: \"number\",\n        maxLength: 3,\n        step: 0.01,\n        append: \"% of cost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Construction Contingency\",\n        fieldName: \"constructionContingency\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0), maxValue(100)],\n        placeholder: \"Construction Contingency\",\n        fieldType: \"number\",\n        maxLength: 3,\n        step: 0.01,\n        append: \"% of cost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Construction Cost Growth\",\n        fieldName: \"constructionCostGrowth\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Construction Cost Growth\",\n        fieldType: \"number\",\n        step: 0.01,\n        append: \"% pa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"f20 bold mt16 mb16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, \"Revenue Assumptions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r bs-3 bg-1 p20 mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Revenue / Dwelling\",\n        fieldName: \"revenuePerDwelling\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0)],\n        placeholder: \"Revenue per Dwelling\",\n        fieldType: \"number\",\n        step: 1,\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Selling Costs\",\n        fieldName: \"sellingCosts\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Selling Costs\",\n        fieldType: \"number\",\n        step: \"0.01\",\n        append: \"% of sale\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Rental Yield\",\n        fieldName: \"rentalYield\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0), maxValue(100)],\n        placeholder: \"Rental Yield\",\n        fieldType: \"number\",\n        step: 0.01,\n        prependEnd: \"%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Dwelling Capital Growth\",\n        fieldName: \"capitalGrowth\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Capital Growth\",\n        fieldType: \"number\",\n        step: 0.01,\n        prependEnd: \"% pa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Opex Post Construction\",\n        fieldName: \"recurringCosts\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Opex Post Construction\",\n        fieldType: \"number\",\n        step: 0.01,\n        append: \"% of gross income\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Acquisition Costs\",\n        fieldName: \"acquisitionCosts\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [minValue(0), maxValue(100)],\n        placeholder: \"Acquisition Costs\",\n        fieldType: \"number\",\n        step: 0.01,\n        append: \"% of acquisition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"f20 bold mt16 mb16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, \"Funding Assumptions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r bs-3 bg-1 p20 mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Initial Equity\",\n        fieldName: \"initialEquity\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0)],\n        placeholder: \"Initial Equity\",\n        fieldType: \"number\",\n        step: 0.01,\n        prepend: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Interest Rate\",\n        fieldName: \"interestRate\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0), maxValue(100)],\n        placeholder: \"Interest Rate\",\n        fieldType: \"number\",\n        step: 0.01,\n        append: \"%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-row align-c relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"developer-loantype\",\n        className: \"f16 mb8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 23\n        }\n      }, \"Repayment Type\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-red f12 bold ml4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Tooltip, {\n        message: developerTooltipHelper.loanType.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Field, {\n        name: \"loanType\",\n        validate: required,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }\n      }, ({\n        input,\n        meta\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"relative mb20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-input select w100 bs-1\",\n        id: \"developer-loantype\",\n        name: \"loanType\",\n        defaultValue: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"default\",\n        disabled: true,\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 29\n        }\n      }, \"Repayment Type\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"interestOnly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 29\n        }\n      }, \"Interest Only\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"principalAndInterest\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      }, \"Principal + Interest\")), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"form-error f10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }\n      }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FinalFormField, {\n        label: \"Loan Term\",\n        fieldName: \"loanTerm\",\n        type: CONSTANTS.TYPES.DEVELOPER,\n        validators: [required, minValue(0), maxValue(30)],\n        placeholder: \"Loan Term\",\n        fieldType: \"number\",\n        step: 1,\n        maxLength: 3,\n        append: \"years\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(MortgageOverpayments, {\n        type: CONSTANTS.TYPES.DEVELOPER,\n        push: push,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"form-button-p bs-3 font-white mt12 pt8 pb8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"form-button-s bs-3 font-white mt12 pt8 pb8 r\",\n        onClick: form.reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }\n      }, \"Reset\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeveloperForm);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorInputs/DeveloperForm.js"],"names":["React","connect","useHistory","Form","Field","arrayMutators","testDashboard","setAccordian","setModal","CONSTANTS","required","minValue","maxValue","developerTooltipHelper","FinalFormField","HelperMessage","Loader","MortgageOverpayments","Tooltip","DeveloperForm","id","dashboards","history","onSubmit","values","push","helperMessage","isFetching","initialValues","acquisitionPrice","acquisitionCosts","dwellings","constructionCostPerDwelling","designFees","constructionContingency","statutoryFees","constructionDuration","planningAndDesign","revenuePerDwelling","sellingCosts","investmentPeriod","recurringCosts","rentalYield","initialEquity","loanType","interestRate","loanTerm","overPayments","capitalGrowth","constructionCostGrowth","HELPERMESSAGES","DEVELOPERFORM","handleSubmit","form","mutators","pop","TYPES","DEVELOPER","PARSETYPE","INT","message","input","meta","error","touched","reset","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Field } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { testDashboard } from \"../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../reducers/navigationReducer\";\nimport { CONSTANTS } from \"../../static/constants\";\nimport { required, minValue, maxValue } from \"../../utils/formValidatorHelper\";\nimport { developerTooltipHelper } from \"../../utils/tooltipHelper\";\nimport FinalFormField from \"../Shared/FinalFormField\";\nimport HelperMessage from \"../Shared/HelperMessage\";\nimport Loader from \"../Shared/Loader\";\nimport MortgageOverpayments from \"./MortgageOverpayments\";\nimport Tooltip from \"../Shared/Tooltip\";\n\nconst DeveloperForm = ({ id, testDashboard, dashboards }) => {\n  const history = useHistory();\n\n  const onSubmit = (values) => {\n    testDashboard(values);\n    history.push(\"/developer/dash\");\n  };\n\n  const helperMessage = `Developer Inputs Helper Text`;\n\n  if (dashboards.isFetching) {\n    return <Loader />;\n  } else {\n    // const initialValues =\n    //   dashboards.preSave || id ? dashboards.data[0].values : {overPayments: [{}]};\n\n    const initialValues = {\n      acquisitionPrice: 100000,\n      acquisitionCosts: 5,\n      dwellings: 4,\n      constructionCostPerDwelling: 400000,\n      designFees: 10,\n      constructionContingency: 10,\n      statutoryFees: 3,\n      constructionDuration: 24,\n      planningAndDesign: 6,\n\n      revenuePerDwelling: 750000,\n      sellingCosts: 5,\n      investmentPeriod: 5,\n      recurringCosts: 30,\n      rentalYield: 4,\n\n      initialEquity: 400000,\n      loanType: \"interestOnly\",\n      interestRate: 3.5,\n      loanTerm: 30,\n      overPayments: [{}],\n\n      capitalGrowth: 3.5,\n      constructionCostGrowth: 2.5,\n    };\n    return (\n      <>\n        <h1 className=\"f24 bold mt16 mb16\">Developer Inputs</h1>\n        <HelperMessage\n          type={CONSTANTS.HELPERMESSAGES.DEVELOPERFORM}\n          body={helperMessage}\n        />\n        <Form\n          onSubmit={onSubmit}\n          mutators={{\n            ...arrayMutators,\n          }}\n          initialValues={{\n            ...initialValues,\n          }}\n          render={({\n            handleSubmit,\n            values,\n            form,\n            form: {\n              mutators: { push, pop },\n            },\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <h2 className=\"f20 bold mt16 mb16\">Timing Assumptions</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Design Period\"}\n                      fieldName={\"planningAndDesign\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0)]}\n                      placeholder={\"Design Period\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      append={\"mths\"}\n                      parseType={CONSTANTS.PARSETYPE.INT}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Construction Duration\"}\n                      fieldName={\"constructionDuration\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0)]}\n                      placeholder={\"Construction Duration\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      append={\"mths\"}\n                      parseType={CONSTANTS.PARSETYPE.INT}\n                    />\n                  </div>\n                </div>\n                <FinalFormField\n                  label={\"Investment Period\"}\n                  fieldName={\"investmentPeriod\"}\n                  type={CONSTANTS.TYPES.DEVELOPER}\n                  validators={[minValue(0), maxValue(30)]}\n                  placeholder={\"Investment Period\"}\n                  fieldType={\"number\"}\n                  step={1}\n                  append={\"yrs\"}\n                  parseType={CONSTANTS.PARSETYPE.INT}\n                />\n              </div>\n              <h2 className=\"f20 bold mt16 mb16\">Cost Assumptions</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Acquisition Price\"}\n                      fieldName={\"acquisitionPrice\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0)]}\n                      placeholder={\"Acquisition Price (land)\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      prepend={\"$\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Dwellings\"}\n                      fieldName={\"dwellings\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(1)]}\n                      placeholder={\"Dwellings to Build\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      append={\"no.\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Construction Cost / Dwelling\"}\n                      fieldName={\"constructionCostPerDwelling\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0)]}\n                      placeholder={\"Construction Cost per Dwelling\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      prepend={\"$\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Design Fees\"}\n                      fieldName={\"designFees\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[minValue(0)]}\n                      placeholder={\"Design Fees\"}\n                      fieldType={\"number\"}\n                      maxLength={3}\n                      step={0.01}\n                      append={\"% of cost\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Development Levy\"}\n                      fieldName={\"statutoryFees\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Development Levy\"}\n                      fieldType={\"number\"}\n                      maxLength={3}\n                      step={0.01}\n                      append={\"% of cost\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Construction Contingency\"}\n                      fieldName={\"constructionContingency\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0), maxValue(100)]}\n                      placeholder={\"Construction Contingency\"}\n                      fieldType={\"number\"}\n                      maxLength={3}\n                      step={0.01}\n                      append={\"% of cost\"}\n                    />\n                  </div>\n                </div>\n                <FinalFormField\n                  label={\"Construction Cost Growth\"}\n                  fieldName={\"constructionCostGrowth\"}\n                  type={CONSTANTS.TYPES.DEVELOPER}\n                  validators={[minValue(0), maxValue(100)]}\n                  placeholder={\"Construction Cost Growth\"}\n                  fieldType={\"number\"}\n                  step={0.01}\n                  append={\"% pa\"}\n                />\n              </div>\n              <h2 className=\"f20 bold mt16 mb16\">Revenue Assumptions</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Revenue / Dwelling\"}\n                      fieldName={\"revenuePerDwelling\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0)]}\n                      placeholder={\"Revenue per Dwelling\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      prepend={\"$\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Selling Costs\"}\n                      fieldName={\"sellingCosts\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Selling Costs\"}\n                      fieldType={\"number\"}\n                      step={\"0.01\"}\n                      append={\"% of sale\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Rental Yield\"}\n                      fieldName={\"rentalYield\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0), maxValue(100)]}\n                      placeholder={\"Rental Yield\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      prependEnd={\"%\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Dwelling Capital Growth\"}\n                      fieldName={\"capitalGrowth\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Capital Growth\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      prependEnd={\"% pa\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Opex Post Construction\"}\n                      fieldName={\"recurringCosts\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Opex Post Construction\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% of gross income\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Acquisition Costs\"}\n                      fieldName={\"acquisitionCosts\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[minValue(0), maxValue(100)]}\n                      placeholder={\"Acquisition Costs\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"% of acquisition\"}\n                    />\n                  </div>\n                </div>\n              </div>\n              <h2 className=\"f20 bold mt16 mb16\">Funding Assumptions</h2>\n              <div className=\"r bs-3 bg-1 p20 mb20\">\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Initial Equity\"}\n                      fieldName={\"initialEquity\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0)]}\n                      placeholder={\"Initial Equity\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      prepend={\"$\"}\n                    />\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Interest Rate\"}\n                      fieldName={\"interestRate\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0), maxValue(100)]}\n                      placeholder={\"Interest Rate\"}\n                      fieldType={\"number\"}\n                      step={0.01}\n                      append={\"%\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-item\">\n                    <div className=\"flex-row align-c relative\">\n                      <label htmlFor=\"developer-loantype\" className=\"f16 mb8\">\n                        Repayment Type\n                        <span className=\"font-red f12 bold ml4\">*</span>\n                      </label>\n                      <Tooltip\n                        message={developerTooltipHelper.loanType.message}\n                      />\n                    </div>\n                    <Field name=\"loanType\" validate={required}>\n                      {({ input, meta }) => (\n                        <div className=\"relative mb20\">\n                          <select\n                            className=\"form-input select w100 bs-1\"\n                            id=\"developer-loantype\"\n                            name=\"loanType\"\n                            defaultValue={\"default\"}\n                          >\n                            <option value=\"default\" disabled hidden>\n                              Repayment Type\n                            </option>\n                            <option value=\"interestOnly\">Interest Only</option>\n                            <option value=\"principalAndInterest\">\n                              Principal + Interest\n                            </option>\n                          </select>\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error f10\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <FinalFormField\n                      label={\"Loan Term\"}\n                      fieldName={\"loanTerm\"}\n                      type={CONSTANTS.TYPES.DEVELOPER}\n                      validators={[required, minValue(0), maxValue(30)]}\n                      placeholder={\"Loan Term\"}\n                      fieldType={\"number\"}\n                      step={1}\n                      maxLength={3}\n                      append={\"years\"}\n                    />\n                  </div>\n                </div>\n                <MortgageOverpayments\n                  type={CONSTANTS.TYPES.DEVELOPER}\n                  push={push}\n                />\n              </div>\n              <div className=\"form-buttons\">\n                <button\n                  type=\"submit\"\n                  className=\"form-button-p bs-3 font-white mt12 pt8 pb8\"\n                >\n                  Submit\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"form-button-s bs-3 font-white mt12 pt8 pb8 r\"\n                  onClick={form.reset}\n                >\n                  Reset\n                </button>\n              </div>\n            </form>\n          )}\n        />\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeveloperForm);\n"]},"metadata":{},"sourceType":"module"}