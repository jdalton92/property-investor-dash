{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Notification/NotificationAlert.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../reducers/notificationReducer\";\nimport Button from \"../Shared/Button\";\nimport CloseIcon from \"../../styles/svg/close.svg\";\nimport { CONSTANTS } from \"../../static/constants\";\n\nconst NotificationAlert = ({\n  notification,\n  clearNotification\n}) => {\n  const handleCloseNotification = e => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  console.log(\"n\", notification);\n  let notificationType;\n\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      break;\n\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      break;\n\n    default:\n      notificationType = \"success\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${notificationType}-notification`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    extraClass: \"button-p\",\n    onClick: handleCloseNotification,\n    icon: CloseIcon,\n    extraStyle: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, notificationType), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, typeof notification.message === \"string\" ? notification.message : notification.statusText));\n}; // const mapStateToProps = (state) => {\n//   return {\n//     notification: state.notification,\n//   };\n// };\n\n\nconst mapDispatchToProps = {\n  clearNotification\n};\nexport default connect(null, mapDispatchToProps)(NotificationAlert);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Notification/NotificationAlert.js"],"names":["React","connect","clearNotification","Button","CONSTANTS","NotificationAlert","notification","handleCloseNotification","e","preventDefault","id","console","log","notificationType","type","NOTIFICATION","SUCCESS","ERROR","CloseIcon","alignItems","justifyContent","message","statusText","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBJ,EAAAA;AAAhB,CAAD,KAAyC;AACjE,QAAMK,uBAAuB,GAAIC,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,iBAAiB,CAACI,YAAY,CAACI,EAAd,CAAjB;AACD,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBN,YAAjB;AAEA,MAAIO,gBAAJ;;AACA,UAAQP,YAAY,CAACQ,IAArB;AACE,SAAKV,SAAS,CAACW,YAAV,CAAuBC,OAA5B;AACEH,MAAAA,gBAAgB,GAAG,SAAnB;AACA;;AACF,SAAKT,SAAS,CAACW,YAAV,CAAuBE,KAA5B;AACEJ,MAAAA,gBAAgB,GAAG,OAAnB;AACA;;AACF;AACEA,MAAAA,gBAAgB,GAAG,SAAnB;AARJ;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEA,gBAAiB,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE,UADd;AAEE,IAAA,OAAO,EAAEN,uBAFX;AAGE,IAAA,IAAI,EAAEW,SAHR;AAIE,IAAA,UAAU,EAAE;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,cAAc,EAAE;AAAxC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,gBAAN,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOP,YAAY,CAACe,OAApB,KAAgC,QAAhC,GACGf,YAAY,CAACe,OADhB,GAEGf,YAAY,CAACgB,UAHnB,CARF,CADF;AAgBD,CApCD,C,CAsCA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,kBAAkB,GAAG;AACzBrB,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkClB,iBAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../reducers/notificationReducer\";\nimport Button from \"../Shared/Button\";\nimport CloseIcon from \"../../styles/svg/close.svg\";\nimport { CONSTANTS } from \"../../static/constants\";\n\nconst NotificationAlert = ({ notification, clearNotification }) => {\n  const handleCloseNotification = (e) => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  console.log(\"n\", notification);\n\n  let notificationType;\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      break;\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      break;\n    default:\n      notificationType = \"success\";\n  }\n\n  return (\n    <div className={`${notificationType}-notification`}>\n      <Button\n        extraClass={\"button-p\"}\n        onClick={handleCloseNotification}\n        icon={CloseIcon}\n        extraStyle={{ alignItems: \"center\", justifyContent: \"center\" }}\n      />\n      <div>{notificationType}</div>\n      <p>\n        {typeof notification.message === \"string\"\n          ? notification.message\n          : notification.statusText}\n      </p>\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     notification: state.notification,\n//   };\n// };\n\nconst mapDispatchToProps = {\n  clearNotification,\n};\n\nexport default connect(null, mapDispatchToProps)(NotificationAlert);\n"]},"metadata":{},"sourceType":"module"}