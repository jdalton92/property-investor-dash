{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{clearNotification}from\"../../../reducers/notificationReducer\";import Button from\"../Button\";import{Icon}from\"../Icon\";import{CONSTANTS}from\"../../../static/constants\";import MessageIcon from\"../../../styles/svg/message.svg\";import TickIcon from\"../../../styles/svg/tick.svg\";import ErrorIcon from\"../../../styles/svg/error.svg\";import CloseIcon from\"../../../styles/svg/close.svg\";var NotificationAlert=function NotificationAlert(_ref){var notification=_ref.notification,clearNotification=_ref.clearNotification,key=_ref.key;var handleCloseNotification=function handleCloseNotification(e){e.preventDefault();clearNotification(notification.id);};var notificationType;var iconUrl;switch(notification.type){case CONSTANTS.NOTIFICATION.MESSAGE:notificationType=\"message\";iconUrl=MessageIcon;break;case CONSTANTS.NOTIFICATION.SUCCESS:notificationType=\"success\";iconUrl=TickIcon;break;case CONSTANTS.NOTIFICATION.ERROR:notificationType=\"error\";iconUrl=ErrorIcon;break;default:notificationType=\"message\";iconUrl=MessageIcon;}var toTitleCase=function toTitleCase(string){return string.replace(/\\w\\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase();});};return/*#__PURE__*/React.createElement(\"div\",{key:key,className:\"notification p8 ml8 mr8 mb8 fade-in flex-row align-c relative bs-2 jump r bs-3\"},/*#__PURE__*/React.createElement(Icon,{url:iconUrl,color:\"white\",hover:false,active:false}),/*#__PURE__*/React.createElement(\"div\",{className:\"w100 ml8\"},/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(notificationType,\" bold\")},toTitleCase(notificationType),\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"font-white pl4\"},typeof notification.message===\"string\"?\" \".concat(notification.message):\" \".concat(notification.statusText))),/*#__PURE__*/React.createElement(Button,{ariaLabel:\"Close\",dataBalloonPos:\"left\",extraClass:\"button-transp-p align-c justify-c\",onClick:handleCloseNotification,iconUrl:CloseIcon,iconColor:\"white\"}));};var mapDispatchToProps={clearNotification:clearNotification};export default connect(null,mapDispatchToProps)(NotificationAlert);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Shared/Notification/NotificationAlert.js"],"names":["React","connect","clearNotification","Button","Icon","CONSTANTS","NotificationAlert","notification","key","handleCloseNotification","e","preventDefault","id","notificationType","iconUrl","type","NOTIFICATION","MESSAGE","MessageIcon","SUCCESS","TickIcon","ERROR","ErrorIcon","toTitleCase","string","replace","txt","charAt","toUpperCase","substr","toLowerCase","message","statusText","CloseIcon","mapDispatchToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAT,KAAkC,uCAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,OAASC,IAAT,KAAqB,SAArB,CACA,OAASC,SAAT,KAA0B,2BAA1B,C,sNAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAA8C,IAA3CC,CAAAA,YAA2C,MAA3CA,YAA2C,CAA7BL,iBAA6B,MAA7BA,iBAA6B,CAAVM,GAAU,MAAVA,GAAU,CACtE,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,CAAD,CAAO,CACrCA,CAAC,CAACC,cAAF,GACAT,iBAAiB,CAACK,YAAY,CAACK,EAAd,CAAjB,CACD,CAHD,CAKA,GAAIC,CAAAA,gBAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,OAAQP,YAAY,CAACQ,IAArB,EACE,IAAKV,CAAAA,SAAS,CAACW,YAAV,CAAuBC,OAA5B,CACEJ,gBAAgB,CAAG,SAAnB,CACAC,OAAO,CAAGI,WAAV,CACA,MACF,IAAKb,CAAAA,SAAS,CAACW,YAAV,CAAuBG,OAA5B,CACEN,gBAAgB,CAAG,SAAnB,CACAC,OAAO,CAAGM,QAAV,CACA,MACF,IAAKf,CAAAA,SAAS,CAACW,YAAV,CAAuBK,KAA5B,CACER,gBAAgB,CAAG,OAAnB,CACAC,OAAO,CAAGQ,SAAV,CACA,MACF,QACET,gBAAgB,CAAG,SAAnB,CACAC,OAAO,CAAGI,WAAV,CAfJ,CAkBA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9B,MAAOA,CAAAA,MAAM,CAACC,OAAP,CAAe,QAAf,CAAyB,SAACC,GAAD,CAAS,CACvC,MAAOA,CAAAA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,GAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC,CACD,CAFM,CAAP,CAGD,CAJD,CAMA,mBACE,2BACE,GAAG,CAAEtB,GADP,CAEE,SAAS,CAAC,gFAFZ,eAIE,oBAAC,IAAD,EAAM,GAAG,CAAEM,OAAX,CAAoB,KAAK,CAAE,OAA3B,CAAoC,KAAK,CAAE,KAA3C,CAAkD,MAAM,CAAE,KAA1D,EAJF,cAKE,2BAAK,SAAS,CAAC,UAAf,eACE,4BAAM,SAAS,WAAKD,gBAAL,SAAf,EACGU,WAAW,CAACV,gBAAD,CADd,KADF,cAIE,4BAAM,SAAS,CAAC,gBAAhB,EACG,MAAON,CAAAA,YAAY,CAACwB,OAApB,GAAgC,QAAhC,YACOxB,YAAY,CAACwB,OADpB,aAEOxB,YAAY,CAACyB,UAFpB,CADH,CAJF,CALF,cAeE,oBAAC,MAAD,EACE,SAAS,CAAE,OADb,CAEE,cAAc,CAAE,MAFlB,CAGE,UAAU,CAAE,mCAHd,CAIE,OAAO,CAAEvB,uBAJX,CAKE,OAAO,CAAEwB,SALX,CAME,SAAS,CAAE,OANb,EAfF,CADF,CA0BD,CA1DD,CA4DA,GAAMC,CAAAA,kBAAkB,CAAG,CACzBhC,iBAAiB,CAAjBA,iBADyB,CAA3B,CAIA,cAAeD,CAAAA,OAAO,CAAC,IAAD,CAAOiC,kBAAP,CAAP,CAAkC5B,iBAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearNotification } from \"../../../reducers/notificationReducer\";\nimport Button from \"../Button\";\nimport { Icon } from \"../Icon\";\nimport { CONSTANTS } from \"../../../static/constants\";\nimport MessageIcon from \"../../../styles/svg/message.svg\";\nimport TickIcon from \"../../../styles/svg/tick.svg\";\nimport ErrorIcon from \"../../../styles/svg/error.svg\";\nimport CloseIcon from \"../../../styles/svg/close.svg\";\n\nconst NotificationAlert = ({ notification, clearNotification, key }) => {\n  const handleCloseNotification = (e) => {\n    e.preventDefault();\n    clearNotification(notification.id);\n  };\n\n  let notificationType;\n  let iconUrl;\n  switch (notification.type) {\n    case CONSTANTS.NOTIFICATION.MESSAGE:\n      notificationType = \"message\";\n      iconUrl = MessageIcon;\n      break;\n    case CONSTANTS.NOTIFICATION.SUCCESS:\n      notificationType = \"success\";\n      iconUrl = TickIcon;\n      break;\n    case CONSTANTS.NOTIFICATION.ERROR:\n      notificationType = \"error\";\n      iconUrl = ErrorIcon;\n      break;\n    default:\n      notificationType = \"message\";\n      iconUrl = MessageIcon;\n  }\n\n  const toTitleCase = (string) => {\n    return string.replace(/\\w\\S*/g, (txt) => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  return (\n    <div\n      key={key}\n      className=\"notification p8 ml8 mr8 mb8 fade-in flex-row align-c relative bs-2 jump r bs-3\"\n    >\n      <Icon url={iconUrl} color={\"white\"} hover={false} active={false} />\n      <div className=\"w100 ml8\">\n        <span className={`${notificationType} bold`}>\n          {toTitleCase(notificationType)}:\n        </span>\n        <span className=\"font-white pl4\">\n          {typeof notification.message === \"string\"\n            ? ` ${notification.message}`\n            : ` ${notification.statusText}`}\n        </span>\n      </div>\n      <Button\n        ariaLabel={\"Close\"}\n        dataBalloonPos={\"left\"}\n        extraClass={\"button-transp-p align-c justify-c\"}\n        onClick={handleCloseNotification}\n        iconUrl={CloseIcon}\n        iconColor={\"white\"}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  clearNotification,\n};\n\nexport default connect(null, mapDispatchToProps)(NotificationAlert);\n"]},"metadata":{},"sourceType":"module"}