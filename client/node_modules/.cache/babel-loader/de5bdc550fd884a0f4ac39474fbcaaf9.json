{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/Contact.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { setMessage } from \"../reducers/contactReducer\";\nimport { required, maxLength, isEmail, composeValidators } from \"../utils/formValidatorHelper\";\nimport Loader from \"./Shared/Loader\";\n\nconst Contact = ({\n  setMessage,\n  isFetching\n}) => {\n  const onSubmit = values => {\n    setMessage(values);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"f24 bold mt16 mb16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Contact Us\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      rest\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      className: \"contact-form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"contact-wrapper\",\n      className: \"r bs-3 bg-1 p20 mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, isFetching && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 30\n      }\n    }), !isFetching && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contact-fullname\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, \"Full Name\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"fullName\",\n      validate: composeValidators(required, maxLength(50)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"contact-fullname\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Full Name\",\n      input: \"text\",\n      maxLength: \"1250\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contact-company\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"company\",\n      validate: composeValidators(maxLength(200)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"contact-company\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Company Name\",\n      input: \"text\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contact-email\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      validate: composeValidators(isEmail, maxLength(200)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"contact-email\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"example@email.com\",\n      input: \"email\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contact-message\",\n      className: \"f16 mb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \"Message\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-red f12 bold ml4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"message\",\n      validate: composeValidators(required, maxLength(1250)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative mb20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n      id: \"contact-message\",\n      className: \"form-input bs-1 w100\",\n      placeholder: \"Message\",\n      input: \"text\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error f10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }\n    }, meta.error))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form-button-p bs-3 font-white mt12 pt8 pb8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Submit\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.contact.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/Contact.js"],"names":["React","connect","Form","Field","setMessage","required","maxLength","isEmail","composeValidators","Loader","Contact","isFetching","onSubmit","values","handleSubmit","rest","input","meta","error","touched","mapStateToProps","state","contact","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { setMessage } from \"../reducers/contactReducer\";\nimport {\n  required,\n  maxLength,\n  isEmail,\n  composeValidators,\n} from \"../utils/formValidatorHelper\";\nimport Loader from \"./Shared/Loader\";\n\nconst Contact = ({ setMessage, isFetching }) => {\n  const onSubmit = (values) => {\n    setMessage(values);\n  };\n\n  return (\n    <>\n      <h1 className=\"f24 bold mt16 mb16\">Contact Us</h1>\n      <Form\n        onSubmit={onSubmit}\n        render={({ handleSubmit, rest }) => (\n          <form className=\"contact-form\" onSubmit={handleSubmit}>\n            <div id=\"contact-wrapper\" className=\"r bs-3 bg-1 p20 mb20\">\n              {isFetching && <Loader />}\n              {!isFetching && (\n                <>\n                  <label htmlFor={\"contact-fullname\"} className=\"f16 mb8\">\n                    Full Name\n                    <span className=\"font-red f12 bold ml4\">*</span>\n                  </label>\n                  <Field\n                    name=\"fullName\"\n                    validate={composeValidators(required, maxLength(50))}\n                  >\n                    {({ input, meta }) => (\n                      <div className=\"relative mb20\">\n                        <input\n                          id=\"contact-fullname\"\n                          className=\"form-input bs-1 w100\"\n                          placeholder=\"Full Name\"\n                          input=\"text\"\n                          maxLength=\"1250\"\n                          {...input}\n                        />\n                        {meta.error && meta.touched && (\n                          <span className=\"form-error f10\">{meta.error}</span>\n                        )}\n                      </div>\n                    )}\n                  </Field>\n                  <label htmlFor={\"contact-company\"} className=\"f16 mb8\">\n                    Company\n                  </label>\n                  <Field\n                    name=\"company\"\n                    validate={composeValidators(maxLength(200))}\n                  >\n                    {({ input, meta }) => (\n                      <div className=\"relative mb20\">\n                        <input\n                          id=\"contact-company\"\n                          className=\"form-input bs-1 w100\"\n                          placeholder=\"Company Name\"\n                          input=\"text\"\n                          {...input}\n                        />\n                        {meta.error && meta.touched && (\n                          <span className=\"form-error f10\">{meta.error}</span>\n                        )}\n                      </div>\n                    )}\n                  </Field>\n                  <label htmlFor={\"contact-email\"} className=\"f16 mb8\">\n                    Email\n                    <span className=\"font-red f12 bold ml4\">*</span>\n                  </label>\n                  <Field\n                    name=\"email\"\n                    validate={composeValidators(isEmail, maxLength(200))}\n                  >\n                    {({ input, meta }) => (\n                      <div className=\"relative mb20\">\n                        <input\n                          id=\"contact-email\"\n                          className=\"form-input bs-1 w100\"\n                          placeholder=\"example@email.com\"\n                          input=\"email\"\n                          {...input}\n                        />\n                        {meta.error && meta.touched && (\n                          <span className=\"form-error f10\">{meta.error}</span>\n                        )}\n                      </div>\n                    )}\n                  </Field>\n                  <label htmlFor={\"contact-message\"} className=\"f16 mb8\">\n                    Message\n                    <span className=\"font-red f12 bold ml4\">*</span>\n                  </label>\n                  <Field\n                    name=\"message\"\n                    validate={composeValidators(required, maxLength(1250))}\n                  >\n                    {({ input, meta }) => (\n                      <div className=\"relative mb20\">\n                        <textarea\n                          id=\"contact-message\"\n                          className=\"form-input bs-1 w100\"\n                          placeholder=\"Message\"\n                          input=\"text\"\n                          {...input}\n                        />\n                        {meta.error && meta.touched && (\n                          <span className=\"form-error f10\">{meta.error}</span>\n                        )}\n                      </div>\n                    )}\n                  </Field>\n                </>\n              )}\n            </div>\n            <div className=\"form-buttons\">\n              <button\n                type=\"submit\"\n                className=\"form-button-p bs-3 font-white mt12 pt8 pb8\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.contact.isFetching,\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\n"]},"metadata":{},"sourceType":"module"}