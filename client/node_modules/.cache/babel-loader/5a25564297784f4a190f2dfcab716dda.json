{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CalculatorForms/Developer/DeveloperInputs.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Form as FinalForm } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { getDashboard, testDashboard } from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport CalculatorFormModal from \"../CalculatorFormModal\";\nimport DeveloperStandardAssumptions from \"./DeveloperStandardAssumptions\";\nimport DeveloperAdvancedAssumptions from \"./DeveloperAdvancedAssumptions\";\nimport { Form, Button, Spinner } from \"react-bootstrap\";\nimport \"../../styles/CalculatorForm.css\";\n\nconst DeveloperCalculatorForm = ({\n  getDashboard,\n  setModal,\n  testDashboard,\n  dashboards,\n  navigation\n}) => {\n  const id = useParams().id;\n  useEffect(() => {\n    if (id && !dashboards.preSave) {\n      getDashboard(id);\n    }\n  }, [id]);\n\n  const onSubmit = values => {\n    setModal(\"disclaimer\");\n    values.type = \"developer\";\n    testDashboard(values);\n  };\n\n  if (dashboards.isFetching || !dashboards.data[0]) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      className: \"loading-spinner\",\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    const initialValues = dashboards.preSave || id ? dashboards.data[0].values : null;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"calculator-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Developer Inputs\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calculator-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FinalForm, {\n      onSubmit: onSubmit,\n      mutators: { ...arrayMutators\n      },\n      initialValues: { ...initialValues\n      },\n      render: ({\n        handleSubmit,\n        values,\n        form,\n        form: {\n          mutators: {\n            push,\n            pop\n          }\n        }\n      }) => /*#__PURE__*/React.createElement(Form, {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"accordian accordian1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card calculator-form-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header\",\n        id: \"headingOne\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => setAccordian(\"developer\", \"standard\"),\n        className: \"btn btn-link\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#collapseOne\",\n        \"aria-expanded\": \"true\",\n        \"aria-controls\": \"collapseOne\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, \"Standard Assumptions\"))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"collapseOne\",\n        className: navigation.accordianShow.developer.standard ? \"collapse show\" : \"collapse\",\n        \"aria-labelledby\": \"headingOne\",\n        \"data-parent\": \"#accordion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DeveloperStandardAssumptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card calculator-form-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header\",\n        id: \"headingTwo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => setAccordian(\"developer\", \"advanced\"),\n        className: \"btn btn-link collapsed\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#collapseTwo\",\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": \"collapseTwo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, \"Advanced Assumptions\"))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"collapseTwo\",\n        className: navigation.accordianShow.developer.advanced ? \"collapse show\" : \"collapse\",\n        \"aria-labelledby\": \"headingTwo\",\n        \"data-parent\": \"#accordion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(DeveloperAdvancedAssumptions, {\n        push: push,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calculator-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"button submit-button\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"button reset-button\",\n        type: \"button\",\n        variant: \"outline-primary\",\n        onClick: form.reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, \"Reset\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(CalculatorFormModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboards: state.dashboards,\n    navigation: state.navigation,\n    isUserFetching: state.user.isFetching\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n  getDashboard\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DeveloperCalculatorForm);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CalculatorForms/Developer/DeveloperInputs.js"],"names":["React","useEffect","connect","useParams","Form","FinalForm","arrayMutators","getDashboard","testDashboard","setAccordian","setModal","CalculatorFormModal","DeveloperStandardAssumptions","DeveloperAdvancedAssumptions","Button","Spinner","DeveloperCalculatorForm","dashboards","navigation","id","preSave","onSubmit","values","type","isFetching","data","initialValues","handleSubmit","form","mutators","push","pop","accordianShow","developer","standard","advanced","reset","mapStateToProps","state","isUserFetching","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Form as FinalForm } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport {\n  getDashboard,\n  testDashboard,\n} from \"../../../reducers/dashboardReducer\";\nimport { setAccordian, setModal } from \"../../../reducers/navigationReducer\";\nimport CalculatorFormModal from \"../CalculatorFormModal\";\nimport DeveloperStandardAssumptions from \"./DeveloperStandardAssumptions\";\nimport DeveloperAdvancedAssumptions from \"./DeveloperAdvancedAssumptions\";\nimport { Form, Button, Spinner } from \"react-bootstrap\";\nimport \"../../styles/CalculatorForm.css\";\n\nconst DeveloperCalculatorForm = ({\n  getDashboard,\n  setModal,\n  testDashboard,\n  dashboards,\n  navigation,\n}) => {\n  const id = useParams().id;\n\n  useEffect(() => {\n    if (id && !dashboards.preSave) {\n      getDashboard(id);\n    }\n  }, [id]);\n\n  const onSubmit = (values) => {\n    setModal(\"disclaimer\");\n    values.type = \"developer\";\n    testDashboard(values);\n  };\n\n  if (dashboards.isFetching || !dashboards.data[0]) {\n    return (\n      <div className=\"dashboard-spinner-container\">\n        <Spinner\n          className=\"loading-spinner\"\n          animation=\"border\"\n          variant=\"primary\"\n        />\n      </div>\n    );\n  } else {\n    const initialValues =\n      dashboards.preSave || id ? dashboards.data[0].values : null;\n    return (\n      <section className=\"calculator-section\">\n        <div className=\"header-container\">\n          <h1>\n            <b>Developer Inputs</b>\n          </h1>\n        </div>\n        <div className=\"calculator-container\">\n          <FinalForm\n            onSubmit={onSubmit}\n            mutators={{\n              ...arrayMutators,\n            }}\n            initialValues={{\n              ...initialValues,\n            }}\n            render={({\n              handleSubmit,\n              values,\n              form,\n              form: {\n                mutators: { push, pop },\n              },\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <div id=\"accordian accordian1\">\n                  <div className=\"card calculator-form-card\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                      <h5 className=\"mb-0\">\n                        <button\n                          type=\"button\"\n                          onClick={() => setAccordian(\"developer\", \"standard\")}\n                          className=\"btn btn-link\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#collapseOne\"\n                          aria-expanded=\"true\"\n                          aria-controls=\"collapseOne\"\n                        >\n                          Standard Assumptions\n                        </button>\n                      </h5>\n                    </div>\n\n                    <div\n                      id=\"collapseOne\"\n                      className={\n                        navigation.accordianShow.developer.standard\n                          ? \"collapse show\"\n                          : \"collapse\"\n                      }\n                      aria-labelledby=\"headingOne\"\n                      data-parent=\"#accordion\"\n                    >\n                      <DeveloperStandardAssumptions />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card calculator-form-card\">\n                  <div className=\"card-header\" id=\"headingTwo\">\n                    <h5 className=\"mb-0\">\n                      <button\n                        type=\"button\"\n                        onClick={() => setAccordian(\"developer\", \"advanced\")}\n                        className=\"btn btn-link collapsed\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#collapseTwo\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"collapseTwo\"\n                      >\n                        Advanced Assumptions\n                      </button>\n                    </h5>\n                  </div>\n                  <div\n                    id=\"collapseTwo\"\n                    className={\n                      navigation.accordianShow.developer.advanced\n                        ? \"collapse show\"\n                        : \"collapse\"\n                    }\n                    aria-labelledby=\"headingTwo\"\n                    data-parent=\"#accordion\"\n                  >\n                    <DeveloperAdvancedAssumptions push={push} />\n                  </div>\n                </div>\n                <div className=\"calculator-button-container\">\n                  <Button\n                    type=\"submit\"\n                    className=\"button submit-button\"\n                    variant=\"primary\"\n                  >\n                    Submit\n                  </Button>\n                  <Button\n                    className=\"button reset-button\"\n                    type=\"button\"\n                    variant=\"outline-primary\"\n                    onClick={form.reset}\n                  >\n                    Reset\n                  </Button>\n                </div>\n              </Form>\n            )}\n          />\n        </div>\n        <CalculatorFormModal />\n      </section>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dashboards: state.dashboards,\n    navigation: state.navigation,\n    isUserFetching: state.user.isFetching,\n  };\n};\n\nconst mapDispatchToProps = {\n  testDashboard,\n  setAccordian,\n  setModal,\n  getDashboard,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeveloperCalculatorForm);\n"]},"metadata":{},"sourceType":"module"}