{"ast":null,"code":"var _jsxFileName = \"/home/james/development/property-investor-dash/client/src/components/CreateUser.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { createUser } from \"../reducers/userReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { required, minLength, isEmail, composeValidators } from \"../helpers/formValidatorHelper\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"./styles/Form.css\";\n\nconst CreateUser = props => {\n  const history = useHistory();\n\n  const onSubmit = async values => {\n    // React final form handles e.preventDefault()\n    await props.createUser(values);\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form-section\",\n    id: \"create-form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-outer-container form-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Create Account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, props.user.data.username ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"form-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Log out to create new account\") : props.user.isFetching ? /*#__PURE__*/React.createElement(Spinner, {\n    className: \"loading-spinner\",\n    animation: \"border\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FinalForm, {\n    validate: values => {\n      const errors = {};\n\n      if (!values.checkPassword) {\n        errors.checkPassword = \"Required\";\n      }\n\n      if (values.password !== values.checkPassword) {\n        errors.checkPassword = \"Passwords must match\";\n      }\n\n      return errors;\n    },\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-element\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      validate: composeValidators(required, minLength(3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"Username\",\n      type: \"text\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      validate: composeValidators(required, isEmail),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"example@email.com\",\n      type: \"email\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      validate: composeValidators(required, minLength(3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"Password\",\n      type: \"password\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Retype Password\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"checkPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: \"Password\",\n      type: \"password\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, meta.error)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"form-button\",\n      id: \"form-submit\",\n      type: \"submit\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Submit\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  createUser,\n  setNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser);","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/components/CreateUser.js"],"names":["React","connect","useHistory","Form","FinalForm","Field","createUser","setNotification","required","minLength","isEmail","composeValidators","Button","Spinner","CreateUser","props","history","onSubmit","values","push","user","data","username","isFetching","errors","checkPassword","password","handleSubmit","input","meta","error","touched","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { createUser } from \"../reducers/userReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport {\n  required,\n  minLength,\n  isEmail,\n  composeValidators\n} from \"../helpers/formValidatorHelper\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"./styles/Form.css\";\n\nconst CreateUser = props => {\n  const history = useHistory();\n  const onSubmit = async values => {\n    // React final form handles e.preventDefault()\n    await props.createUser(values);\n    history.push(\"/\");\n  };\n\n  return (\n    <section className=\"form-section\" id=\"create-form-section\">\n      <div className=\"form-outer-container form-card-container\">\n        <div className=\"form-header\">\n          <h1>Create Account</h1>\n        </div>\n        <div className=\"form-inner-container\">\n          {props.user.data.username ? (\n            <i className=\"form-message\">Log out to create new account</i>\n          ) : props.user.isFetching ? (\n            <Spinner\n              className=\"loading-spinner\"\n              animation=\"border\"\n              variant=\"primary\"\n            />\n          ) : (\n            <FinalForm\n              validate={values => {\n                const errors = {};\n                if (!values.checkPassword) {\n                  errors.checkPassword = \"Required\";\n                }\n                if (values.password !== values.checkPassword) {\n                  errors.checkPassword = \"Passwords must match\";\n                }\n                return errors;\n              }}\n              onSubmit={onSubmit}\n              render={({ handleSubmit, values }) => (\n                <form className=\"form-element\" onSubmit={handleSubmit}>\n                  <div className=\"form-item\">\n                    <h5>Username</h5>\n                    <Field\n                      name=\"username\"\n                      validate={composeValidators(required, minLength(3))}\n                    >\n                      {({ input, meta }) => (\n                        <div>\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                            {...input}\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <h5>Email</h5>\n                    <Field\n                      name=\"email\"\n                      validate={composeValidators(required, isEmail)}\n                    >\n                      {({ input, meta }) => (\n                        <div>\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"example@email.com\"\n                            type=\"email\"\n                            {...input}\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <h5>Password</h5>\n                    <Field\n                      name=\"password\"\n                      validate={composeValidators(required, minLength(3))}\n                    >\n                      {({ input, meta }) => (\n                        <div>\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            {...input}\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-item\">\n                    <h5>Retype Password</h5>\n                    <Field name=\"checkPassword\">\n                      {({ input, meta }) => (\n                        <div>\n                          <input\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            {...input}\n                          />\n                          {meta.error && meta.touched && (\n                            <span className=\"form-error\">{meta.error}</span>\n                          )}\n                        </div>\n                      )}\n                    </Field>\n                  </div>\n                  <div className=\"form-button-container\">\n                    <Button\n                      className=\"form-button\"\n                      id=\"form-submit\"\n                      type=\"submit\"\n                      variant=\"primary\"\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              )}\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  createUser,\n  setNotification\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser);\n"]},"metadata":{},"sourceType":"module"}