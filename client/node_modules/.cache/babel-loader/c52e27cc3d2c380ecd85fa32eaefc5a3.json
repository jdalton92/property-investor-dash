{"ast":null,"code":"import contactService from \"../services/contact\";\nconst initialState = {\n  isFetching: false\n};\n\nconst contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONTACT_REQUEST\":\n      return {\n        isFetching: true\n      };\n\n    case \"MESSAGE_SENT\":\n      return {\n        isFetching: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setMessage = values => {\n  return async dispatch => {\n    dispatch({\n      type: \"CONTACT_REQUEST\"\n    });\n\n    try {\n      const response = await contactService.sendEmail(values);\n      dispatch({\n        type: \"MESSAGE_SENT\"\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: response.message,\n          type: \"success\"\n        }\n      });\n    } catch (e) {\n      dispatch({\n        type: \"MESSAGE_SENT\"\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response,\n          type: \"danger\"\n        }\n      });\n    }\n  };\n};\nexport default contactReducer;","map":{"version":3,"sources":["/home/james/development/property-investor-dash/client/src/reducers/contactReducer.js"],"names":["contactService","initialState","isFetching","contactReducer","state","action","type","setMessage","values","dispatch","response","sendEmail","content","message","e"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAArB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO;AAAEJ,QAAAA,UAAU,EAAE;AAAd,OAAP;;AACF,SAAK,cAAL;AACE,aAAO;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMG,UAAU,GAAIC,MAAD,IAAY;AACpC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMV,cAAc,CAACW,SAAf,CAAyBH,MAAzB,CAAvB;AACAC,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAG,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAE,kBADC;AAEPM,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAEH,QAAQ,CAACG,OADX;AAEPP,UAAAA,IAAI,EAAE;AAFC;AAFF,OAAD,CAAR;AAOD,KAZD,CAYE,OAAOQ,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGAG,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAE,kBADC;AAEPM,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAEC,CAAC,CAACJ,QADJ;AAEPJ,UAAAA,IAAI,EAAE;AAFC;AAFF,OAAD,CAAR;AAOD;AACF,GA5BD;AA6BD,CA9BM;AAgCP,eAAeH,cAAf","sourcesContent":["import contactService from \"../services/contact\";\n\nconst initialState = { isFetching: false };\n\nconst contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONTACT_REQUEST\":\n      return { isFetching: true };\n    case \"MESSAGE_SENT\":\n      return { isFetching: false };\n    default:\n      return state;\n  }\n};\n\nexport const setMessage = (values) => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"CONTACT_REQUEST\",\n    });\n    try {\n      const response = await contactService.sendEmail(values);\n      dispatch({\n        type: \"MESSAGE_SENT\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: response.message,\n          type: \"success\",\n        },\n      });\n    } catch (e) {\n      dispatch({\n        type: \"MESSAGE_SENT\",\n      });\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        content: {\n          message: e.response,\n          type: \"danger\",\n        },\n      });\n    }\n  };\n};\n\nexport default contactReducer;\n"]},"metadata":{},"sourceType":"module"}